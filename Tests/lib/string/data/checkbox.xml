<?xml version="1.0"?>
<root>
  <item>
    <name>General</name>
    <item>
      <name>Suppress Growl warning</name>
      <appendix>This option suppresses the warning: "Growl is not running"</appendix>
      <appendix></appendix>
      <appendix>If you want to suppress the Growl notification itself,</appendix>
      <appendix>disable the notification of KeyRemap4MacBook from Growl Preferences.</appendix>
      <identifier essential="true">general.suppress_growl_warning</identifier>
    </item>
    <item>
      <name>____________________________________________________________</name>
    </item>
    <item>
      <name>Don't remap an internal keyboard</name>
      <identifier essential="true">general.dont_remap_internal</identifier>
    </item>
    <item>
      <name>Don't remap external keyboards</name>
      <identifier essential="true">general.dont_remap_external</identifier>
    </item>
    <item>
      <name>Don't remap any pointing devices</name>
      <identifier essential="true">general.dont_remap_any_pointing</identifier>
    </item>
    <item>
      <name>Don't remap Apple's keyboards</name>
      <identifier essential="true">general.dont_remap_apple_keyboard</identifier>
    </item>
    <item>
      <name>Don't remap Apple's pointing devices</name>
      <identifier essential="true">general.dont_remap_apple_pointing</identifier>
    </item>
    <item>
      <name>Don't remap non-Apple's keyboards</name>
      <appendix>(For example: Generic USB keyboard)</appendix>
      <identifier essential="true">general.dont_remap_non_apple_keyboard</identifier>
    </item>
    <item>
      <name>Don't remap non-Apple's pointing devices</name>
      <appendix>(For example: Generic USB mouse)</appendix>
      <identifier essential="true">general.dont_remap_non_apple_pointing</identifier>
    </item>
    <item>
      <name>Don't remap keyboards which has third vendor's driver</name>
      <appendix>(Logitech, Microsoft, Kensington, ...)</appendix>
      <identifier essential="true">general.dont_remap_thirdvendor_keyboard</identifier>
    </item>
    <item>
      <name>Don't remap pointing devices which has third vendor's driver</name>
      <appendix>(Logitech, Microsoft, Kensington, ...)</appendix>
      <identifier essential="true">general.dont_remap_thirdvendor_pointing</identifier>
    </item>
    <item>
      <name>Excluding Devices</name>
      <item>
        <name>Don't Remap Logitech Cordless Presenter</name>
        <identifier essential="true">general.dont_remap_logitech_cordless_presenter</identifier>
      </item>
    </item>
    <item>
      <name>____________________________________________________________</name>
    </item>
    <item>
      <name>Pass-Through CapsLock LED status</name>
      <appendix>(Don't enable this when you use "XXX to CapsLock")</appendix>
      <identifier essential="true">general.passthrough_capslock_led_status</identifier>
    </item>
    <item>
      <name>____________________________________________________________</name>
    </item>
    <item>
      <name>Don't restore modifiers in the mouse event</name>
      <appendix></appendix>
      <appendix>For example, when you use Option+Tab to Command+Tab,</appendix>
      <appendix>we send "Command+Click" when you did a mouse click while</appendix>
      <appendix>pushing the Option key after you pushed Option+Tab.</appendix>
      <appendix>"Option+Click" should be output, but this option changes this behavior.</appendix>
      <identifier essential="true">general.lazy_modifiers_with_mouse_event</identifier>
    </item>
    <item>
      <name>____________________________________________________________</name>
    </item>
    <item>
      <name>Disable NumPad Hack</name>
      <appendix>(Don't change Fn+JKL.. to NumPad, and other Fn+key combinations)</appendix>
      <identifier essential="true">general.disable_numpad_hack</identifier>
    </item>
  </item>

  <item>
    <name>Pass Through Mode (Disable all settings temporarily)</name>
    <item>
      <!-- Pass Through Mode Core -->
      <name>What is Pass Through Mode?</name>
      <appendix>You can disable all settings temporarily.</appendix>
      <appendix>Turn on a setting below, and toggle "Pass Through Mode".</appendix>
      <identifier vk_config="true">notsave.passthrough</identifier>
      <autogen>__ShowStatusMessage__ Pass Through</autogen>
    </item>
    <item>
      <name>Change Fn+Escape to toggle "Pass Through Mode"</name>
      <identifier>passthrough.fnescape</identifier>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, ModifierFlag::FN, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_passthrough</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [Escape+Tab] to toggle "Pass Through Mode"</name>
      <identifier>passthrough.escapetab</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::ESCAPE, KeyCode::TAB, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_passthrough</autogen>
    </item>
    <item>
      <name>Holding Escape to toggle "Pass Through Mode"</name>
      <identifier>passthrough.holding_escape</identifier>
      <autogen>__HoldingKeyToKey__ KeyCode::ESCAPE, ModifierFlag::NONE, KeyCode::ESCAPE, KeyCode::VK_NONE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_passthrough</autogen>
    </item>
  </item>

  <item>
    <name>Pointing Device</name>
    <item>
      <name>CursorMove to ScrollWheel</name>
      <item>
        <name>We can scroll pages by moving the mouse pointer.</name>
        <appendix>(Also, you can generate a click event if you click without moving)</appendix>
        <identifier vk_config="true">notsave.pointing_relative_to_scroll</identifier>
        <autogen>__PointingRelativeToScroll__ PointingButton::NONE</autogen>
      </item>
      <item>
        <name>RightClick+CursorMove to ScrollWheel</name>
        <identifier>remap.pointing_relative_rightclick_to_scroll</identifier>
        <autogen>__PointingRelativeToScroll__ PointingButton::RIGHT</autogen>
      </item>
      <item>
        <name>MiddleClick+CursorMove to ScrollWheel</name>
        <identifier>remap.pointing_relative_middleclick_to_scroll</identifier>
        <autogen>__PointingRelativeToScroll__ PointingButton::MIDDLE</autogen>
      </item>
      <item>
        <name>MouseButton4+CursorMove to ScrollWheel</name>
        <identifier>remap.pointing_relative_mousebutton4_to_scroll</identifier>
        <autogen>__PointingRelativeToScroll__ PointingButton::BUTTON4</autogen>
      </item>
      <item>
        <name>Control+RightClick+CursorMove to ScrollWheel</name>
        <identifier>remap.pointing_relative_controlRightClick_to_scroll</identifier>
        <autogen>__PointingRelativeToScroll__ PointingButton::RIGHT, VK_CONTROL</autogen>
      </item>
      <item>
        <name>Shift+RightClick+CursorMove to ScrollWheel</name>
        <identifier>remap.pointing_relative_shiftRightClick_to_scroll</identifier>
        <autogen>__PointingRelativeToScroll__ PointingButton::RIGHT, VK_SHIFT</autogen>
      </item>
      <item>
        <name>Command+Control+CursorMove to ScrollWheel</name>
        <identifier>remap.pointing_relative_commandControl_to_scroll</identifier>
        <autogen>__PointingRelativeToScroll__ PointingButton::NONE, VK_COMMAND | VK_CONTROL</autogen>
      </item>
      <item>
        <name>Command+CursorMove to ScrollWheel</name>
        <identifier>remap.pointing_relative_Control_to_scroll</identifier>
        <autogen>__PointingRelativeToScroll__ PointingButton::NONE, VK_COMMAND</autogen>
      </item>
      <item>
        <name>Fn+CursorMove to ScrollWheel</name>
        <identifier>remap.pointing_relative_fn_to_scroll</identifier>
        <autogen>__PointingRelativeToScroll__ PointingButton::NONE, ModifierFlag::FN</autogen>
      </item>
      <item>
        <name>Option+CursorMove to ScrollWheel</name>
        <identifier>remap.pointing_relative_option_to_scroll</identifier>
        <autogen>__PointingRelativeToScroll__ PointingButton::NONE, VK_OPTION</autogen>
      </item>
      <item>
        <name>(Simultaneous) LeftClick+RightClick+CursorMove to ScrollWheel</name>
        <identifier>remap.pointing_relative_LRClick_to_scroll</identifier>
        <autogen>__SimultaneousKeyPresses__ PointingButton::LEFT, PointingButton::RIGHT, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_pointing_relative_to_scroll</autogen>
      </item>
      <item>
        <name>Space+CursorMove to ScrollWheel</name>
        <identifier>remap.pointing_relative_space_to_scroll</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::SPACE, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_pointing_relative_to_scroll, KeyCode::SPACE</autogen>
      </item>
      <item>
        <name>CursorMove to ScrollWheel Option</name>
        <item>
          <name>Reverse Vertical Scrolling</name>
          <identifier essential="true">option.pointing_reverse_vertical_scrolling</identifier>
        </item>
        <item>
          <name>Reverse Horizontal Scrolling</name>
          <identifier essential="true">option.pointing_reverse_horizontal_scrolling</identifier>
        </item>
        <item>
          <name>Enable dynamic scrollwheel direction fixation (Horizontal/Vertical)</name>
          <identifier essential="true">option.pointing_enable_scrollwheel_fixation</identifier>
        </item>
        <item>
          <name>Disable Horizontal Scroll</name>
          <identifier essential="true">option.pointing_disable_horizontal_scroll</identifier>
        </item>
        <item>
          <name>Disable Vertical Scroll</name>
          <identifier essential="true">option.pointing_disable_vertical_scroll</identifier>
        </item>
        <item>
          <name>Disable Momentum Scroll</name>
          <identifier essential="true">option.pointing_disable_momentum_scroll</identifier>
        </item>
      </item>
    </item>
    <item>
      <name>Button to Button</name>
      <item>
        <name>Command+LeftClick to Mouse Button 4</name>
        <identifier>remap.pointing_cmdLeftclick2button4</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::LEFT, VK_COMMAND, PointingButton::BUTTON4</autogen>
      </item>
      <item>
        <name>Control+LeftClick to MiddleClick</name>
        <identifier>remap.pointing_controlLeftclick2middleclick</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::LEFT, VK_CONTROL, PointingButton::MIDDLE</autogen>
      </item>
      <item>
        <name>Fn+LeftClick to MiddleClick</name>
        <identifier>remap.pointing_fnLeftclick2middleclick</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::LEFT, ModifierFlag::FN, PointingButton::MIDDLE</autogen>
      </item>
      <item>
        <name>Fn+LeftClick to Option_L+LeftClick</name>
        <identifier>remap.pointing_fnLeftclick2optionLeftclick</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::LEFT, ModifierFlag::FN, PointingButton::LEFT, ModifierFlag::OPTION_L</autogen>
      </item>
      <item>
        <name>Option+LeftClick to MiddleClick</name>
        <identifier>remap.pointing_optionLeftclick2middleclick</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::LEFT, VK_OPTION, PointingButton::MIDDLE</autogen>
      </item>
      <item>
        <name>RightClick to LeftClick</name>
        <identifier>remap.pointing_rightclick2leftclick</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::RIGHT, PointingButton::LEFT</autogen>
      </item>
      <item>
        <name>Control+RightClick to Double-LeftClick</name>
        <identifier>remap.pointing_controlrightclick2doubleleftclick</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::RIGHT, VK_CONTROL, PointingButton::LEFT, PointingButton::LEFT</autogen>
      </item>
      <item>
        <name>Fn+RightClick to Mouse Button 5</name>
        <identifier>remap.pointing_fnRightclick2button5</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::RIGHT, ModifierFlag::FN, PointingButton::BUTTON5</autogen>
      </item>
      <item>
        <name>MiddleClick to Command+LeftClick</name>
        <identifier>remap.pointing_middleclick2commandLeftclick</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::MIDDLE, PointingButton::LEFT, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>(Simultaneous) LeftClick+RightClick to MiddleClick</name>
        <identifier>remap.pointing_leftrightclick2middleclick</identifier>
        <autogen>__SimultaneousKeyPresses__ PointingButton::LEFT, PointingButton::RIGHT, PointingButton::MIDDLE</autogen>
      </item>
      <item>
        <name>(Simultaneous) LeftClick+RightClick to Button4</name>
        <identifier>remap.pointing_leftrightclick2button4</identifier>
        <autogen>__SimultaneousKeyPresses__ PointingButton::LEFT, PointingButton::RIGHT, PointingButton::BUTTON4</autogen>
      </item>
      <item>
        <name>(Simultaneous) LeftClick+RightClick to Button5</name>
        <identifier>remap.pointing_leftrightclick2button5</identifier>
        <autogen>__SimultaneousKeyPresses__ PointingButton::LEFT, PointingButton::RIGHT, PointingButton::BUTTON5</autogen>
      </item>
    </item>
    <item>
      <name>Button to Key</name>
      <item>
        <name>MiddleClick to Dashboard</name>
        <identifier>remap.pointing_middleclick2dashboard</identifier>
        <autogen>__PointingButtonToKey__ PointingButton::MIDDLE, KeyCode::DASHBOARD</autogen>
      </item>
      <item>
        <name>MiddleClick to Expose</name>
        <identifier>remap.pointing_middleclick2expose</identifier>
        <autogen>__PointingButtonToKey__ PointingButton::MIDDLE, KeyCode::EXPOSE_ALL</autogen>
      </item>
      <item>
        <name>MiddleClick to F8</name>
        <identifier>remap.pointing_middleclick2f8</identifier>
        <autogen>__PointingButtonToKey__ PointingButton::MIDDLE, KeyCode::F8</autogen>
      </item>
      <item>
        <name>MiddleClick to Control+F4 (= Move focus to active or next window)</name>
        <identifier>remap.pointing_middleclick2controlF4</identifier>
        <autogen>__PointingButtonToKey__ PointingButton::MIDDLE, KeyCode::F4, ModifierFlag::CONTROL_L</autogen>
      </item>
      <item>
        <name>Set 1: Button4 to Command+[ (Back)</name>
        <identifier>remap.pointing_button4_to_command_bracket_left</identifier>
        <autogen>__PointingButtonToKey__ PointingButton::BUTTON4, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>Set 1: Button5 to Command+] (Forward)</name>
        <identifier>remap.pointing_button5_to_command_bracket_right</identifier>
        <autogen>__PointingButtonToKey__ PointingButton::BUTTON5, KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>Set 2: Button4 to Command+] (Forward)</name>
        <identifier>remap.pointing_button4_to_command_bracket_right</identifier>
        <autogen>__PointingButtonToKey__ PointingButton::BUTTON4, KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>Set 2: Button5 to Command+[ (Back)</name>
        <identifier>remap.pointing_button5_to_command_bracket_left</identifier>
        <autogen>__PointingButtonToKey__ PointingButton::BUTTON5, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>(Simultaneous) LeftClick+RightClick to Dashboard</name>
        <identifier>remap.pointing_leftrightclick2dashboard</identifier>
        <autogen>__SimultaneousKeyPresses__ PointingButton::LEFT, PointingButton::RIGHT, KeyCode::DASHBOARD</autogen>
      </item>
      <item>
        <name>(Simultaneous) LeftClick+RightClick to Expose</name>
        <identifier>remap.pointing_leftrightclick2expose</identifier>
        <autogen>__SimultaneousKeyPresses__ PointingButton::LEFT, PointingButton::RIGHT, KeyCode::EXPOSE_ALL</autogen>
      </item>
      <item>
        <name>(Simultaneous) LeftClick+RightClick to F8</name>
        <identifier>remap.pointing_leftrightclick2f8</identifier>
        <autogen>__SimultaneousKeyPresses__ PointingButton::LEFT, PointingButton::RIGHT, KeyCode::F8</autogen>
      </item>
    </item>
    <item>
      <name>Change ScrollWheel</name>
      <item>
        <name>Fn+ScrollWheel to Brightness Control</name>
        <appendix>(Fn+ScrollWheel Up to Brightness Up</appendix>
        <appendix>(Fn+ScrollWheel Down to Brightness Down</appendix>
        <identifier>remap.fn_scroll_to_brightness_control</identifier>
        <autogen>__ScrollWheelToKey__ ScrollWheel::UP, ModifierFlag::FN | ModifierFlag::NONE,
          KeyCode::VK_CONSUMERKEY_BRIGHTNESS_UP</autogen>
        <autogen>__ScrollWheelToKey__ ScrollWheel::DOWN, ModifierFlag::FN | ModifierFlag::NONE,
          KeyCode::VK_CONSUMERKEY_BRIGHTNESS_DOWN</autogen>
      </item>
    </item>
    <item>
      <name>Change Modifiers on ScrollWheel</name>
      <item>
        <name>Change Control+ScrollWheel to Command+ScrollWheel</name>
        <identifier>remap.pointing_control_scrollwheel_to_command_scrollwheel</identifier>
        <autogen>__ScrollWheelToScrollWheel__ VK_CONTROL, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>Change Command+ScrollWheel to Control+ScrollWheel</name>
        <identifier>remap.pointing_command_scrollwheel_to_control_scrollwheel</identifier>
        <autogen>__ScrollWheelToScrollWheel__ VK_COMMAND, ModifierFlag::CONTROL_L</autogen>
      </item>
      <item>
        <name>Strip Modifiers</name>
        <item>
          <name>Command+ScrollWheel to ScrollWheel (strip Command)</name>
          <identifier>remap.pointing_strip_command</identifier>
          <autogen>__StripModifierFromScrollWheel__ VK_COMMAND</autogen>
        </item>
        <item>
          <name>Control+ScrollWheel to ScrollWheel (strip Control)</name>
          <identifier>remap.pointing_strip_control</identifier>
          <autogen>__StripModifierFromScrollWheel__ VK_CONTROL</autogen>
        </item>
        <item>
          <name>Option+ScrollWheel to ScrollWheel (strip Option)</name>
          <identifier>remap.pointing_strip_option</identifier>
          <autogen>__StripModifierFromScrollWheel__ VK_OPTION</autogen>
        </item>
        <item>
          <name>Shift+ScrollWheel to ScrollWheel (strip Shift)</name>
          <identifier>remap.pointing_strip_shift</identifier>
          <autogen>__StripModifierFromScrollWheel__ VK_SHIFT</autogen>
        </item>
        <item>
          <name>Strip any modifiers from ScrollWheel</name>
          <identifier>remap.pointing_strip_any</identifier>
          <autogen>__StripModifierFromScrollWheel__ VK_MOD_ANY</autogen>
        </item>
      </item>
    </item>
  </item>

  <item>
    <name>Change Arrow(Up/Down/Left/Right) Key</name>
    <item>
      <name>Arrow(Down/Left/Right) to Command_L</name>
      <appendix>Disable Up-Arrow</appendix>
      <identifier>remap.arrow2commandL</identifier>
      <autogen>__KeyToKey__ KeyCode::CURSOR_UP, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN, KeyCode::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, KeyCode::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Arrow(Down/Left/Right) to Fn</name>
      <appendix>Disable Up-Arrow</appendix>
      <identifier>remap.arrow2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::CURSOR_UP, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN, KeyCode::FN</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, KeyCode::FN</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Arrow(Down/Left/Right) to Option_L</name>
      <appendix>Disable Up-Arrow</appendix>
      <identifier>remap.arrow2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::CURSOR_UP, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN, KeyCode::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, KeyCode::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Command+Arrow to Option_L+Arrow</name>
      <identifier>remap.commandArrow2optionLarrow</identifier>
      <autogen>__KeyToKey__ KeyCode::CURSOR_UP, VK_COMMAND, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN, VK_COMMAND, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_COMMAND, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, VK_COMMAND, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Control+Arrow to Option_L+Arrow</name>
      <identifier>remap.controlArrow2optionLarrow</identifier>
      <autogen>__KeyToKey__ KeyCode::CURSOR_UP,    VK_CONTROL, KeyCode::CURSOR_UP,    ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN,  VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT,  VK_CONTROL, KeyCode::CURSOR_LEFT,  ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Option+Arrow to Command_L+Arrow</name>
      <identifier>remap.optionArrow2commandLarrow</identifier>
      <autogen>__KeyToKey__ KeyCode::CURSOR_UP,    VK_OPTION, KeyCode::CURSOR_UP,    ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN,  VK_OPTION, KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT,  VK_OPTION, KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, VK_OPTION, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Command_R+Arrow to PageUp/PageDown/Home/End</name>
      <identifier>remap.commandR_arrow2PgUpDnHomeEnd</identifier>
      <autogen>__KeyToKey__ KeyCode::CURSOR_UP,    ModifierFlag::COMMAND_R, KeyCode::PAGEUP</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_R, KeyCode::PAGEDOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_R, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_R, KeyCode::END</autogen>
    </item>
    <item>
      <name>Option_R+Arrow to PageUp/PageDown/Home/End</name>
      <identifier>remap.optionR_arrow2PgUpDnHomeEnd</identifier>
      <autogen>__KeyToKey__ KeyCode::CURSOR_UP, ModifierFlag::OPTION_R, KeyCode::PAGEUP</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_R, KeyCode::PAGEDOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_R, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_R, KeyCode::END</autogen>
    </item>
    <item>
      <name>Left-Arrow to Control_L</name>
      <identifier>remap.leftarrow2controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command+Left-Arrow to Shift_L+Home,Command_L+X</name>
      <appendix>(only in virtual machine, RDC)</appendix>
      <identifier>remap.commandLeftarrow2beginningofline_cut_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_COMMAND | ModifierFlag::NONE, KeyCode::HOME, ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Command+Left-Arrow to Shift_L+Home,Control_L+X</name>
      <appendix>(only in virtual machine, RDC)</appendix>
      <identifier>remap.commandLeftarrow2beginningofline_cut2_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_COMMAND | ModifierFlag::NONE, KeyCode::HOME, ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command+Left-Arrow to Command_L+Shift_L+Left-Arrow,Command_L+X</name>
      <appendix>(except virtual machine, RDC)</appendix>
      <identifier>remap.commandLeftarrow2beginningofline_cut</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_COMMAND | ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Command+Left-Arrow to Command_L+Shift_L+Left-Arrow,Control_L+X</name>
      <appendix>(except virtual machine, RDC)</appendix>
      <identifier>remap.commandLeftarrow2beginningofline_cut2</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_COMMAND | ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command+Right-Arrow to Shift_L+End,Command_L+X</name>
      <appendix>(only in virtual machine, RDC)</appendix>
      <identifier>remap.commandRightarrow2endofline_cut_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, VK_COMMAND | ModifierFlag::NONE, KeyCode::END, ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Command+Right-Arrow to Shift_L+End,Control_L+X</name>
      <appendix>(only in virtual machine, RDC)</appendix>
      <identifier>remap.commandRightarrow2endofline_cut2_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, VK_COMMAND | ModifierFlag::NONE, KeyCode::END, ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command+Right-Arrow to Command_L+Shift_L+Right-Arrow,Command_L+X</name>
      <appendix>(except virtual machine, RDC)</appendix>
      <identifier>remap.commandRightarrow2endofline_cut</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, VK_COMMAND | ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Command+Right-Arrow to Command_L+Shift_L+Right-Arrow,Control_L+X</name>
      <appendix>(except virtual machine, RDC)</appendix>
      <identifier>remap.commandRightarrow2endofline_cut2</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, VK_COMMAND | ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Use FN+Up/Down to adjust brightness</name>
      <appendix>FN+Up-Arrow to Brightness Up (Consumer)</appendix>
      <appendix>FN+Down-Arrow to Brightness Down (Consumer)</appendix>
      <identifier>remap.fnupdown_to_brightness_consumer</identifier>
      <autogen>__KeyToConsumer__ KeyCode::CURSOR_UP,   ConsumerKeyCode::BRIGHTNESS_UP</autogen>
      <autogen>__KeyToConsumer__ KeyCode::CURSOR_DOWN, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
    </item>
    <item>
      <name>Use FN+Up/Down to adjust brightness (Alternative)</name>
      <appendix>FN+Up-Arrow to Brightness Up (F15)</appendix>
      <appendix>FN+Down-Arrow to Brightness Down (F14)</appendix>
      <identifier>remap.fnupdown_to_brightness</identifier>
      <autogen>__KeyToKey__ KeyCode::CURSOR_UP,   KeyCode::F15</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN, KeyCode::F14</autogen>
    </item>

    <item>
      <name>The workaround for broken up and down keys</name>
      <item>
        <name>Change Shift+Cursor Left to Cursor Up</name>
        <identifier>remap.shiftleft2up</identifier>
        <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_SHIFT, KeyCode::CURSOR_UP</autogen>
      </item>
      <item>
        <name>Change Shift+Cursor Right to Cursor Down</name>
        <identifier>remap.shiftright2down</identifier>
        <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, VK_SHIFT, KeyCode::CURSOR_DOWN</autogen>
      </item>
      <item>
        <name>Change Command+Cursor Left to PageUp</name>
        <identifier>remap.commandleft2pageup</identifier>
        <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_COMMAND, KeyCode::PAGEUP</autogen>
      </item>
      <item>
        <name>Change Command+Cursor Right to PageDown</name>
        <identifier>remap.commandright2pagedown</identifier>
        <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, VK_COMMAND, KeyCode::PAGEDOWN</autogen>
      </item>
    </item>
  </item>

  <item>
    <name>Change Backquote(`) Key</name>
    <item>
      <name>Backquote(`) to CapsLock</name>
      <identifier>remap.backquote2capslock</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::CAPSLOCK</autogen>
    </item>
    <item>
      <name>Backquote(`) to Command_L</name>
      <identifier>remap.backquote2commandL</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Backquote(`) to Control_L</name>
      <identifier>remap.backquote2controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Backquote(`) to Option_L</name>
      <identifier>remap.backquote2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Backquote(`) to Shift_L</name>
      <identifier>remap.backquote2shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>Fn+Backquote(`) to Backslash(\)</name>
      <identifier>remap.fnbackquote2backslash</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::FN, KeyCode::BACKSLASH</autogen>
    </item>
    <item>
      <name>Backquote(`) to Delete</name>
      <identifier>remap.backquote2delete</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Backquote(`) to Escape</name>
      <identifier>remap.backquote2escape</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Control+Backquote(`) to Escape</name>
      <identifier>remap.controlbackquote_to_escape</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, VK_CONTROL, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Fn+Backquote(`) to Fn+Enter</name>
      <identifier>remap.fnbackquote2fnenter</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::FN, KeyCode::ENTER, ModifierFlag::FN</autogen>
    </item>
    <item>
      <name>Backquote(`) to Escape if no modifiers pressed</name>
      <identifier>remap.backquote2escape_withoutmodifiers</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::NONE, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Backquote(`) to Forward Delete</name>
      <identifier>remap.backquote2forwarddelete</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Backquote(`) to F8</name>
      <identifier>remap.backquote2f8</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::F8</autogen>
    </item>
    <item>
      <name>Backquote(`) to Cmd+Option+L</name>
      <identifier>remap.backquote2cmdoptionl</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::L, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Backquote(`) to Cmd+Space</name>
      <identifier>remap.backquote2cmdspace</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Backquote(`) to LeftClick</name>
      <identifier>remap.backquote2LeftClick</identifier>
      <autogen>__KeyToPointingButton__ KeyCode::BACKQUOTE, PointingButton::LEFT</autogen>
    </item>
    <item>
      <name>Swap Command+Backquote(`) and Option+Backquote(`)</name>
      <identifier>remap.swap_commandbackquote_optionbackquote</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::OPTION_L,  KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
    </item>
  </item>

  <item>
    <name>Change Backslash(\) Key</name>
    <item>
      <name>Backslash(\) to Fn</name>
      <appendix>(+ Fn+Backslash(\) to Backslash(\))</appendix>
      <identifier>remap.backslash_to_fn</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, ModifierFlag::FN, KeyCode::BACKSLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH,                   KeyCode::FN</autogen>
    </item>
    <item>
      <name>Backslash(\) to Delete</name>
      <identifier>remap.backslash2delete</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Backslash(\) to Delete</name>
      <appendix>(+ Fn+Backslash(\) to Backslash(\))</appendix>
      <appendix>(+ retain Shift+Backslash(\))</appendix>
      <identifier>remap.backslash2delete_retain_shiftbackslash</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, ModifierFlag::FN, KeyCode::BACKSLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, VK_SHIFT, KeyCode::BACKSLASH, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Backslash(\) to Enter</name>
      <identifier>remap.backslash2enter</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Backslash(\) to Forward Delete</name>
      <appendix>(+ Fn+Backslash(\) to Backslash(\))</appendix>
      <identifier>remap.backslash2forwarddelete</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, ModifierFlag::FN, KeyCode::BACKSLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Backslash(\) to Forward Delete</name>
      <appendix>(+ Fn+Backslash(\) to Backslash(\))</appendix>
      <appendix>(+ retain Shift+Backslash(\))</appendix>
      <identifier>remap.backslash2forwarddelete_retain_shiftbackslash</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, ModifierFlag::FN, KeyCode::BACKSLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, VK_SHIFT, KeyCode::BACKSLASH, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Backslash(\) to Forward Delete (if no other modifiers pressed)</name>
      <identifier>remap.backslash2forwarddelete_nomods</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Backslash(\) to Return</name>
      <identifier>remap.backslash2return</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::RETURN</autogen>
    </item>
  </item>

  <item>
    <name>Change Bracket([,]) Keys</name>
    <item>
      <name>Swap Bracket([]) and Shift+Bracket({})</name>
      <identifier>remap.swap_bracket_and_shiftbracket</identifier>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::NONE,
        KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, ModifierFlag::NONE,
        KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_SHIFT | ModifierFlag::NONE,
        KeyCode::BRACKET_LEFT
      </autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, VK_SHIFT | ModifierFlag::NONE,
        KeyCode::BRACKET_RIGHT
      </autogen>
    </item>
    <item>
      <name>Left Bracket([) to L</name>
      <identifier>remap.leftbracket2l</identifier>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::L</autogen>
    </item>
    <item>
      <name>Right Bracket(]) to CapsLock</name>
      <identifier>remap.rightbracket2capslock</identifier>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, KeyCode::CAPSLOCK</autogen>
    </item>
    <item>
      <name>Fn+Right Bracket(]) to Backslash(\)</name>
      <identifier>remap.fnrightbracket2backslash</identifier>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, ModifierFlag::FN, KeyCode::BACKSLASH</autogen>
    </item>
  </item>

  <item>
    <name>Change CapsLock Key</name>
    <item>
      <name>CapsLock is an exceptional key.</name>
      <appendix>Use "PCKeyboardHack" to change CapsLock key.</appendix>
      <appendix>&#8594; http://pqrs.org/macosx/keyremap4macbook/extra.html</appendix>
    </item>
    <item>
      <name>Tips:</name>
      <appendix>You can change CapsLock to an other key in PCKeyboardHack.</appendix>
      <appendix>For example, you can change CapsLock to Escape by setting keycode=53.</appendix>
      <appendix></appendix>
      <appendix>If you want to change CapsLock to modifier+key such as Command+Space,</appendix>
      <appendix>change the key code of CapsLock to 110 in PCKeyboardHack.</appendix>
      <appendix>(keycode:110 is PC Application Key)</appendix>
      <appendix></appendix>
      <appendix>Then, change PC Application Key in KeyRemap4MacBook.</appendix>
      <appendix>For example, activate the following setting to change CapsLock to Command+Space</appendix>
      <appendix>"For PC Users &gt; Change PC Application Key &gt; Application Key to Command_L+Space"</appendix>
    </item>
  </item>

  <item>
    <name>Change Command_L Key (Left Command)</name>
    <item>
      <name>Command_L to Control_L</name>
      <identifier>remap.commandL2controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command_L to Control_L (only in virtual machine, RDC)</name>
      <identifier>remap.commandL2controlL_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command_L to Control_L (only in RDC)</name>
      <identifier>remap.commandL2controlL_rdc</identifier>
      <only>REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command_L to Control_L (only in Terminal)</name>
      <identifier>remap.commandL2controlL_terminal</identifier>
      <only>TERMINAL</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command_L to Control_L (only in X11)</name>
      <identifier>remap.commandL2controlL_x11</identifier>
      <only>X11</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command_L to Control_L (only in Emacs)</name>
      <identifier>remap.commandL2controlL_emacs</identifier>
      <only>EMACS</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command_L to Control_L (except Emacs)</name>
      <identifier>remap.commandL2controlL_ex_emacs</identifier>
      <not>EMACS</not>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command_L to Control_L (except Terminal, Chrome, RDC)</name>
      <identifier>remap.commandL2controlL_excustom</identifier>
      <not>TERMINAL, GOOGLE_CHROME, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command_L to Control_L (except Terminal, Virtual Machine, RDC)</name>
      <identifier>remap.commandL2controlL_extermvm</identifier>
      <not>TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command_L to Control_L (except Virtual Machine, RDC)</name>
      <identifier>remap.commandL2controlL_exvm</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command_L to Fn</name>
      <identifier>remap.commandL2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Command_L to Option_L</name>
      <identifier>remap.commandL2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Command_L to Option_L (only in virtual machine, RDC)</name>
      <identifier>remap.commandL2optionL_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Command_L to Option_L (only in Emacs)</name>
      <identifier>remap.commandL2optionL_emacs</identifier>
      <only>EMACS</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Command_L to Shift_L</name>
      <identifier>remap.commandL2shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>Command_L to Sticky Command_L</name>
      <identifier>remap.sticky_commandL</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_STICKY_COMMAND_L</autogen>
    </item>
    <item>
      <name>Command_L to ModifierFlag::Extra2</name>
      <identifier>remap.commandL2extra2</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::VK_MODIFIER_EXTRA2</autogen>
    </item>
    <item>
      <name>Command_L to Backquote(`)</name>
      <identifier>remap.commandL2backquote</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::BACKQUOTE</autogen>
    </item>
    <item>
      <name>Command_L to Escape</name>
      <identifier>remap.commandL2escape</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Command_L to Escape (only in Emacs)</name>
      <identifier>remap.commandL2escape_emacs</identifier>
      <only>EMACS</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Command_R+Command_L to Escape</name>
      <appendix>(Note: Escape is sent when you release Command_L)</appendix>
      <identifier>remap.commandRcommandL2escape</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, ModifierFlag::COMMAND_R, KeyCode::COMMAND_L, ModifierFlag::COMMAND_R, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Control_L+Command_L to Escape</name>
      <appendix>(Note: Escape is sent when you release Command_L)</appendix>
      <identifier>remap.controlLcommandL2escape</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, ModifierFlag::CONTROL_L, KeyCode::COMMAND_L, ModifierFlag::CONTROL_L, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Shift_L+Command_L to Escape</name>
      <appendix>(Note: Escape is sent when you release Command_L)</appendix>
      <identifier>remap.shiftLcommandL2escape</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, ModifierFlag::SHIFT_L, KeyCode::COMMAND_L, ModifierFlag::SHIFT_L, KeyCode::ESCAPE</autogen>
    </item>
  </item>

  <item>
    <name>Change Command_R Key (Right Command)</name>
    <item>
      <name>Command_R to Command_R</name>
      <appendix>(+ When you type Command_R only, send Delete)</appendix>
      <identifier>remap.commandR2commandR_delete</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Command_R to Command_R</name>
      <appendix>(+ When you type Command_R only, send Delete) + [KeyRepeat]</appendix>
      <identifier>remap.commandR2commandR_delete_keyrepeat</identifier>
      <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Command_R to Command_R</name>
      <appendix>(+ When you type Command_R only, send Enter)</appendix>
      <identifier>remap.commandR2commandR_enter</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Command_R to Command_R</name>
      <appendix>(+ When you type Command_R only, send Enter) + [KeyRepeat]</appendix>
      <identifier>remap.commandR2commandR_enter_keyrepeat</identifier>
      <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Command_R to Command_R</name>
      <appendix>(+ When you type Command_R only, toggle IM)</appendix>
      <item>
        <name>When you type Command_R only, send Command+Space</name>
        <appendix>(except virtual machine, RDC)</appendix>
        <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
        <identifier>remap.commandR2commandR_commandSpace</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>When you type Command_R only, send Option+Backquote</name>
        <appendix>(only in virtual machine, RDC)</appendix>
        <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
        <identifier>remap.commandR2commandR_optionBackquote_vm</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::VK_LAZY_COMMAND_R, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L</autogen>
      </item>
    </item>
    <item>
      <name>Command_R to Control_L</name>
      <identifier>remap.commandR2controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Option_R+Command_R to Control_L</name>
      <identifier>remap.optionRcommandR2controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, ModifierFlag::OPTION_R, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command_R to Control_R (only in virtual machine, RDC)</name>
      <identifier>remap.commandR2controlR_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::CONTROL_R</autogen>
    </item>
    <item>
      <name>Command_R to Control_L (only in X11)</name>
      <identifier>remap.commandR2controlL_x11</identifier>
      <only>X11</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command_R to Control_L (only in Emacs)</name>
      <identifier>remap.commandR2controlL_emacs</identifier>
      <only>EMACS</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command_R to Fn</name>
      <identifier>remap.commandR2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Command_R to Fn (only in virtual machine)</name>
      <identifier>remap.commandR2fn_vm</identifier>
      <only>VIRTUALMACHINE</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Option_R+Command_R to Fn</name>
      <identifier>remap.optionRcommandR2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, ModifierFlag::OPTION_R, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Command_R to Option_L</name>
      <identifier>remap.commandR2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Command_R to Option_R</name>
      <identifier>remap.commandR2optionR</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
    </item>
    <item>
      <name>Command_R to Option_R (only in Emacs, Terminal, X11)</name>
      <identifier>remap.commandR2optionR_etx</identifier>
      <only>EMACS, TERMINAL, X11</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
    </item>
    <item>
      <name>Command_R to Shift_L</name>
      <identifier>remap.commandR2shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>Command_R to Sticky Command_R</name>
      <identifier>remap.sticky_commandR</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_STICKY_COMMAND_R</autogen>
    </item>
    <item>
      <name>CommandR to ModifierFlag::Extra1</name>
      <identifier>remap.commandR2extra1</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::VK_MODIFIER_EXTRA1</autogen>
    </item>
    <item>
      <name>Command_R to Enter</name>
      <identifier>remap.commandR2enter</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Command_R to Escape</name>
      <identifier>remap.commandR2escape</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Command_R to Delete</name>
      <identifier>remap.commandR2delete</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Command_R to Forward Delete</name>
      <identifier>remap.commandR2forwarddelete</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Command_R to Home</name>
      <identifier>remap.commandR2home</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::HOME</autogen>
    </item>
    <item>
      <name>Command_R to Home (only in virtual machine, RDC)</name>
      <identifier>remap.commandR2home_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::HOME</autogen>
    </item>
    <item>
      <name>Command_R to Home (only in virtual machine, RDC)</name>
      <appendix>(+ Shift+Command_R to Shift+Home,Control_L+C)</appendix>
      <identifier>remap.commandR2home_vm_ex</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, VK_SHIFT, KeyCode::HOME, ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::HOME</autogen>
    </item>
    <item>
      <name>Command_R to Home (only in virtual machine, RDC)</name>
      <appendix>(+ Shift+Command_R to Shift+Home,Command_L+C)</appendix>
      <identifier>remap.commandR2home_vm_ex2</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, VK_SHIFT, KeyCode::HOME, ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::HOME</autogen>
    </item>
    <item>
      <name>Command_R to Command_L+Left-Arrow (beginning-of-line)</name>
      <appendix>(except virtual machine, RDC)</appendix>
      <identifier>remap.commandR2commandLleftarrow</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Command_R to Command_L+Left-Arrow (beginning-of-line)</name>
      <appendix>(+ Shift+Command_R to Command_L+Shift_L+Left-Arrow,Command_L+C)</appendix>
      <appendix>(except virtual machine, RDC)</appendix>
      <identifier>remap.commandR2commandLleftarrow_ex</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Command_R to Command_L+Left-Arrow (beginning-of-line)</name>
      <appendix>(+ Shift+Command_R to Command_L+Shift_L+Left-Arrow,Control_L+C)</appendix>
      <appendix>(except virtual machine, RDC)</appendix>
      <identifier>remap.commandR2commandLleftarrow_ex2</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Command_R to Command_L+Left-Arrow (beginning-of-line)</name>
      <appendix>(+ Control+Command_R, to Command_L+Up-Arrow) (beginning-of-buffer)</appendix>
      <appendix>(Except in Virtual Machine, RDC)</appendix>
      <identifier>remap.commandR2fnleftarrow</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, VK_CONTROL, KeyCode::CURSOR_UP,   ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R,             KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Command_R to Command_L+Left-Arrow (beginning-of-line)</name>
      <identifier>remap.commandR2commandLleftarrow_all</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Command_R to PageUp</name>
      <identifier>remap.commandR2pageup</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::PAGEUP</autogen>
    </item>
    <item>
      <name>Command_R to Space</name>
      <identifier>remap.commandR2space</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Command_R to LeftClick</name>
      <identifier>remap.commandR2leftclick</identifier>
      <autogen>__KeyToPointingButton__ KeyCode::COMMAND_R, PointingButton::LEFT</autogen>
    </item>
    <item>
      <name>Command_R to MiddleClick</name>
      <identifier>remap.commandR2middleclick</identifier>
      <autogen>__KeyToPointingButton__ KeyCode::COMMAND_R, PointingButton::MIDDLE</autogen>
    </item>
    <item>
      <name>Command_R to RightClick</name>
      <identifier>remap.commandR2rightclick</identifier>
      <autogen>__KeyToPointingButton__ KeyCode::COMMAND_R, PointingButton::RIGHT</autogen>
    </item>
    <item>
      <name>Command_L+Command_R to Return</name>
      <appendix>(Note: Return is sent when you release Command_R)</appendix>
      <identifier>remap.commandLcommandR2return</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, ModifierFlag::COMMAND_L, KeyCode::COMMAND_R, ModifierFlag::COMMAND_L, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Command_L+Command_R to Enter</name>
      <appendix>(Note: Enter is sent when you release Command_R)</appendix>
      <identifier>remap.commandLcommandR2enter</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, ModifierFlag::COMMAND_L, KeyCode::COMMAND_R, ModifierFlag::COMMAND_L, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Control_L+Command_R to Return</name>
      <appendix>(Note: Return is sent when you release Command_R)</appendix>
      <identifier>remap.controlLcommandR2return</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, ModifierFlag::CONTROL_L, KeyCode::COMMAND_R, ModifierFlag::CONTROL_L, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Shift_L+Command_R to Return</name>
      <appendix>(Note: Return is sent when you release Command_R)</appendix>
      <identifier>remap.shiftLcommandR2return</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, ModifierFlag::SHIFT_L, KeyCode::COMMAND_R, ModifierFlag::SHIFT_L, KeyCode::RETURN</autogen>
    </item>
  </item>

  <item>
    <name>Change Control_L Key (Left Control)</name>
    <item>
      <name>Control_L to Command_L</name>
      <identifier>remap.controlL2commandL</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control_L to Command_L (only in virtual machine, RDC)</name>
      <identifier>remap.controlL2commandL_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control_L to Command_L (only in Terminal)</name>
      <identifier>remap.controlL2commandL_terminal</identifier>
      <only>TERMINAL</only>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control_L to Command_L (only in X11)</name>
      <identifier>remap.controlL2commandL_x11</identifier>
      <only>X11</only>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control_L to Command_L (except Emacs)</name>
      <identifier>remap.controlL2commandL_ex_emacs</identifier>
      <not>EMACS</not>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control_L to Command_L (except Terminal, Chrome, RDC)</name>
      <identifier>remap.controlL2commandL_excustom</identifier>
      <not>TERMINAL, GOOGLE_CHROME, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control_L to Command_L (except Terminal, Virtual Machine, RDC)</name>
      <identifier>remap.controlL2commandL_extermvm</identifier>
      <not>TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control_L to Command_L (except Virtual Machine, RDC)</name>
      <identifier>remap.controlL2commandL_exvm</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control_L to Control_L</name>
      <appendix>(+ When you type Control_L only, send Delete)</appendix>
      <identifier>remap.controlL2controlL_delete</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Control_L to Control_L</name>
      <appendix>(+ When you type Control_L only, send Delete) + [KeyRepeat]</appendix>
      <identifier>remap.controlL2controlL_delete_keyrepeat</identifier>
      <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Control_L to Control_L</name>
      <appendix>(+ When you type Control_L only without other modifiers, send Delete) + [KeyRepeat]</appendix>
      <identifier>remap.controlL2controlL_delete_nomod_keyrepeat</identifier>
      <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::CONTROL_L, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::CONTROL_L, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Control_L to Control_L</name>
      <appendix>(+ When you type Control_L only, send Escape)</appendix>
      <identifier>remap.controlL2controlL_escape</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Fn+Control_L to Control_R</name>
      <identifier>remap.fncontrolL2controlR</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, ModifierFlag::FN, KeyCode::CONTROL_R</autogen>
    </item>
    <item>
      <name>Control_L to Fn</name>
      <identifier>remap.controlL2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Control_L to Fn (only in virtual machine, RDC)</name>
      <identifier>remap.controlL2fn_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Option_L+Control_L to Fn</name>
      <identifier>remap.optionLcontrolL2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, ModifierFlag::OPTION_L, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Control_L to Option_L</name>
      <identifier>remap.controlL2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Control_L to Option_L (only in virtual machine, RDC)</name>
      <identifier>remap.controlL2optionL_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Control_L to Shift_L</name>
      <identifier>remap.controlL2shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>Control_L to Sticky Control_L</name>
      <identifier>remap.sticky_controlL</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::VK_STICKY_CONTROL_L</autogen>
    </item>
    <item>
      <name>Control_L to Backquote(`)</name>
      <identifier>remap.controlL2backquote</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::BACKQUOTE</autogen>
    </item>
    <item>
      <name>Control_L to Delete</name>
      <identifier>remap.controlL2delete</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Control_L to Escape</name>
      <identifier>remap.controlL2escape</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Command_R+Control_L to Escape</name>
      <appendix>(Note: Escape is sent when you release Control_L)</appendix>
      <identifier>remap.commandRcontrolL2escape</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::CONTROL_L, ModifierFlag::COMMAND_R, KeyCode::CONTROL_L, ModifierFlag::COMMAND_R, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Shift_L+Control_L to Escape</name>
      <appendix>(Note: Escape is sent when you release Control_L)</appendix>
      <identifier>remap.shiftLcontrolL2escape</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::CONTROL_L, ModifierFlag::SHIFT_L, KeyCode::CONTROL_L, ModifierFlag::SHIFT_L, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Control_L to Return</name>
      <identifier>remap.controlL2return</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Disable Control_L</name>
      <identifier>remap.drop_controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::VK_NONE</autogen>
    </item>
    <item>
      <name>Control_L x2 to Control_L+Space</name>
      <identifier>remap.controlL_x2_to_controlLspace</identifier>
      <autogen>__DoublePressModifier__ KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::SPACE, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Control_L to LeftClick</name>
      <identifier>remap.controlL2lefttclick</identifier>
      <autogen>__KeyToPointingButton__ KeyCode::CONTROL_L, PointingButton::LEFT</autogen>
    </item>
    <item>
      <name>Control_L to RightClick</name>
      <identifier>remap.controlL2rightclick</identifier>
      <autogen>__KeyToPointingButton__ KeyCode::CONTROL_L, PointingButton::RIGHT</autogen>
    </item>
  </item>

  <item>
    <name>Change Control_R Key (Right Control)</name>
    <item>
      <name>Control_R to Command_R</name>
      <identifier>remap.controlR2commandR</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_R, KeyCode::COMMAND_R</autogen>
    </item>
    <item>
      <name>Control_R to Command_R (only in virtual machine, RDC)</name>
      <identifier>remap.controlR2commandR_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::CONTROL_R, KeyCode::COMMAND_R</autogen>
    </item>
    <item>
      <name>Control_R to Option_R</name>
      <identifier>remap.controlR2optionR</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_R, KeyCode::OPTION_R</autogen>
    </item>
    <item>
      <name>Control_R to Option_R (only in virtual machine, RDC)</name>
      <identifier>remap.controlR2optionR_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::CONTROL_R, KeyCode::OPTION_R</autogen>
    </item>
    <item>
      <name>Control_R to Shift_R</name>
      <identifier>remap.controlR2shiftR</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_R, KeyCode::SHIFT_R</autogen>
    </item>
    <item>
      <name>Control_R to Sticky Control_R</name>
      <identifier>remap.sticky_controlR</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::CONTROL_R, KeyCode::CONTROL_R, KeyCode::VK_STICKY_CONTROL_R</autogen>
    </item>
    <item>
      <name>Control_R to Enter</name>
      <identifier>remap.controlR_to_enter</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_R, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Control_R x2 to Enter</name>
      <identifier>remap.controlRx2_to_enter</identifier>
      <autogen>__DoublePressModifier__ KeyCode::CONTROL_R, KeyCode::CONTROL_R, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Control_R to Escape</name>
      <identifier>remap.controlR2escape</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_R, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Control_R to Fn</name>
      <identifier>remap.controlR2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_R, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Control_R to RightClick</name>
      <identifier>remap.controlR2rightclick</identifier>
      <autogen>__KeyToPointingButton__ KeyCode::CONTROL_R, PointingButton::RIGHT</autogen>
    </item>
  </item>

  <item>
    <name>Change Delete Key</name>
    <item>
      <name>Delete to Backquote(`)</name>
      <identifier>remap.delete2backquote</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::BACKQUOTE</autogen>
    </item>
    <item>
      <name>Delete to Backslash(\)</name>
      <identifier>remap.delete2backslash</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::BACKSLASH</autogen>
    </item>
    <item>
      <name>Delete to CapsLock</name>
      <identifier>remap.delete2capslock</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::CAPSLOCK</autogen>
    </item>
    <item>
      <name>Command+Delete to Option_L+Delete</name>
      <identifier>remap.commandDelete2optionLdelete</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, VK_COMMAND, KeyCode::DELETE, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Control+Delete to Command_L+Delete</name>
      <identifier>remap.controlDelete2commandLdelete</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, VK_CONTROL, KeyCode::DELETE, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option+Delete to Command_L+Delete</name>
      <identifier>remap.optionDelete2commandLdelete</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, VK_OPTION, KeyCode::DELETE, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Delete to Forward Delete</name>
      <identifier>remap.delete2forwarddelete</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Delete to Forward Delete</name>
      <appendix>(Fn+Delete to Delete)</appendix>
      <identifier>remap.delete2forwarddelete_fnDelete2delete</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, ModifierFlag::FN, KeyCode::DELETE</autogen>
      <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Control+Delete to Forward Delete</name>
      <identifier>remap.controlDelete2forwarddelete</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Option+Delete to Forward Delete</name>
      <identifier>remap.optionDelete2forwarddelete</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, VK_OPTION, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Shift+Delete to Forward Delete</name>
      <identifier>remap.shiftDelete2forwarddelete</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, VK_SHIFT, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Shift+Delete to Forward Delete (if no other modifiers pressed)</name>
      <identifier>remap.shiftDelete2forwarddelete_nomodifiers</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, VK_SHIFT | ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Shift+Delete to Help</name>
      <identifier>remap.shiftdelete2help</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, VK_SHIFT, KeyCode::HELP</autogen>
    </item>
    <item>
      <name>Shift+Delete to Pipe(|)</name>
      <identifier>remap.shiftDelete2pipe</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, VK_SHIFT, KeyCode::BACKSLASH, ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Delete to Quote(')</name>
      <identifier>remap.delete_to_quote</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::QUOTE</autogen>
    </item>
    <item>
      <name>Delete to Return</name>
      <identifier>remap.delete_to_return</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Delete to Tab</name>
      <identifier>remap.delete_to_tab</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::TAB</autogen>
    </item>
    <item>
      <name>Shift+Delete to Tilde(~)</name>
      <identifier>remap.shiftDelete2tilde</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, VK_SHIFT, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Disable Delete</name>
      <identifier>remap.drop_delete</identifier>
      <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::VK_NONE</autogen>
    </item>
  </item>

  <item>
    <name>Change Eject Key</name>
    <item>
      <name>Note:</name>
      <appendix>Eject key has a delay.</appendix>
      <appendix>You need to press eject key for a few seconds.</appendix>
      <appendix>We recommend you to use "NoEjectDelay" together to get rid of a delay.</appendix>
      <appendix>&#8594; http://pqrs.org/macosx/keyremap4macbook/extra.html</appendix>
    </item>
    <item>
      <name>Limitation:</name>
      <appendix>You cannot change eject key to a modifier key (Command,Control,Fn,Option,Shift),</appendix>
      <appendix>and eject key does not support key repeat exceptionally.</appendix>
      <appendix></appendix>
      <appendix>Because eject key sends keydown&amp;keyup event at the same time when you press the key.</appendix>
      <appendix>KeyRemap4MacBook cannot know whether you're holding eject key or not.</appendix>
    </item>
    <item>
      <name>Eject to Option+Backquote(`)</name>
      <identifier>remap.eject_to_option_backquote</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Eject to Dashboard if no modifiers pressed</name>
      <identifier>remap.eject2dashboard_withoutmodifiers</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::DASHBOARD</autogen>
    </item>
    <item>
      <name>Eject to Control+Shift+Eject (Sleep displays)</name>
      <identifier>remap.eject2controlshifteject</identifier>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::EJECT, ModifierFlag::NONE, ConsumerKeyCode::EJECT, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Eject to Escape</name>
      <identifier>remap.eject2escape</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Eject to Expose if no modifiers pressed</name>
      <identifier>remap.eject2expose_withoutmodifiers</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::EXPOSE_ALL</autogen>
    </item>
    <item>
      <name>Eject to Expose</name>
      <identifier>remap.eject2expose</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::EXPOSE_ALL</autogen>
    </item>
    <item>
      <name>Eject to Forward Delete</name>
      <identifier>remap.eject2forwarddelete</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Eject to Forward Delete</name>
      <appendix>(Fn+Eject to Eject)</appendix>
      <identifier>remap.eject2forwarddelete_retain_fnEject</identifier>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::EJECT, ModifierFlag::FN, ConsumerKeyCode::EJECT</autogen>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Eject to Forward Delete if no modifiers pressed</name>
      <identifier>remap.eject2forwarddelete_withoutmodifiers</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Eject to Forward Delete</name>
      <appendix>(+ Eject to Control+D in Terminal,X11)</appendix>
      <identifier>remap.eject2forwarddelete_term_x11</identifier>
      <block>
        <only>TERMINAL, X11</only>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::D, ModifierFlag::CONTROL_L</autogen>
      </block>
      <block>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::FORWARD_DELETE</autogen>
      </block>
    </item>
    <item>
      <name>Eject to Option_L+Delete</name>
      <appendix>(Fn+Eject to Eject)</appendix>
      <identifier>remap.eject2optionaLdelete</identifier>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::EJECT, ModifierFlag::FN, ConsumerKeyCode::EJECT</autogen>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::DELETE, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Eject to Command+Control+Option+Shift+E</name>
      <identifier>remap.eject2fccosE</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::E, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Fn+Eject to Command+Control+Option+Shift+E</name>
      <identifier>remap.fneject2fccosE</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::E, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Eject to F12</name>
      <identifier>remap.eject2f12</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::F12</autogen>
    </item>
    <item>
      <name>Eject to F12 (if no modifiers pressed)</name>
      <identifier>remap.eject2f12_withoutmodifiers</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::F12</autogen>
    </item>
    <item>
      <name>Eject to F13</name>
      <appendix>(Fn+Eject to Eject)</appendix>
      <identifier>remap.eject2f13</identifier>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::EJECT, ModifierFlag::FN, ConsumerKeyCode::EJECT</autogen>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::F13</autogen>
    </item>
    <item>
      <name>Eject to F14</name>
      <identifier>remap.eject2f14</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::F14</autogen>
    </item>
    <item>
      <name>Eject to F15</name>
      <identifier>remap.eject2f15</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::F15</autogen>
    </item>
    <item>
      <name>Eject to PageDown</name>
      <identifier>remap.eject2pagedown</identifier>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::PAGEDOWN</autogen>
    </item>
  </item>

  <item>
    <name>Change Enter Key</name>
    <item>
      <name>Note:</name>
      <appendix>Enter key is a key in old MacBook and Keypads.</appendix>
      <appendix>See "Change Return Key" section if you want to change a return key.</appendix>
    </item>
    <item>
      <name>Enter to Command_L</name>
      <identifier>remap.enter2commandL</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Enter to Command_L (except virtual machine, RDC)</name>
      <identifier>remap.enter2commandL_ex_vm</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Enter to Command_R</name>
      <identifier>remap.enter2commandR</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::COMMAND_R</autogen>
    </item>
    <item>
      <name>Enter to Control_L</name>
      <identifier>remap.enter2controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Enter to Control_L (only in virtual machine, RDC)</name>
      <identifier>remap.enter2controlL_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Enter to Control_R</name>
      <identifier>remap.enter2controlR</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::CONTROL_R</autogen>
    </item>
    <item>
      <name>Enter to Fn</name>
      <identifier>remap.enter2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Enter to Option_L</name>
      <identifier>remap.enter2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Enter to Option_L</name>
      <appendix>(+ When you type Enter only, toggle IM)</appendix>
      <item>
        <name>When you type Enter only, send Command+Space</name>
        <appendix>(except virtual machine, RDC)</appendix>
        <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
        <identifier>remap.enter2optionL_commandSpace</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::ENTER, KeyCode::OPTION_L, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>When you type Enter only, send Option+Backquote</name>
        <appendix>(only in virtual machine, RDC)</appendix>
        <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
        <identifier>remap.enter2optionL_optionBackquote_vm</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::ENTER, KeyCode::VK_LAZY_OPTION_L, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L</autogen>
      </item>
    </item>
    <item>
      <name>Enter to Option_R</name>
      <identifier>remap.enter2optionR</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::OPTION_R</autogen>
    </item>
    <item>
      <name>Enter to Option_R</name>
      <item>
        <name>When you type Enter only, send Command+Space</name>
        <appendix>(except virtual machine, RDC)</appendix>
        <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
        <identifier>remap.enter2optionR_commandSpace</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::ENTER, KeyCode::OPTION_R, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>When you type Enter only, send Option+Backquote</name>
        <appendix>(only in virtual machine, RDC)</appendix>
        <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
        <identifier>remap.enter2optionR_optionBackquote_vm</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::ENTER, KeyCode::VK_LAZY_OPTION_R, KeyCode::BACKQUOTE, ModifierFlag::OPTION_R</autogen>
      </item>
    </item>
    <item>
      <name>Enter to Command_L+Control_L</name>
      <identifier>remap.enter2commandLcontrolL</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::COMMAND_L, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Enter to Command_L+Shift_L</name>
      <identifier>remap.enter2commandLshiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::COMMAND_L, ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Enter to Control_L+Option_L</name>
      <identifier>remap.enter2controlLoptionL</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::CONTROL_L, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Enter to Delete</name>
      <identifier>remap.enter2delete</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Enter to End</name>
      <identifier>remap.enter2end</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::END</autogen>
    </item>
    <item>
      <name>Enter to End (only in virtual machine, RDC)</name>
      <identifier>remap.enter2end_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::END</autogen>
    </item>
    <item>
      <name>Enter to Forward Delete</name>
      <identifier>remap.enter2forwarddelete</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Enter to Left-Arrow</name>
      <identifier>remap.enter2leftarrow</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::CURSOR_LEFT</autogen>
    </item>
    <item>
      <name>Enter to Return</name>
      <identifier>remap.enter2return</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Enter to Command_L+Right-Arrow (end-of-line)</name>
      <identifier>remap.enter2commandLrightarrow_all</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Enter to Command_L+Right-Arrow (end-of-line)</name>
      <appendix>(+ Control+Enter to Command_L+Down-Arrow) (end-of-buffer)</appendix>
      <appendix>(Except in Virtual Machine, RDC)</appendix>
      <identifier>remap.enter2fnrightarrow</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::ENTER, VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::ENTER,             KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Enter to Right-Arrow</name>
      <identifier>remap.enter2rightarrow</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Enter to Semicolon</name>
      <identifier>remap.enter2semicolon</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::SEMICOLON</autogen>
    </item>
    <item>
      <name>Enter to Space</name>
      <identifier>remap.enter2space</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Enter to Tab</name>
      <identifier>remap.enter2tab</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::TAB</autogen>
    </item>
    <item>
      <name>Enter to Up-Arrow</name>
      <identifier>remap.enter2uparrow</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::CURSOR_UP</autogen>
    </item>
  </item>

  <item>
    <name>Change Escape Key</name>
    <item>
      <name>Escape to CapsLock</name>
      <identifier>remap.escape2capslock</identifier>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::CAPSLOCK</autogen>
    </item>
    <item>
      <name>Shift+Escape to CapsLock</name>
      <identifier>remap.shiftEscape2capslock</identifier>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, VK_SHIFT, KeyCode::CAPSLOCK</autogen>
    </item>
    <item>
      <name>Escape to Command_L</name>
      <identifier>remap.escape2commandL</identifier>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Escape to Command_R Lock</name>
      <identifier>remap.escape2commandR_lock</identifier>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::VK_LOCK_COMMAND_R</autogen>
    </item>
    <item>
      <name>Escape to Option_L</name>
      <identifier>remap.escape2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Escape to Backquote(`)</name>
      <identifier>remap.escape2backquote</identifier>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::BACKQUOTE</autogen>
    </item>
    <item>
      <name>Escape to Eject</name>
      <identifier>remap.escape2eject</identifier>
      <autogen>__KeyToConsumer__ KeyCode::ESCAPE, ConsumerKeyCode::EJECT</autogen>
    </item>
    <item>
      <name>Control+Escape to Control_L+F3</name>
      <identifier>remap.escape2controlLf3</identifier>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, VK_CONTROL | ModifierFlag::NONE, KeyCode::F3, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Fn+Escape to Power</name>
      <identifier>remap.fnEscape2power</identifier>
      <autogen>__KeyToConsumer__ KeyCode::ESCAPE, ModifierFlag::FN, ConsumerKeyCode::POWER</autogen>
    </item>
    <item>
      <name>Shift+Escape to Tilde(~)</name>
      <identifier>remap.shiftEscape2tilde</identifier>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, VK_SHIFT, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Escape to RightClick</name>
      <identifier>remap.escape2rightclick</identifier>
      <autogen>__KeyToPointingButton__ KeyCode::ESCAPE, PointingButton::RIGHT</autogen>
    </item>
    <item>
      <name>Disable Escape</name>
      <identifier>remap.drop_escape</identifier>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::VK_NONE</autogen>
    </item>
  </item>

  <item>
    <name>Change Expose Key</name>
    <item>
      <name>ExposeAll to CapsLock</name>
      <identifier>remap.expose2capslock</identifier>
      <autogen>__KeyToKey__ KeyCode::EXPOSE_ALL, KeyCode::CAPSLOCK</autogen>
    </item>
    <item>
      <name>ExposeAll to Shift_L</name>
      <identifier>remap.expose2shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::EXPOSE_ALL, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>ExposeAll to CapsLock or Shift_L</name>
      <appendix>(ExposeAll to Shift_L on the MacBook's internal keyboard (vid/pid: 0x05ac,0x0218)</appendix>
      <appendix>(ExposeAll to CapsLock on other devices)</appendix>
      <identifier>remap.expose2capslockORshiftL</identifier>
      <block>
        <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
        <autogen>__KeyToKey__ KeyCode::EXPOSE_ALL, KeyCode::SHIFT_L</autogen>
      </block>
      <block>
        <device_not>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_not>
        <autogen>__KeyToKey__ KeyCode::EXPOSE_ALL, KeyCode::CAPSLOCK</autogen>
      </block>
    </item>
  </item>

  <item>
    <name>Change Fn Key</name>
    <item>
      <name>Fn to Command_L</name>
      <identifier>remap.fn2commandL</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Fn to Command_L (except virtual machine, RDC)</name>
      <appendix>(+ Fn to Control_L (only in virtual machine, RDC))</appendix>
      <identifier>remap.fn2commandL_fn2controlL_vm</identifier>
      <block>
        <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
        <autogen>__KeyToKey__ KeyCode::FN, KeyCode::COMMAND_L</autogen>
      </block>
      <block>
        <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
        <autogen>__KeyToKey__ KeyCode::FN, KeyCode::CONTROL_L</autogen>
      </block>
    </item>
    <item>
      <name>Fn to Control_L</name>
      <identifier>remap.fn2controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Fn to Control_L (only in virtual machine, RDC)</name>
      <identifier>remap.fn2controlL_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Fn to Control_L</name>
      <appendix>(+ Command_R+Fn to Fn)</appendix>
      <identifier>remap.fn2controlL_commandR2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, ModifierFlag::COMMAND_R, KeyCode::FN</autogen>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Fn to Control_L</name>
      <appendix>(+ Option_L+Fn to Fn)</appendix>
      <identifier>remap.fn2controlL_optionL2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, ModifierFlag::OPTION_L, KeyCode::FN</autogen>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Fn+letter to Control_L+letter</name>
      <appendix>Makes Fn key behave as a Control_L key, but only when pressed in combination with a letter</appendix>
      <appendix>Fn behaves as a normal Fn key otherwise</appendix>
      <identifier>remap.fnletter_to_ctrlletter</identifier>
      <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::FN, KeyCode::A, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::FN, KeyCode::B, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::FN, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::FN, KeyCode::D, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::FN, KeyCode::E, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::FN, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::FN, KeyCode::G, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::FN, KeyCode::H, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::FN, KeyCode::I, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::FN, KeyCode::J, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::FN, KeyCode::K, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::FN, KeyCode::L, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::FN, KeyCode::M, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::FN, KeyCode::N, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::FN, KeyCode::O, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::FN, KeyCode::P, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::FN, KeyCode::Q, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::FN, KeyCode::R, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::FN, KeyCode::S, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::FN, KeyCode::T, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::FN, KeyCode::U, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::FN, KeyCode::V, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::FN, KeyCode::W, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::FN, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::FN, KeyCode::Y, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::FN, KeyCode::Z, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Fn to Control_R</name>
      <identifier>remap.fn2controlR</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::CONTROL_R</autogen>
    </item>
    <item>
      <name>Fn to Fn</name>
      <appendix>(+ When you type Fn only, send Fn_Lock)</appendix>
      <identifier>remap.fn2fn_fnlock</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::FN, KeyCode::FN, KeyCode::VK_LOCK_FN</autogen>
    </item>
    <item>
      <name>Fn to Fn_Lock</name>
      <identifier>remap.fn2fnlock</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::VK_LOCK_FN</autogen>
    </item>
    <item>
      <name>Fn to Option_L</name>
      <identifier>remap.fn2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Fn to Option_L</name>
      <appendix>(only in Illustrator, Photoshop, Cheetah3D)</appendix>
      <appendix>(retain Fn+F1...Fn+F12)</appendix>
      <identifier>remap.fn2optionL_illphoche</identifier>
      <only>ILLUSTRATOR, PHOTOSHOP, CHEETAH_3D</only>
      <autogen>__KeyToKey__ KeyCode::BRIGHTNESS_DOWN,                      ModifierFlag::OPTION_L, KeyCode::BRIGHTNESS_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::BRIGHTNESS_UP,                        ModifierFlag::OPTION_L, KeyCode::BRIGHTNESS_UP</autogen>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::BRIGHTNESS_DOWN,    ModifierFlag::OPTION_L, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::BRIGHTNESS_UP,      ModifierFlag::OPTION_L, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::EXPOSE_ALL,                           ModifierFlag::OPTION_L, KeyCode::EXPOSE_ALL</autogen>
      <autogen>__KeyToKey__ KeyCode::DASHBOARD,                            ModifierFlag::OPTION_L, KeyCode::DASHBOARD</autogen>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::KEYBOARDLIGHT_LOW,  ModifierFlag::OPTION_L, ConsumerKeyCode::KEYBOARDLIGHT_LOW</autogen>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::KEYBOARDLIGHT_HIGH, ModifierFlag::OPTION_L, ConsumerKeyCode::KEYBOARDLIGHT_HIGH</autogen>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::MUSIC_PREV,         ModifierFlag::OPTION_L, ConsumerKeyCode::MUSIC_PREV</autogen>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::MUSIC_PLAY,         ModifierFlag::OPTION_L, ConsumerKeyCode::MUSIC_PLAY</autogen>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::MUSIC_NEXT,         ModifierFlag::OPTION_L, ConsumerKeyCode::MUSIC_NEXT</autogen>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_MUTE,        ModifierFlag::OPTION_L, ConsumerKeyCode::VOLUME_MUTE</autogen>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_DOWN,        ModifierFlag::OPTION_L, ConsumerKeyCode::VOLUME_DOWN</autogen>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_UP,          ModifierFlag::OPTION_L, ConsumerKeyCode::VOLUME_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Fn to Control_L+Option_L</name>
      <identifier>remap.fn2controlLoptionL</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::OPTION_L, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Fn to All Modifiers Mode</name>
      <item>
        <name>FN to Shift+Control+Option+Command</name>
        <identifier vk_config="true">notsave.fn2allmods</identifier>
        <autogen>__ShowStatusMessage__ Fn as All Mods Enabled</autogen>
        <autogen>__KeyToKey__ KeyCode::FN, KeyCode::COMMAND_L, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
      </item>
      <item>
        <name>Doubletap Left Shift to Enable Fn as Shift+Control+Option+Command</name>
        <identifier>remap.enable_fn2allmods</identifier>
        <autogen>__DoublePressModifier__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::VK_CONFIG_TOGGLE_notsave_fn2allmods</autogen>
      </item>
    </item>
    <item>
      <name>Fn to Shift_L</name>
      <identifier>remap.fn2shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>Fn to Delete</name>
      <identifier>remap.fn2delete</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Fn to Enter</name>
      <identifier>remap.fn2enter</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Fn to Eject</name>
      <identifier>remap.fn2eject</identifier>
      <autogen>__KeyToConsumer__ KeyCode::FN, ConsumerKeyCode::EJECT</autogen>
    </item>
    <item>
      <name>Fn to Forward Delete</name>
      <identifier>remap.fn2forwarddelete</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Fn to F14</name>
      <identifier>remap.fn2f14</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::F14</autogen>
    </item>
    <item>
      <name>Fn x2 to F19</name>
      <identifier>remap.fn_x2_to_f19</identifier>
      <autogen>__DoublePressModifier__ KeyCode::FN, KeyCode::FN, KeyCode::F19</autogen>
    </item>
    <item>
      <name>Fn to Help</name>
      <identifier>remap.fn2help</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::HELP</autogen>
    </item>
    <item>
      <name>Fn to Tab</name>
      <identifier>remap.fn2tab</identifier>
      <autogen>__KeyToKey__ KeyCode::FN, KeyCode::TAB</autogen>
    </item>
    <item>
      <name>Fn to LeftClick</name>
      <identifier>remap.fn2leftclick</identifier>
      <autogen>__KeyToPointingButton__ KeyCode::FN, PointingButton::LEFT</autogen>
    </item>
  </item>

  <item>
    <name>Change Forward Delete Key</name>
    <item>
      <name>Forward Delete to Delete</name>
      <identifier>remap.forwarddelete2delete</identifier>
      <autogen>__KeyToKey__ FROMKEYCODE_FORWARD_DELETE, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Command+Forward Delete to Option_L+Forward Delete</name>
      <identifier>remap.commandForwardDelete2optionLforwarddelete</identifier>
      <autogen>__KeyToKey__ FROMKEYCODE_FORWARD_DELETE, VK_COMMAND, KeyCode::FORWARD_DELETE, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Control+Forward Delete to Command_L+Forward Delete</name>
      <identifier>remap.controlForwardDelete2commandLforwarddelete</identifier>
      <autogen>__KeyToKey__ FROMKEYCODE_FORWARD_DELETE, VK_CONTROL, KeyCode::FORWARD_DELETE, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option+Forward Delete to Command_L+Forward Delete</name>
      <identifier>remap.optionForwardDelete2commandLforwarddelete</identifier>
      <autogen>__KeyToKey__ FROMKEYCODE_FORWARD_DELETE, VK_OPTION, KeyCode::FORWARD_DELETE, ModifierFlag::COMMAND_L</autogen>
    </item>
  </item>

  <item>
    <name>Change F1..F19 Key &amp; Functional Key (Brightness Control, Music Control, Volume Control)</name>
    <item>
      <name>Change Functional Key (Brightness, Volume, ....)</name>
      <item>
        <name>Dashboard to Launchpad</name>
        <identifier>remap.dashboard2launchpad</identifier>
        <autogen>__KeyToKey__ KeyCode::DASHBOARD, KeyCode::LAUNCHPAD</autogen>
      </item>
      <item>
        <name>Launchpad to Dashboard</name>
        <identifier>remap.launchpad2dashboard</identifier>
        <autogen>__KeyToKey__ KeyCode::LAUNCHPAD, KeyCode::DASHBOARD</autogen>
      </item>
      <item>
        <name>Functional Keys to F1..F12</name>
        <item>
          <name>Brightness Adjust to F1,F2</name>
          <appendix>* Brightness Down to F1</appendix>
          <appendix>* Brightness Up to F2</appendix>
          <identifier>remap.consumer_to_fkeys_f1</identifier>
          <!-- F1 -->
          <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_DOWN, KeyCode::F1</autogen>
          <autogen>__KeyToKey__      KeyCode::BRIGHTNESS_DOWN,         KeyCode::F1</autogen>
          <!-- F2 -->
          <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_UP,   KeyCode::F2</autogen>
          <autogen>__KeyToKey__      KeyCode::BRIGHTNESS_UP,           KeyCode::F2</autogen>
        </item>
        <item>
          <name>Mission Control/Launchpad to F3,F4</name>
          <appendix>(And Expose and Dashboard to F3,F4)</appendix>
          <identifier>remap.consumer_to_fkeys_f3</identifier>
          <!-- F3 - F12 -->
          <autogen>__KeyToKey__      KeyCode::EXPOSE_ALL, KeyCode::F3</autogen>
          <autogen>__KeyToKey__      KeyCode::DASHBOARD,  KeyCode::F4</autogen>
          <autogen>__KeyToKey__      KeyCode::LAUNCHPAD,  KeyCode::F4</autogen>
        </item>
        <item>
          <name>Keyboard Backlit Adjust to F5,F6</name>
          <appendix>* Keyboard Backlit Low to F5</appendix>
          <appendix>* Keyboard Backlit High to F6</appendix>
          <identifier>remap.consumer_to_fkeys_f5</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_LOW,  KeyCode::F5</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_HIGH, KeyCode::F6</autogen>
        </item>
        <item>
          <name>Music Controls to F7,F8,F9</name>
          <appendix>* Music Prev to F7</appendix>
          <appendix>* Music Play/Pause to F8</appendix>
          <appendix>* Music Next to F9</appendix>
          <identifier>remap.consumer_to_fkeys_f7</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PREV,         KeyCode::F7</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PLAY,         KeyCode::F8</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_NEXT,         KeyCode::F9</autogen>
        </item>
        <item>
          <name>Speaker Controls to F10,F11,F12</name>
          <appendix>* Volume Mute to F10</appendix>
          <appendix>* Volume Down to F11</appendix>
          <appendix>* Volume Up to F12</appendix>
          <identifier>remap.consumer_to_fkeys_f10</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE,        KeyCode::F10</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN,        KeyCode::F11</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP,          KeyCode::F12</autogen>
        </item>
      </item>
      <item>
        <name>Fn+Functional Keys to F1..F12</name>
        <appendix>(Use these settings if you activated "XXX to Fn")</appendix>
        <item>
          <name>Fn+Brightness Adjust to F1,F2</name>
          <appendix>* Fn+Brightness Down to F1</appendix>
          <appendix>* Fn+Brightness Up to F2</appendix>
          <identifier>remap.fn_consumer_to_fkeys_f1</identifier>
          <!-- F1 -->
          <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_DOWN, ModifierFlag::FN, KeyCode::F1</autogen>
          <autogen>__KeyToKey__      KeyCode::BRIGHTNESS_DOWN,         ModifierFlag::FN, KeyCode::F1</autogen>
          <!-- F2 -->
          <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_UP,   ModifierFlag::FN, KeyCode::F2</autogen>
          <autogen>__KeyToKey__      KeyCode::BRIGHTNESS_UP,           ModifierFlag::FN, KeyCode::F2</autogen>
        </item>
        <item>
          <name>Fn+Mission Control/Launchpad to F3,F4</name>
          <appendix>(And Fn+Expose and Fn+Dashboard to F3,F4)</appendix>
          <identifier>remap.fn_consumer_to_fkeys_f3</identifier>
          <!-- F3 - F12 -->
          <autogen>__KeyToKey__      KeyCode::EXPOSE_ALL, ModifierFlag::FN, KeyCode::F3</autogen>
          <autogen>__KeyToKey__      KeyCode::DASHBOARD,  ModifierFlag::FN, KeyCode::F4</autogen>
          <autogen>__KeyToKey__      KeyCode::LAUNCHPAD,  ModifierFlag::FN, KeyCode::F4</autogen>
        </item>
        <item>
          <name>Fn+Keyboard Backlit Adjust to F5,F6</name>
          <appendix>* Fn+Keyboard Backlit Low to F5</appendix>
          <appendix>* Fn+Keyboard Backlit High to F6</appendix>
          <identifier>remap.fn_consumer_to_fkeys_f5</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_LOW,  ModifierFlag::FN, KeyCode::F5</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_HIGH, ModifierFlag::FN, KeyCode::F6</autogen>
        </item>
        <item>
          <name>Fn+Music Controls to F7,F8,F9</name>
          <appendix>* Fn+Music Prev to F7</appendix>
          <appendix>* Fn+Music Play/Pause to F8</appendix>
          <appendix>* Fn+Music Next to F9</appendix>
          <identifier>remap.fn_consumer_to_fkeys_f7</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PREV, ModifierFlag::FN, KeyCode::F7</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PLAY, ModifierFlag::FN, KeyCode::F8</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_NEXT, ModifierFlag::FN, KeyCode::F9</autogen>
        </item>
        <item>
          <name>Fn+Speaker Controls to F10,F11,F12</name>
          <appendix>* Fn+Volume Mute to F10</appendix>
          <appendix>* Fn+Volume Down to F11</appendix>
          <appendix>* Fn+Volume Up to F12</appendix>
          <identifier>remap.fn_consumer_to_fkeys_f10</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, ModifierFlag::FN, KeyCode::F10</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::FN, KeyCode::F11</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP,   ModifierFlag::FN, KeyCode::F12</autogen>
        </item>
      </item>
      <item>
        <name>Separately settings</name>
        <item>
          <name>Brightness Down to F1</name>
          <identifier>remap.brightnessdown2f1</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_DOWN, KeyCode::F1</autogen>
          <autogen>__KeyToKey__ KeyCode::BRIGHTNESS_DOWN, KeyCode::F1</autogen>
        </item>
        <item>
          <name>Brightness Up to F2</name>
          <identifier>remap.brightnessup2f2</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_UP, KeyCode::F2</autogen>
          <autogen>__KeyToKey__ KeyCode::BRIGHTNESS_UP, KeyCode::F2</autogen>
        </item>
        <item>
          <name>Expose to F3</name>
          <identifier>remap.expose2f3</identifier>
          <autogen>__KeyToKey__      KeyCode::EXPOSE_ALL,                 KeyCode::F3</autogen>
        </item>
        <item>
          <name>Mission Control to Eject</name>
          <identifier>remap.missioncontrol_to_eject</identifier>
          <autogen>__KeyToConsumer__ KeyCode::MISSION_CONTROL, ConsumerKeyCode::EJECT</autogen>
        </item>
        <item>
          <name>Dashboard to F4</name>
          <identifier>remap.dashboard2f4</identifier>
          <autogen>__KeyToKey__      KeyCode::DASHBOARD,                  KeyCode::F4</autogen>
        </item>
        <item>
          <name>Launchpad to Eject</name>
          <identifier>remap.launchpad_to_eject</identifier>
          <autogen>__KeyToConsumer__ KeyCode::LAUNCHPAD, ConsumerKeyCode::EJECT</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Volume Mute to F3</name>
          <identifier>remap.volumemute2f3</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, KeyCode::F3</autogen>
        </item>
        <item>
          <name>Volume Down to F4</name>
          <identifier>remap.volumedown2f4</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN, KeyCode::F4</autogen>
        </item>
        <item>
          <name>Volume Up to F5</name>
          <identifier>remap.volumeup2f5</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP, KeyCode::F5</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Volume Mute to F4</name>
          <identifier>remap.volumemute2f4</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, KeyCode::F4</autogen>
        </item>
        <item>
          <name>Volume Down to F5</name>
          <identifier>remap.volumedown2f5</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN, KeyCode::F5</autogen>
        </item>
        <item>
          <name>Volume Up to F6</name>
          <identifier>remap.volumeup2f6</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP, KeyCode::F6</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Volume Mute to F10</name>
          <identifier>remap.volumemute2f10</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, ModifierFlag::FN, KeyCode::F10</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE,                   KeyCode::F10</autogen>
        </item>
        <item>
          <name>Volume Down to F11</name>
          <identifier>remap.volumedown2f11</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::FN, KeyCode::F11</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN,                   KeyCode::F11</autogen>
        </item>
        <item>
          <name>Volume Up to F12</name>
          <identifier>remap.volumeup2f12</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP, ModifierFlag::FN, KeyCode::F12</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP,                   KeyCode::F12</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Volume Mute to F9</name>
          <identifier>remap.volumemute2f9</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, ModifierFlag::FN, KeyCode::F9</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE,                   KeyCode::F9</autogen>
        </item>
        <item>
          <name>Volume Down to F10</name>
          <identifier>remap.volumedown2f10</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::FN, KeyCode::F10</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN,                   KeyCode::F10</autogen>
        </item>
        <item>
          <name>Volume Up to F11</name>
          <identifier>remap.volumeup2f11</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP, ModifierFlag::FN, KeyCode::F11</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP,                   KeyCode::F11</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>NumLock to F6</name>
          <identifier>remap.numlock2f6</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::NUMLOCK, KeyCode::F6</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>NumLock to Music Prev</name>
          <identifier>remap.numlock2musicprev</identifier>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::NUMLOCK, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>Video Mirroring to Music Play/Pause</name>
          <identifier>remap.videomirror2musicplay</identifier>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VIDEO_MIRROR, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>Keyboard Light Off to Music Next</name>
          <identifier>remap.keyboardlightoff2musicnext</identifier>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::KEYBOARDLIGHT_OFF, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Video Mirroring to Music Prev</name>
          <identifier>remap.videomirror2musicprev</identifier>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VIDEO_MIRROR, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>Keyboard Light Off to Music Play/Pause</name>
          <identifier>remap.keyboardlightoff2musicplay</identifier>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::KEYBOARDLIGHT_OFF, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>Keyboard Light Low to Music Next</name>
          <identifier>remap.keyboardlightlow2musicnext</identifier>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::KEYBOARDLIGHT_LOW, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Keyboard Light Off to Music Prev</name>
          <identifier>remap.keyboardlightoff2musicprev</identifier>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::KEYBOARDLIGHT_OFF, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>Keyboard Light Low to Music Play/Pause</name>
          <identifier>remap.keyboardlightlow2musicplay</identifier>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::KEYBOARDLIGHT_LOW, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>Keyboard Light High to Music Next</name>
          <identifier>remap.keyboardlighthigh2musicnext</identifier>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::KEYBOARDLIGHT_HIGH, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Keyboard Light Low to Tab Left ( Command+{ )</name>
          <identifier>remap.light_low_to_tab_left</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_LOW, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Keyboard Light High to Tab Right ( Command+} )</name>
          <identifier>remap.light_high_to_tab_right</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_HIGH, KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>"Rewind/Fast-Forward" to "beginning/end of line" (Command+Left/Right-Arrow)</name>
          <identifier>remap.musicprevnext_to_home_end</identifier>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PREV, KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_NEXT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Dashboard to F8</name>
          <identifier>remap.dashboard2f8</identifier>
          <autogen>__KeyToKey__ KeyCode::DASHBOARD, KeyCode::F8</autogen>
        </item>
        <item>
          <name>Keyboard Light High to Volume Mute</name>
          <identifier>remap.keyboardlighthigh2volumemute</identifier>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::KEYBOARDLIGHT_HIGH, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>Volume Mute/Down/Up without click</name>
          <identifier>remap.voldownup_to_voldownup_woclick</identifier>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_MUTE,                    ModifierFlag::NONE, ConsumerKeyCode::VOLUME_MUTE, ModifierFlag::SHIFT_L</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_MUTE, ModifierFlag::FN | ModifierFlag::NONE, ConsumerKeyCode::VOLUME_MUTE, ModifierFlag::SHIFT_L</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_DOWN,                    ModifierFlag::NONE, ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::SHIFT_L</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::FN | ModifierFlag::NONE, ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::SHIFT_L</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_UP,                      ModifierFlag::NONE, ConsumerKeyCode::VOLUME_UP, ModifierFlag::SHIFT_L</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_UP,   ModifierFlag::FN | ModifierFlag::NONE, ConsumerKeyCode::VOLUME_UP, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Command+Functional to Functional</name>
          <appendix>(ex. Command+Volume Mute to Volume Mute</appendix>
          <identifier>remap.command_functional_to_functional</identifier>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::BRIGHTNESS_DOWN, VK_COMMAND, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::BRIGHTNESS_DOWN, VK_COMMAND, KeyCode::BRIGHTNESS_DOWN</autogen>

          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::BRIGHTNESS_UP, VK_COMMAND, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::BRIGHTNESS_UP, VK_COMMAND, KeyCode::BRIGHTNESS_UP</autogen>

          <autogen>__KeyToKey__ KeyCode::EXPOSE_ALL, VK_COMMAND, KeyCode::EXPOSE_ALL</autogen>
          <autogen>__KeyToKey__ KeyCode::DASHBOARD, VK_COMMAND, KeyCode::DASHBOARD</autogen>

          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::MUSIC_PREV, VK_COMMAND, ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::MUSIC_PLAY, VK_COMMAND, ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::MUSIC_NEXT, VK_COMMAND, ConsumerKeyCode::MUSIC_NEXT</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_MUTE, VK_COMMAND, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_DOWN, VK_COMMAND, ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_UP, VK_COMMAND, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item>
          <name>Change Power Key</name>
          <appendix>*** This setting does not work with MacBook Air 2010 or later.</appendix>
          <appendix>*** This "Power Key" is the key on the old ADB keyboard.</appendix>
          <item>
            <name>Power to Command_L</name>
            <identifier>remap.power2commandL</identifier>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::POWER, KeyCode::COMMAND_L</autogen>
          </item>
          <item>
            <name>Power to Delete</name>
            <appendix>(+ Fn+Power to Power)</appendix>
            <identifier>remap.power2delete</identifier>
            <autogen>__ConsumerToConsumer__ ConsumerKeyCode::POWER, ModifierFlag::FN, ConsumerKeyCode::POWER</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::POWER, KeyCode::DELETE</autogen>
          </item>
          <item>
            <name>Power to Eject</name>
            <appendix>(+ Fn+Power to Power)</appendix>
            <identifier>remap.power2eject_fnpower2power</identifier>
            <autogen>__ConsumerToConsumer__ ConsumerKeyCode::POWER, ModifierFlag::FN, ConsumerKeyCode::POWER</autogen>
            <autogen>__ConsumerToConsumer__ ConsumerKeyCode::POWER, ConsumerKeyCode::EJECT</autogen>
          </item>
          <item>
            <name>Power to Fn</name>
            <appendix>(+ Fn+Power to Power)</appendix>
            <identifier>remap.power2fn</identifier>
            <autogen>__ConsumerToConsumer__ ConsumerKeyCode::POWER, ModifierFlag::FN, ConsumerKeyCode::POWER</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::POWER, KeyCode::FN</autogen>
          </item>
          <item>
            <name>Power to Forward Delete</name>
            <appendix>(+ Fn+Power to Power)</appendix>
            <identifier>remap.power2forwarddelete</identifier>
            <autogen>__ConsumerToConsumer__ ConsumerKeyCode::POWER, ModifierFlag::FN, ConsumerKeyCode::POWER</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::POWER, KeyCode::FORWARD_DELETE</autogen>
          </item>
          <item>
            <name>Disable Power Key</name>
            <appendix>(+ Fn+Power to Power)</appendix>
            <identifier>remap.drop_power</identifier>
            <autogen>__ConsumerToConsumer__ ConsumerKeyCode::POWER, ModifierFlag::FN, ConsumerKeyCode::POWER</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::POWER, KeyCode::VK_NONE</autogen>
          </item>
        </item>
        <item>
          <name>Functional Keys to F1..F12</name>
          <appendix>Brightness Down to F1</appendix>
          <appendix>Brightness Up to F2</appendix>
          <appendix>Mission Control to F3</appendix>
          <appendix>Expose to F3</appendix>
          <appendix>Launchpad to F4</appendix>
          <appendix>Dashboard to F4</appendix>
          <appendix>Keyboard Light LOW to F5</appendix>
          <appendix>Keyboard Light HIGH to F6</appendix>
          <appendix>Music Prev to F7</appendix>
          <appendix>Music Play/Pause to F8</appendix>
          <appendix>Music Next to F9</appendix>
          <appendix>Volume Mute to F10</appendix>
          <appendix>Volume Down to F11</appendix>
          <appendix>Volume Up to F12</appendix>
          <identifier>remap.functional2fn_2008</identifier>
          <!-- F1 -->
          <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_DOWN,    KeyCode::F1</autogen>
          <autogen>__KeyToKey__      KeyCode::BRIGHTNESS_DOWN,            KeyCode::F1</autogen>
          <!-- F2 -->
          <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_UP,      KeyCode::F2</autogen>
          <autogen>__KeyToKey__      KeyCode::BRIGHTNESS_UP,              KeyCode::F2</autogen>
          <!-- F3 - F12 -->
          <autogen>__KeyToKey__      KeyCode::EXPOSE_ALL,                 KeyCode::F3</autogen>
          <autogen>__KeyToKey__      KeyCode::DASHBOARD,                  KeyCode::F4</autogen>
          <autogen>__KeyToKey__      KeyCode::LAUNCHPAD,                  KeyCode::F4</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_LOW,  KeyCode::F5</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_HIGH, KeyCode::F6</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PREV,         KeyCode::F7</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PLAY,         KeyCode::F8</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_NEXT,         KeyCode::F9</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE,        KeyCode::F10</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN,        KeyCode::F11</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP,          KeyCode::F12</autogen>
        </item>
        <item>
          <name>MacBookAir3,1 (MacBook Air Late 2010) to Previous Model</name>
          <appendix>Music Prev(F6) to F6</appendix>
          <appendix>Music Play(F7) to Music Prev</appendix>
          <appendix>Music Next(F8) to Music Play</appendix>
          <appendix>Volume Mute(F9) to Music Next</appendix>
          <appendix>Volume Down(F10) to Volume Mute</appendix>
          <appendix>Volume Up(F11) to Volume Down</appendix>
          <appendix>Eject(F12) to Volume Up</appendix>
          <appendix></appendix>
          <appendix>*** We recommend you to use "NoEjectDelay" together when you change eject key.</appendix>
          <appendix>*** &#8594; http://pqrs.org/macosx/keyremap4macbook/extra.html</appendix>
          <identifier>remap.functional2fn_air3_1_to_previous</identifier>
          <autogen>__ConsumerToKey__      ConsumerKeyCode::MUSIC_PREV,  KeyCode::F6</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::MUSIC_PLAY,  ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::MUSIC_NEXT,  ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_MUTE, ConsumerKeyCode::MUSIC_NEXT</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_DOWN, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_UP,   ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::EJECT,       ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item>
          <name>Change Media Keys (Play/Pause, Prev, Next)</name>
          <item>
            <name>Media Keys to F7..F9</name>
            <appendix>Music Prev to F7</appendix>
            <appendix>Music Play/Pause to F8</appendix>
            <appendix>Music Next to F9</appendix>
            <identifier>remap.mediaKeysToFKeys</identifier>
            <!-- F7 - F9 -->
            <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PREV,         KeyCode::F7</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PLAY,         KeyCode::F8</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_NEXT,         KeyCode::F9</autogen>
          </item>
          <item>
            <name>Media Keys to F6..F8</name>
            <appendix>Music Prev to F6</appendix>
            <appendix>Music Play/Pause to F7</appendix>
            <appendix>Music Next to F8</appendix>
            <identifier>remap.mediaKeysToFKeys_f6f8</identifier>
            <!-- F6 - F8 -->
            <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PREV, KeyCode::F6</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PLAY, KeyCode::F7</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_NEXT, KeyCode::F8</autogen>
          </item>
          <item>
            <name>Fn+Function Keys to Media Keys</name>
            <appendix>Fn+F7 to Music Prev</appendix>
            <appendix>Fn+F8 to Music Play/Pause</appendix>
            <appendix>Fn+F9 to Music Next</appendix>
            <identifier>remap.FNFkeysToMediaKeys</identifier>
            <!-- F7 - F9 -->
            <autogen>__KeyToConsumer__ KeyCode::F7, ModifierFlag::FN, ConsumerKeyCode::MUSIC_PREV</autogen>
            <autogen>__KeyToConsumer__ KeyCode::F8, ModifierFlag::FN, ConsumerKeyCode::MUSIC_PLAY</autogen>
            <autogen>__KeyToConsumer__ KeyCode::F9, ModifierFlag::FN, ConsumerKeyCode::MUSIC_NEXT</autogen>
          </item>
        </item>
        <item>
          <name>Functionalize 2.0</name>
          <appendix>You need to turn "Use all F1, F2, etc. keys as standard function keys" off.</appendix>
          <appendix>Open System Preferences &gt; Keyboard, and turn it off.</appendix>
          <item>
            <name>ConsumerKeys to F[1-12] Mode</name>
            <appendix>(Brightness Down to F1)</appendix>
            <appendix>(Brightness Up to F2)</appendix>
            <appendix>(...)</appendix>
            <appendix>(Volume Up to F12)</appendix>
            <identifier vk_config="true">notsave.revert_fnkeys</identifier>
            <autogen>__ShowStatusMessage__ Fn Keys Enabled</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_DOWN,    KeyCode::F1</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_UP,      KeyCode::F2</autogen>
            <autogen>__KeyToKey__      KeyCode::EXPOSE_ALL,                 KeyCode::F3</autogen>
            <autogen>__KeyToKey__      KeyCode::DASHBOARD,                  KeyCode::F4</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_LOW,  KeyCode::F5</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_HIGH, KeyCode::F6</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PREV,         KeyCode::F7</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PLAY,         KeyCode::F8</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_NEXT,         KeyCode::F9</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE,        KeyCode::F10</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN,        KeyCode::F11</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP,          KeyCode::F12</autogen>
          </item>
          <item>
            <name>Fn - Tap for Real FnLock</name>
            <appendix>This enables FnLock and disables all consumer keys</appendix>
            <identifier>remap.fn2fn_real_fnlock</identifier>
            <autogen>__KeyOverlaidModifier__ KeyCode::FN, KeyCode::FN, KeyCode::VK_LOCK_FN, KeyCode::VK_CONFIG_TOGGLE_notsave_revert_fnkeys</autogen>
          </item>
          <item>
            <name>Fn - Tap to Enable Fn Keys Only</name>
            <appendix>This enables disables all consumer keys only</appendix>
            <identifier>remap.doubletab_restore_fkeys</identifier>
            <autogen>__KeyOverlaidModifier__ KeyCode::FN, KeyCode::FN, KeyCode::VK_CONFIG_TOGGLE_notsave_revert_fnkeys</autogen>
          </item>
          <item>
            <name>Disable F[3-6] Consumer Keys and set to F[14-17],</name>
            <appendix>when ConsumerKeys Mode is disabled.</appendix>
            <appendix>(Expose to F14)</appendix>
            <appendix>(Dashboard to F15)</appendix>
            <appendix>(Keyboard Light Low to F16)</appendix>
            <appendix>(Keyboard Light High to F17)</appendix>
            <identifier>remap.disable_f3_thru_f6_consumer</identifier>
            <block>
              <config_not>notsave_revert_fnkeys</config_not>
              <autogen>__KeyToKey__      KeyCode::EXPOSE_ALL,                 KeyCode::F14</autogen>
              <autogen>__KeyToKey__      KeyCode::DASHBOARD,                  KeyCode::F15</autogen>
              <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_LOW,  KeyCode::F16</autogen>
              <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_HIGH, KeyCode::F17</autogen>
            </block>
          </item>
        </item>
      </item>
    </item>

    <item>
      <name>Change F1..F19 Key</name>
      <item>
        <name>F1..F12 to Functional Keys (Brightness Adjust, Music Control, etc)</name>
        <item>
          <name>F1,F2 to Brightness Adjust</name>
          <appendix>F1 to Brightness Down</appendix>
          <appendix>F2 to Brightness Up</appendix>
          <identifier>remap.fkeys_to_consumer_f1</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F1, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F2, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
        </item>
        <item>
          <name>F3,F4 to Mission Control/Launchpad</name>
          <appendix>For Lion users</appendix>
          <identifier>remap.fkeys_to_consumer_f3_lion</identifier>
          <autogen>__KeyToKey__ KeyCode::F3, KeyCode::MISSION_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, KeyCode::LAUNCHPAD</autogen>
        </item>
        <item>
          <name>F3,F4 to Expose/Dashboard</name>
          <appendix>For Snow Leopard users</appendix>
          <identifier>remap.fkeys_to_consumer_f3_snow</identifier>
          <autogen>__KeyToKey__ KeyCode::F3, KeyCode::EXPOSE_ALL</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, KeyCode::DASHBOARD</autogen>
        </item>
        <item>
          <name>F5,F6 to Keyboard Backlit Adjust</name>
          <appendix>F5 to Keyboard Backlit Low</appendix>
          <appendix>F6 to Keyboard Backlit High</appendix>
          <identifier>remap.fkeys_to_consumer_f5</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F5, ConsumerKeyCode::KEYBOARDLIGHT_LOW</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F6, ConsumerKeyCode::KEYBOARDLIGHT_HIGH</autogen>
        </item>
        <item>
          <name>F7,F8,F9 to Music Controls</name>
          <appendix>F7 to Music Prev</appendix>
          <appendix>F8 to Music Play/Pause</appendix>
          <appendix>F9 to Music Next</appendix>
          <identifier>remap.fkeys_to_consumer_f7</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F7, ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F8, ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F9, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item>
          <name>F10,F11,F12 to Speaker Controls</name>
          <appendix>F10 to Mute</appendix>
          <appendix>F11 to Volume Down</appendix>
          <appendix>F12 to Volume Up</appendix>
          <identifier>remap.fkeys_to_consumer_f10</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F10, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F11, ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F12, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
      </item>

      <item>
        <name>Fn+F1..F12 to Functional Keys (Brightness Adjust, Music Control, etc)</name>
        <appendix>(Use these settings if you activated "XXX to Fn")</appendix>
        <item>
          <name>Fn+F1,F2 to Brightness Adjust</name>
          <appendix>Fn+F1 to Brightness Down</appendix>
          <appendix>Fn+F2 to Brightness Up</appendix>
          <identifier>remap.fn_fkeys_to_consumer_f1</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F1, ModifierFlag::FN, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F2, ModifierFlag::FN, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
        </item>
        <item>
          <name>Fn+F3,F4 to Mission Control/Launchpad</name>
          <appendix>For Lion users</appendix>
          <identifier>remap.fn_fkeys_to_consumer_f3_lion</identifier>
          <autogen>__KeyToKey__ KeyCode::F3, ModifierFlag::FN, KeyCode::MISSION_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, ModifierFlag::FN, KeyCode::LAUNCHPAD</autogen>
        </item>
        <item>
          <name>Fn+F3,F4 to Expose/Dashboard</name>
          <appendix>For Snow Leopard users</appendix>
          <identifier>remap.fn_fkeys_to_consumer_f3_snow</identifier>
          <autogen>__KeyToKey__ KeyCode::F3, ModifierFlag::FN, KeyCode::EXPOSE_ALL</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, ModifierFlag::FN, KeyCode::DASHBOARD</autogen>
        </item>
        <item>
          <name>Fn+F5,F6 to Keyboard Backlit Adjust</name>
          <appendix>Fn+F5 to Keyboard Backlit Low</appendix>
          <appendix>Fn+F6 to Keyboard Backlit High</appendix>
          <identifier>remap.fn_fkeys_to_consumer_f5</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F5, ModifierFlag::FN, ConsumerKeyCode::KEYBOARDLIGHT_LOW</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F6, ModifierFlag::FN, ConsumerKeyCode::KEYBOARDLIGHT_HIGH</autogen>
        </item>
        <item>
          <name>Fn+F7,F8,F9 to Music Controls</name>
          <appendix>Fn+F7 to Music Prev</appendix>
          <appendix>Fn+F8 to Music Play/Pause</appendix>
          <appendix>Fn+F9 to Music Next</appendix>
          <identifier>remap.fn_fkeys_to_consumer_f7</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F7, ModifierFlag::FN, ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F8, ModifierFlag::FN, ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F9, ModifierFlag::FN, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item>
          <name>Fn+F10,F11,F12 to Speaker Controls</name>
          <appendix>Fn+F10 to Mute</appendix>
          <appendix>Fn+F11 to Volume Down</appendix>
          <appendix>Fn+F12 to Volume Up</appendix>
          <identifier>remap.fn_fkeys_to_consumer_f10</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F10, ModifierFlag::FN, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F11, ModifierFlag::FN, ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F12, ModifierFlag::FN, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
      </item>

      <item>
        <name>Separately settings</name>
        <item>
          <name>F1 to Brightness Down (except virtual machine, RDC)</name>
          <identifier>remap.f1_to_brightnessdown</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F1, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
        </item>
        <item>
          <name>F2 to Brightness Up (except virtual machine, RDC)</name>
          <identifier>remap.f2_to_brightnessup</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F2, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F3 to Volume Mute (except virtual machine, RDC)</name>
          <identifier>remap.f3_to_volumemute</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F3, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>F4 to Volume Down (except virtual machine, RDC)</name>
          <identifier>remap.f4_to_volumedown</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F4, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>F5 to Volume Up (except virtual machine, RDC)</name>
          <identifier>remap.f5_to_volumeup</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F5, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F4 to Launchpad</name>
          <identifier>remap.f4_to_launchpad</identifier>
          <autogen>__KeyToKey__ KeyCode::F4, KeyCode::LAUNCHPAD</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F4 to Volume Mute</name>
          <identifier>remap.f4_to_volumemute</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F4, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>F5 to Volume Down</name>
          <identifier>remap.f5_to_volumedown</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F5, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>F6 to Volume Up</name>
          <identifier>remap.f6_to_volumeup</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F6, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F5/F6 to Volume Down/Up 1/4</name>
          <appendix>(This option does not work properly since Mac OS X 10.7.)</appendix>
          <identifier>remap.f5f6_to_volumedownup_quarter</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F5, ModifierFlag::NONE, ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F6, ModifierFlag::NONE, ConsumerKeyCode::VOLUME_UP, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>F5 to Volume Down 1/4</name>
          <appendix>(This option does not work properly since Mac OS X 10.7.)</appendix>
          <identifier>remap.f5_to_volumedown_quarter</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F5, ModifierFlag::NONE, ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>F6 to Volume Up 1/4</name>
          <appendix>(This option does not work properly since Mac OS X 10.7.)</appendix>
          <identifier>remap.f6_to_volumeup_quarter</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F6, ModifierFlag::NONE, ConsumerKeyCode::VOLUME_UP, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>F5/F6 to Volume Down/Up without click</name>
          <identifier>remap.f5f6_to_voldownup_woclick</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F5, ModifierFlag::NONE, ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F6, ModifierFlag::NONE, ConsumerKeyCode::VOLUME_UP, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F5 to Volume Mute</name>
          <identifier>remap.f5_to_volumemute</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F5, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F5, F6, and F7 to iTunes music controls</name>
          <appendix>* F5 to Music Prev</appendix>
          <appendix>* F6 to Music Play/Pause</appendix>
          <appendix>* F7 to Music Next</appendix>
          <identifier>remap.f5_f7_to_musiccontrols</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F5, ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F6, ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F7, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F6 to Virtual NumLock</name>
          <appendix>Unlike Fn_Lock, retaining cursor keys, delete key.</appendix>
          <item>
            <name>Virtual NumLock</name>
            <appendix>6 7 8 9 0 - &#8594; Clear 7 8 9 / =</appendix>
            <appendix>U I O P &#8594; 4 5 6 *</appendix>
            <appendix>J K L ; &#8594; 1 2 3 -</appendix>
            <appendix>M . / &#8594; 0 . +</appendix>
            <identifier vk_config="true">notsave.virtual_numlock</identifier>
            <autogen>__ShowStatusMessage__ NumLock</autogen>
            <autogen>__KeyToKey__ KeyCode::M,         KeyCode::KEYPAD_0</autogen>
            <autogen>__KeyToKey__ KeyCode::J,         KeyCode::KEYPAD_1</autogen>
            <autogen>__KeyToKey__ KeyCode::K,         KeyCode::KEYPAD_2</autogen>
            <autogen>__KeyToKey__ KeyCode::L,         KeyCode::KEYPAD_3</autogen>
            <autogen>__KeyToKey__ KeyCode::U,         KeyCode::KEYPAD_4</autogen>
            <autogen>__KeyToKey__ KeyCode::I,         KeyCode::KEYPAD_5</autogen>
            <autogen>__KeyToKey__ KeyCode::O,         KeyCode::KEYPAD_6</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,     KeyCode::KEYPAD_7</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,     KeyCode::KEYPAD_8</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,     KeyCode::KEYPAD_9</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,     KeyCode::KEYPAD_CLEAR</autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH,     KeyCode::KEYPAD_PLUS</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::KEYPAD_MINUS</autogen>
            <autogen>__KeyToKey__ KeyCode::P,         KeyCode::KEYPAD_MULTIPLY</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,     KeyCode::KEYPAD_SLASH</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,     KeyCode::KEYPAD_EQUAL</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,       KeyCode::KEYPAD_DOT</autogen>
          </item>
          <item>
            <name>F6 to toggle "Virtual NumLock"</name>
            <identifier>remap.f6_to_virtual_numlock</identifier>
            <autogen>__KeyToKey__ KeyCode::F6, KeyCode::VK_CONFIG_TOGGLE_notsave_virtual_numlock</autogen>
          </item>
        </item>
        <item>
          <name>F6 to Fn_Lock (except virtual machine, RDC)</name>
          <identifier>remap.f6_to_numlock</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToKey__ KeyCode::F6, KeyCode::VK_LOCK_FN</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F7 to Video Mirror (except virtual machine, RDC)</name>
          <identifier>remap.f7_to_videomirror</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F7, ConsumerKeyCode::VIDEO_MIRROR</autogen>
        </item>
        <item>
          <name>F8 to Keyboard Light Off (except virtual machine, RDC)</name>
          <identifier>remap.f8_to_keyboardlightoff</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F8, ConsumerKeyCode::KEYBOARDLIGHT_OFF</autogen>
        </item>
        <item>
          <name>F9 to Keyboard Light LOW (except virtual machine, RDC)</name>
          <identifier>remap.f9_to_keyboardlightlow</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F9, ConsumerKeyCode::KEYBOARDLIGHT_LOW</autogen>
        </item>
        <item>
          <name>F10 to Keyboard Light HIGH (except virtual machine, RDC)</name>
          <identifier>remap.f10_to_keyboardlighthigh</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F10, ConsumerKeyCode::KEYBOARDLIGHT_HIGH</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F7 to Music Prev (except virtual machine, RDC)</name>
          <identifier>remap.f7_to_musicprev</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F7, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>F8 to Music Play/Pause (except virtual machine, RDC)</name>
          <identifier>remap.f8_to_musicplay</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F8, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>F9 to Music Next (except virtual machine, RDC)</name>
          <identifier>remap.f9_to_musicplay</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F9, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F8 to Music Prev</name>
          <identifier>remap.f8_to_musicprev_all</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F8, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>F9 to Music Play/Pause</name>
          <identifier>remap.f9_to_musicplay_all</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F9, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>F10 to Music Next</name>
          <identifier>remap.f10_to_musicnext_all</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F10, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F10 to Volume Mute</name>
          <identifier>remap.f10_to_volumemute_all</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F10, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>F11 to Volume Down</name>
          <identifier>remap.f11_to_volumedown_all</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F11, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>F12 to Volume Up</name>
          <identifier>remap.f12_to_volumeup_all</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F12, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F10 to Volume Mute (except virtual machine, RDC)</name>
          <identifier>remap.f10_to_volumemute</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F10, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>F11 to Volume Down (except virtual machine, RDC)</name>
          <identifier>remap.f11_to_volumedown</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F11, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>F12 to Volume Up (except virtual machine, RDC)</name>
          <identifier>remap.f12_to_volumeup</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F12, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F13 to Volume Mute</name>
          <identifier>remap.f13_to_volumemute_all</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F13, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>F14 to Volume Down</name>
          <identifier>remap.f14_to_volumedown_all</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F14, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>F15 to Volume Up</name>
          <identifier>remap.f15_to_volumeup_all</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F15, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F13 to Volume Mute (except virtual machine, RDC)</name>
          <identifier>remap.f13_to_volumemute</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F13, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>F14 to Volume Down (except virtual machine, RDC)</name>
          <identifier>remap.f14_to_volumedown</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F14, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>F15 to Volume Up (except virtual machine, RDC)</name>
          <identifier>remap.f15_to_volumeup</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToConsumer__ KeyCode::F15, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F14 to Music Prev</name>
          <identifier>remap.f14_to_musicprev_all</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F14, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>F15 to Music Play/Pause</name>
          <identifier>remap.f15_to_musicplay_all</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F15, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>F16 to Music Next</name>
          <identifier>remap.f16_to_musicnext_all</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F16, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>F16 to Music Prev</name>
          <identifier>remap.f16_to_musicprev</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F16, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>F17 to Music Play/Pause</name>
          <identifier>remap.f17_to_musicplay</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F17, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>F18 to Music Next</name>
          <identifier>remap.f18_to_musicnext</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F18, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>MacBook Air (2010, Late) Style</name>
          <item>
            <name>F6 to Music Prev</name>
            <identifier>remap.f6_to_musicprev_all</identifier>
            <autogen>__KeyToConsumer__ KeyCode::F6, ConsumerKeyCode::MUSIC_PREV</autogen>
          </item>
          <item>
            <name>F7 to Music Play/Pause</name>
            <identifier>remap.f7_to_musicplay_all</identifier>
            <autogen>__KeyToConsumer__ KeyCode::F7, ConsumerKeyCode::MUSIC_PLAY</autogen>
          </item>
          <item>
            <name>F8 to Music Next</name>
            <identifier>remap.f8_to_musicnext_all</identifier>
            <autogen>__KeyToConsumer__ KeyCode::F8, ConsumerKeyCode::MUSIC_NEXT</autogen>
          </item>

          <item>
            <name>F9 to Volume Mute</name>
            <identifier>remap.f9_to_volumemute_all</identifier>
            <autogen>__KeyToConsumer__ KeyCode::F9, ConsumerKeyCode::VOLUME_MUTE</autogen>
          </item>
          <item>
            <name>F10 to Volume Down</name>
            <identifier>remap.f10_to_volumedown_all</identifier>
            <autogen>__KeyToConsumer__ KeyCode::F10, ConsumerKeyCode::VOLUME_DOWN</autogen>
          </item>
          <item>
            <name>F11 to Volume Up</name>
            <identifier>remap.f11_to_volumeup_all</identifier>
            <autogen>__KeyToConsumer__ KeyCode::F11, ConsumerKeyCode::VOLUME_UP</autogen>
          </item>
          <item>
            <name>F12 to Eject</name>
            <identifier>remap.f12_to_eject_all</identifier>
            <autogen>__KeyToConsumer__ KeyCode::F12, ConsumerKeyCode::EJECT</autogen>
          </item>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Fn+F11 to F11</name>
          <identifier>remap.FnF11_to_f11</identifier>
          <autogen>__KeyToKey__ KeyCode::F11, ModifierFlag::FN, KeyCode::F11</autogen>
        </item>
        <item>
          <name>Fn+F12 to F12</name>
          <identifier>remap.FnF12_to_f12</identifier>
          <autogen>__KeyToKey__ KeyCode::F12, ModifierFlag::FN, KeyCode::F12</autogen>
        </item>
        <item>
          <name>F11 to display mirroring</name>
          <identifier>remap.F11_to_mirroring</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F11, ConsumerKeyCode::VIDEO_MIRROR</autogen>
        </item>
        <item>
          <name>F12 to Forward Delete</name>
          <identifier>remap.f12_to_forwarddelete</identifier>
          <autogen>__KeyToKey__ KeyCode::F12, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>F12 to Expose</name>
          <identifier>remap.F12_to_expose</identifier>
          <autogen>__KeyToKey__ KeyCode::F12, KeyCode::EXPOSE_ALL</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Fn+F1 to Brightness Down</name>
          <identifier>remap.fnF1_to_brightnessdown</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F1, ModifierFlag::FN, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
        </item>
        <item>
          <name>Fn+F2 to Brightness Up</name>
          <identifier>remap.fnF2_to_brightnessup</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F2, ModifierFlag::FN, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Fn+F7 to Music Prev</name>
          <identifier>remap.fnF7_to_musicprev</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F7, ModifierFlag::FN, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>Fn+F8 to Music Play/Pause</name>
          <identifier>remap.fnF8_to_musicplay</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F8, ModifierFlag::FN, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>Fn+F9 to Music Next</name>
          <identifier>remap.fnF9_to_musicplay</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F9, ModifierFlag::FN, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Fn+F10 to Volume Mute</name>
          <identifier>remap.fnF10_to_volumemute</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F10, ModifierFlag::FN, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>Fn+F11 to Volume Down</name>
          <identifier>remap.fnF11_to_volumedown</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F11, ModifierFlag::FN, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>Fn+F12 to Volume Up</name>
          <identifier>remap.fnF12_to_volumeup</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F12, ModifierFlag::FN, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Fn+F5 to PageDown</name>
          <identifier>remap.fnF5_to_pagedown</identifier>
          <autogen>__KeyToKey__ KeyCode::F5, ModifierFlag::FN, KeyCode::PAGEDOWN</autogen>
        </item>
        <item>
          <name>Fn+F12 to PageUp</name>
          <identifier>remap.fnF12_to_pageup</identifier>
          <autogen>__KeyToKey__ KeyCode::F12, ModifierFlag::FN, KeyCode::PAGEUP</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>Change Command+F1...F12 to Functional Keys</name>
          <appendix>(ex. F10 to Volume Mute, F11 to Volume Down)</appendix>
          <identifier>remap.command_f1_f12_to_functional</identifier>
          <autogen>__KeyToKey__ KeyCode::F1,       VK_COMMAND, KeyCode::BRIGHTNESS_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::F2,       VK_COMMAND, KeyCode::BRIGHTNESS_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::F3,       VK_COMMAND, KeyCode::EXPOSE_ALL</autogen>
          <autogen>__KeyToKey__ KeyCode::F4,       VK_COMMAND, KeyCode::DASHBOARD</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F7,  VK_COMMAND, ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F8,  VK_COMMAND, ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F9,  VK_COMMAND, ConsumerKeyCode::MUSIC_NEXT</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F10, VK_COMMAND, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F11, VK_COMMAND, ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F12, VK_COMMAND, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>

        <item>
          <name>Change F1...F12 to Functional Keys (except Terminal)</name>
          <appendix>(ex. F10 to Volume Mute, F11 to Volume Down)</appendix>
          <identifier>remap.f1_f12_to_functional</identifier>
          <not>TERMINAL</not>
          <autogen>__KeyToConsumer__ KeyCode::F1,  ModifierFlag::FN, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F2,  ModifierFlag::FN, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
          <autogen>__KeyToKey__      KeyCode::F3,  ModifierFlag::FN, KeyCode::EXPOSE_ALL</autogen>
          <autogen>__KeyToKey__      KeyCode::F4,  ModifierFlag::FN, KeyCode::DASHBOARD</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F7,  ModifierFlag::FN, ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F8,  ModifierFlag::FN, ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F9,  ModifierFlag::FN, ConsumerKeyCode::MUSIC_NEXT</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F10, ModifierFlag::FN, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F11, ModifierFlag::FN, ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F12, ModifierFlag::FN, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>

        <item>
          <name>Force change F1..F12 in VMware, Parallels, RDC</name>
          <item>
            <name>F1 to Brightness Down</name>
            <identifier>remap.f1_to_brightnessdown_force</identifier>
            <autogen>__KeyToConsumer__ KeyCode::F1, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
          </item>
          <item>
            <name>F2 to Brightness Up</name>
            <identifier>remap.f2_to_brightnessup_force</identifier>
            <autogen>__KeyToConsumer__ KeyCode::F2, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
          </item>
          <item>
            <name>F3 to Volume Mute</name>
            <identifier>remap.f3_to_volumemute_force</identifier>
            <autogen>__KeyToConsumer__ KeyCode::F3, ConsumerKeyCode::VOLUME_MUTE</autogen>
          </item>
          <item>
            <name>F4 to Volume Down</name>
            <identifier>remap.f4_to_volumedown_force</identifier>
            <autogen>__KeyToConsumer__ KeyCode::F4, ConsumerKeyCode::VOLUME_DOWN</autogen>
          </item>
          <item>
            <name>F5 to Volume Up</name>
            <identifier>remap.f5_to_volumeup_force</identifier>
            <autogen>__KeyToConsumer__ KeyCode::F5, ConsumerKeyCode::VOLUME_UP</autogen>
          </item>
        </item>
        <item>
          <name>Control+F1 to F16</name>
          <identifier>remap.controlF1toF16</identifier>
          <autogen>__KeyToKey__ KeyCode::F1, VK_CONTROL, KeyCode::F16</autogen>
        </item>
        <item>
          <name>F11 to F4</name>
          <identifier>remap.f11_to_f4</identifier>
          <autogen>__KeyToKey__ KeyCode::F11, KeyCode::F4</autogen>
        </item>
        <item>
          <name>F16 to Tab</name>
          <identifier>remap.f16_to_tab</identifier>
          <autogen>__KeyToKey__ KeyCode::F16, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>F19 to Quote(')</name>
          <identifier>remap.f19_to_quote</identifier>
          <autogen>__KeyToKey__ KeyCode::F19, KeyCode::QUOTE</autogen>
        </item>

        <item>
          <name>Macbook series: Keyboard Preferences Configured to Standard Function Keys</name>
          <appendix>(Except in Virtual Machine, RDC)</appendix>
          <appendix></appendix>
          <appendix>You need to use all F1, F2, etc. keys as standard function keys.</appendix>
          <appendix>Open Keyboard PreferencePane, and enable it.</appendix>
          <item>
            <name>F1,F2 to Brightness Adjust (except in Parallels/RDP)</name>
            <appendix>F1 to Brightness Down</appendix>
            <appendix>F2 to Brightness Up</appendix>
            <identifier>remap.mbpro_f1f2</identifier>
            <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
            <autogen>__KeyToConsumer__ KeyCode::F1, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
            <autogen>__KeyToConsumer__ KeyCode::F2, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
          </item>
          <item>
            <name>F3,F4 to Mission Control/Launchpad (except in Parallels/RDP)</name>
            <appendix>For Lion users</appendix>
            <identifier>remap.mbpro_f3f4_lion</identifier>
            <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
            <autogen>__KeyToKey__ KeyCode::F3, KeyCode::MISSION_CONTROL</autogen>
            <autogen>__KeyToKey__ KeyCode::F4, KeyCode::LAUNCHPAD</autogen>
          </item>
          <item>
            <name>F3,F4 to Expose/Dashboard (except in Parallels/RDP)</name>
            <appendix>For Snow Leopard users</appendix>
            <identifier>remap.mbpro_f3f4</identifier>
            <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
            <autogen>__KeyToKey__ KeyCode::F3, KeyCode::EXPOSE_ALL</autogen>
            <autogen>__KeyToKey__ KeyCode::F4, KeyCode::DASHBOARD</autogen>
          </item>
          <item>
            <name>F7,F8,F9 to Music Controls (except in Parallels/RDP), Macbook Pro Version</name>
            <appendix>F7 to Music Prev</appendix>
            <appendix>F8 to Music Play/Pause</appendix>
            <appendix>F9 to Music Next</appendix>
            <identifier>remap.mbpro_f7f8f9</identifier>
            <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
            <autogen>__KeyToConsumer__ KeyCode::F7, ConsumerKeyCode::MUSIC_PREV</autogen>
            <autogen>__KeyToConsumer__ KeyCode::F8, ConsumerKeyCode::MUSIC_PLAY</autogen>
            <autogen>__KeyToConsumer__ KeyCode::F9, ConsumerKeyCode::MUSIC_NEXT</autogen>
          </item>
          <item>
            <name>F10,F11,F12 to Speaker Controls (except in Parallels/RDP), Macbook Pro Version</name>
            <appendix>F10 to Mute</appendix>
            <appendix>F11 to Volume Down</appendix>
            <appendix>F12 to Volume Up</appendix>
            <identifier>remap.mbpro_f10f11f12</identifier>
            <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
            <autogen>__KeyToConsumer__ KeyCode::F10, ConsumerKeyCode::VOLUME_MUTE</autogen>
            <autogen>__KeyToConsumer__ KeyCode::F11, ConsumerKeyCode::VOLUME_DOWN</autogen>
            <autogen>__KeyToConsumer__ KeyCode::F12, ConsumerKeyCode::VOLUME_UP</autogen>
          </item>
        </item>

        <item>
          <name>For MacbookAir3,1 (Macbook Air Late 2010)</name>
          <appendix>Keyboard Preferences Configured to Standard Function Keys</appendix>
          <appendix>(Except in Virtual Machine, RDC)</appendix>
          <appendix></appendix>
          <appendix>You need to use all F1, F2, etc. keys as standard function keys.</appendix>
          <appendix>Open Keyboard PreferencePane, and enable it.</appendix>
          <item>
            <name>F1,F2 to Brightness Adjust (except in Parallels/RDP)</name>
            <appendix>F1 to Brightness Down</appendix>
            <appendix>F2 to Brightness Up</appendix>
            <identifier>remap.air_f1f2</identifier>
            <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
            <autogen>__KeyToConsumer__ KeyCode::F1, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
            <autogen>__KeyToConsumer__ KeyCode::F2, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
          </item>
          <item>
            <name>F3,F4 to Mission Control/Launchpad (except in Parallels/RDP)</name>
            <appendix>For Lion users</appendix>
            <identifier>remap.air_f3f4_lion</identifier>
            <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
            <autogen>__KeyToKey__ KeyCode::F3, KeyCode::MISSION_CONTROL</autogen>
            <autogen>__KeyToKey__ KeyCode::F4, KeyCode::LAUNCHPAD</autogen>
          </item>
          <item>
            <name>F3,F4 to Expose/Dashboard (except in Parallels/RDP)</name>
            <appendix>For Snow Leopard users</appendix>
            <identifier>remap.air_f3f4</identifier>
            <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
            <autogen>__KeyToKey__      KeyCode::F3, KeyCode::EXPOSE_ALL</autogen>
            <autogen>__KeyToKey__      KeyCode::F4, KeyCode::DASHBOARD</autogen>
          </item>
          <item>
            <name>F6,F7,F8 to Music Controls (except in Parallels/RDP)</name>
            <appendix>F6 to Music Prev</appendix>
            <appendix>F7 to Music Play/Pause</appendix>
            <appendix>F8 to Music Next</appendix>
            <identifier>remap.air_f6f7f8</identifier>
            <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
            <autogen>__KeyToConsumer__ KeyCode::F6, ConsumerKeyCode::MUSIC_PREV</autogen>
            <autogen>__KeyToConsumer__ KeyCode::F7, ConsumerKeyCode::MUSIC_PLAY</autogen>
            <autogen>__KeyToConsumer__ KeyCode::F8, ConsumerKeyCode::MUSIC_NEXT</autogen>
          </item>
          <item>
            <name>F9,F10,F11 to Speaker Controls (except in Parallels/RDP)</name>
            <appendix>F9 to Mute</appendix>
            <appendix>F10 to Volume Down</appendix>
            <appendix>F11 to Volume Up</appendix>
            <identifier>remap.air_f9f10f11</identifier>
            <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
            <autogen>__KeyToConsumer__ KeyCode::F9, ConsumerKeyCode::VOLUME_MUTE</autogen>
            <autogen>__KeyToConsumer__ KeyCode::F10, ConsumerKeyCode::VOLUME_DOWN</autogen>
            <autogen>__KeyToConsumer__ KeyCode::F11, ConsumerKeyCode::VOLUME_UP</autogen>
          </item>
          <item>
            <name>F12(Eject) to Forward Delete/Insert</name>
            <appendix>F12 to Forward Delete (Auto-Repeating!)</appendix>
            <appendix>Fn+F12 to Insert</appendix>
            <identifier>remap.air_f12</identifier>
            <autogen>__KeyToKey__ KeyCode::F12, KeyCode::FORWARD_DELETE</autogen>
            <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::PC_INSERT</autogen>
          </item>
        </item>

        <item>
          <name>F1..F12 to Functional</name>
          <appendix>F1 to Brightness Down</appendix>
          <appendix>F2 to Brightness Up</appendix>
          <appendix>F3 to Expose</appendix>
          <appendix>F4 to Dashboard</appendix>
          <appendix>F7 to Music Prev</appendix>
          <appendix>F8 to Music Play/Pause</appendix>
          <appendix>F9 to Music Next</appendix>
          <appendix>F10 to Volume Mute</appendix>
          <appendix>F11 to Volume Down</appendix>
          <appendix>F12 to Volume Up</appendix>
          <appendix></appendix>
          <appendix>You need to use all F1, F2, etc. keys as standard function keys.</appendix>
          <appendix>Open Keyboard PreferencePane, and enable it.</appendix>
          <identifier>remap.f1_f12_to_functional_all</identifier>
          <autogen>__KeyToKey__ KeyCode::F1,  ModifierFlag::FN, KeyCode::F1</autogen>
          <autogen>__KeyToKey__ KeyCode::F2,  ModifierFlag::FN, KeyCode::F2</autogen>
          <autogen>__KeyToKey__ KeyCode::F3,  ModifierFlag::FN, KeyCode::F3</autogen>
          <autogen>__KeyToKey__ KeyCode::F4,  ModifierFlag::FN, KeyCode::F4</autogen>
          <autogen>__KeyToKey__ KeyCode::F7,  ModifierFlag::FN, KeyCode::F7</autogen>
          <autogen>__KeyToKey__ KeyCode::F8,  ModifierFlag::FN, KeyCode::F8</autogen>
          <autogen>__KeyToKey__ KeyCode::F9,  ModifierFlag::FN, KeyCode::F9</autogen>
          <autogen>__KeyToKey__ KeyCode::F10, ModifierFlag::FN, KeyCode::F10</autogen>
          <autogen>__KeyToKey__ KeyCode::F11, ModifierFlag::FN, KeyCode::F11</autogen>
          <autogen>__KeyToKey__ KeyCode::F12, ModifierFlag::FN, KeyCode::F12</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F1,  ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F2,  ConsumerKeyCode::BRIGHTNESS_UP</autogen>
          <autogen>__KeyToKey__      KeyCode::F3,  KeyCode::EXPOSE_ALL</autogen>
          <autogen>__KeyToKey__      KeyCode::F4,  KeyCode::DASHBOARD</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F7,  ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F8,  ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F9,  ConsumerKeyCode::MUSIC_NEXT</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F10, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F11, ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F12, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item>
          <name>F5,F6 to Functional</name>
          <appendix>F5 to Keyboard Light LOW</appendix>
          <appendix>F6 to Keyboard Light HIGH</appendix>
          <appendix></appendix>
          <appendix>You need to use all F1, F2, etc. keys as standard function keys.</appendix>
          <appendix>Open Keyboard PreferencePane, and enable it.</appendix>
          <identifier>remap.f5_f6_to_functional_all</identifier>
          <autogen>__KeyToKey__ KeyCode::F5,  ModifierFlag::FN, KeyCode::F5</autogen>
          <autogen>__KeyToKey__ KeyCode::F6,  ModifierFlag::FN, KeyCode::F6</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F5,  ConsumerKeyCode::KEYBOARDLIGHT_LOW</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F6,  ConsumerKeyCode::KEYBOARDLIGHT_HIGH</autogen>
        </item>

        <item>
          <name>F1..F12 to Functional (except virtual machine, RDC)</name>
          <appendix>F1 to Brightness Down</appendix>
          <appendix>F2 to Brightness Up</appendix>
          <appendix>F3 to Expose</appendix>
          <appendix>F4 to Dashboard</appendix>
          <appendix>F7 to Music Prev</appendix>
          <appendix>F8 to Music Play/Pause</appendix>
          <appendix>F9 to Music Next</appendix>
          <appendix>F10 to Volume Mute</appendix>
          <appendix>F11 to Volume Down</appendix>
          <appendix>F12 to Volume Up</appendix>
          <appendix></appendix>
          <appendix>You need to use all F1, F2, etc. keys as standard function keys.</appendix>
          <appendix>Open Keyboard PreferencePane, and enable it.</appendix>
          <identifier>remap.f1_f12_to_functional_ex_vm</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToKey__ KeyCode::F1,  ModifierFlag::FN, KeyCode::F1</autogen>
          <autogen>__KeyToKey__ KeyCode::F2,  ModifierFlag::FN, KeyCode::F2</autogen>
          <autogen>__KeyToKey__ KeyCode::F3,  ModifierFlag::FN, KeyCode::F3</autogen>
          <autogen>__KeyToKey__ KeyCode::F4,  ModifierFlag::FN, KeyCode::F4</autogen>
          <autogen>__KeyToKey__ KeyCode::F7,  ModifierFlag::FN, KeyCode::F7</autogen>
          <autogen>__KeyToKey__ KeyCode::F8,  ModifierFlag::FN, KeyCode::F8</autogen>
          <autogen>__KeyToKey__ KeyCode::F9,  ModifierFlag::FN, KeyCode::F9</autogen>
          <autogen>__KeyToKey__ KeyCode::F10, ModifierFlag::FN, KeyCode::F10</autogen>
          <autogen>__KeyToKey__ KeyCode::F11, ModifierFlag::FN, KeyCode::F11</autogen>
          <autogen>__KeyToKey__ KeyCode::F12, ModifierFlag::FN, KeyCode::F12</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F1,  ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F2,  ConsumerKeyCode::BRIGHTNESS_UP</autogen>
          <autogen>__KeyToKey__      KeyCode::F3,  KeyCode::EXPOSE_ALL</autogen>
          <autogen>__KeyToKey__      KeyCode::F4,  KeyCode::DASHBOARD</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F7,  ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F8,  ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F9,  ConsumerKeyCode::MUSIC_NEXT</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F10, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F11, ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F12, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item>
          <name>F5,F6 to Functional (except virtual machine, RDC)</name>
          <appendix>F5 to Keyboard Light LOW</appendix>
          <appendix>F6 to Keyboard Light HIGH</appendix>
          <appendix></appendix>
          <appendix>You need to use all F1, F2, etc. keys as standard function keys.</appendix>
          <appendix>Open Keyboard PreferencePane, and enable it.</appendix>
          <identifier>remap.f5_f6_to_functional_ex_vm</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToKey__ KeyCode::F5,  ModifierFlag::FN, KeyCode::F5</autogen>
          <autogen>__KeyToKey__ KeyCode::F6,  ModifierFlag::FN, KeyCode::F6</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F5,  ConsumerKeyCode::KEYBOARDLIGHT_LOW</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F6,  ConsumerKeyCode::KEYBOARDLIGHT_HIGH</autogen>
        </item>

        <item>
          <name>Fn+F1..F12 to Functional</name>
          <appendix>There is this setting for "* to Fn". (ex: Control_L to Fn)</appendix>
          <appendix></appendix>
          <appendix>Fn+F1 to Brightness Down</appendix>
          <appendix>Fn+F2 to Brightness Up</appendix>
          <appendix>Fn+F3 to Expose</appendix>
          <appendix>Fn+F4 to Dashboard</appendix>
          <appendix>Fn+F5 to Keyboard Light LOW</appendix>
          <appendix>Fn+F6 to Keyboard Light HIGH</appendix>
          <appendix>Fn+F7 to Music Prev</appendix>
          <appendix>Fn+F8 to Music Play/Pause</appendix>
          <appendix>Fn+F9 to Music Next</appendix>
          <appendix>Fn+F10 to Volume Mute</appendix>
          <appendix>Fn+F11 to Volume Down</appendix>
          <appendix>Fn+F12 to Volume Up</appendix>
          <appendix></appendix>
          <appendix>You need to use all F1, F2, etc. keys as standard function keys.</appendix>
          <appendix>Open Keyboard PreferencePane, and enable it.</appendix>
          <identifier>remap.fnF1_F12_to_functional</identifier>
          <autogen>__KeyToConsumer__ KeyCode::F1,  ModifierFlag::FN, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F2,  ModifierFlag::FN, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
          <autogen>__KeyToKey__      KeyCode::F3,  ModifierFlag::FN, KeyCode::EXPOSE_ALL</autogen>
          <autogen>__KeyToKey__      KeyCode::F4,  ModifierFlag::FN, KeyCode::DASHBOARD</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F7,  ModifierFlag::FN, ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F8,  ModifierFlag::FN, ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F9,  ModifierFlag::FN, ConsumerKeyCode::MUSIC_NEXT</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F10, ModifierFlag::FN, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F11, ModifierFlag::FN, ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>__KeyToConsumer__ KeyCode::F12, ModifierFlag::FN, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>

        <item>
          <name>MacBookPro4,1 functional to MacBookPro3,1 functional</name>
          <appendix></appendix>
          <appendix>Fn+F1 to Brightness Down</appendix>
          <appendix>Fn+F2 to Brightness Up</appendix>
          <appendix>Fn+F3 to Volume Mute</appendix>
          <appendix>Fn+F4 to Volume Down</appendix>
          <appendix>Fn+F5 to Volume Up</appendix>
          <appendix>Fn+F6 to NumLock</appendix>
          <appendix>Fn+F7 to Video Mirror</appendix>
          <appendix>Fn+F8 to Keyboard Light OFF</appendix>
          <appendix>Fn+F9 to Keyboard Light LOW</appendix>
          <appendix>Fn+F10 to Keyboard Light HIGH</appendix>
          <appendix>Fn+F11 to F11</appendix>
          <appendix>Fn+F12 to F12</appendix>
          <appendix></appendix>
          <appendix>You need to use all F1, F2, etc. keys as standard function keys.</appendix>
          <appendix>Open Keyboard PreferencePane, and enable it.</appendix>
          <identifier>remap.fnF1_F12_to_functional_mbp31</identifier>
          <autogen>__KeyToConsumer__      KeyCode::EXPOSE_ALL, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>__KeyToConsumer__      KeyCode::DASHBOARD,  ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::KEYBOARDLIGHT_LOW,  ConsumerKeyCode::VOLUME_UP</autogen>
          <autogen>__ConsumerToKey__      ConsumerKeyCode::KEYBOARDLIGHT_HIGH, KeyCode::VK_LOCK_FN</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::MUSIC_PREV, ConsumerKeyCode::VIDEO_MIRROR</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::MUSIC_PLAY, ConsumerKeyCode::KEYBOARDLIGHT_OFF</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::MUSIC_NEXT, ConsumerKeyCode::KEYBOARDLIGHT_LOW</autogen>
          <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_MUTE, ConsumerKeyCode::KEYBOARDLIGHT_HIGH</autogen>
          <autogen>__ConsumerToKey__      ConsumerKeyCode::VOLUME_DOWN, KeyCode::F11</autogen>
          <autogen>__ConsumerToKey__      ConsumerKeyCode::VOLUME_UP,   KeyCode::F12</autogen>
        </item>
      </item>
    </item>
  </item>

  <item>
    <name>Change Help Key</name>
    <item>
      <name>Change Help to Command_L</name>
      <identifier>remap.help2commandL</identifier>
      <autogen>__KeyToKey__ KeyCode::HELP, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Change Help to Control_L</name>
      <identifier>remap.help2controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::HELP, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Change Help to Option_L</name>
      <identifier>remap.help2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::HELP, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Change Help to Shift_L</name>
      <identifier>remap.help2shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::HELP, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>Change Help to F13</name>
      <identifier>remap.help2f13</identifier>
      <autogen>__KeyToKey__ KeyCode::HELP, KeyCode::F13</autogen>
    </item>
  </item>

  <item>
    <name>Change KeyPad Key</name>
    <item>
      <name>Change Clear Key</name>
      <item>
        <name>Clear to Delete</name>
        <identifier>remap.clear2delete</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_CLEAR, KeyCode::DELETE</autogen>
      </item>
      <item>
        <name>Clear to Equal</name>
        <identifier>remap.clear2equal</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_CLEAR, KeyCode::EQUAL</autogen>
      </item>
      <item>
        <name>Clear to Return</name>
        <identifier>remap.clear2return</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_CLEAR, KeyCode::RETURN</autogen>
      </item>
      <item>
        <name>Clear to Tab</name>
        <identifier>remap.clear2tab</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_CLEAR, KeyCode::TAB</autogen>
      </item>
    </item>
    <item>
      <name>Change KeyPad-Comma(,) Key</name>
      <item>
        <name>KeyPad-Comma(,) to Shift+Comma</name>
        <identifier>remap.keypadcomma2shiftComma</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_COMMA, KeyCode::KEYPAD_COMMA, ModifierFlag::SHIFT_L</autogen>
      </item>
      <item>
        <name>KeyPad-Comma(,) to Equal</name>
        <identifier>remap.keypadcomma2keypadequal</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_COMMA, KeyCode::KEYPAD_EQUAL</autogen>
      </item>
    </item>
    <item>
      <name>Change KeyPad-Dot(.) Key</name>
      <item>
        <name>Swap Dot and Shift+Dot</name>
        <identifier>remap.swap_dot_and_shiftdot</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEYPAD_DOT</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT,            ModifierFlag::NONE, KeyCode::KEYPAD_DOT, ModifierFlag::SHIFT_L</autogen>
      </item>
      <item>
        <name>KeyPad-Dot(.) to Comma(,)</name>
        <identifier>remap.keypaddot2comma</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, KeyCode::KEYPAD_COMMA</autogen>
      </item>
      <item>
        <name>Fn+KeyPad-Dot(.) to Fn+Shift+Dot</name>
        <appendix>(Useful for some keyboard layouts such as French, Italian, etc.)</appendix>
        <identifier>remap.fndot2fnshiftdot</identifier>
        <autogen>__KeyToKey__ KeyCode::DOT,        ModifierFlag::FN, KeyCode::DOT, ModifierFlag::FN | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, ModifierFlag::FN, KeyCode::DOT, ModifierFlag::FN | ModifierFlag::SHIFT_L</autogen>
      </item>
      <item>
        <name>Shift+KeyPad-Dot(.) to Comma</name>
        <identifier>remap.shift_keypad_dot2comma</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, VK_SHIFT, KeyCode::KEYPAD_COMMA</autogen>
      </item>
      <item>
        <name>Control+KeyPad-Dot(.) to Command+X (Cut)</name>
        <identifier>remap.controlDot2commandX</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
      </item>
    </item>
    <item>
      <name>Change KeyPad-Minus(-) Key</name>
      <item>
        <name>KeyPad-Minus(-) to Command_L</name>
        <identifier>remap.keypadminus2commandL</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_MINUS, KeyCode::COMMAND_L</autogen>
      </item>
      <item>
        <name>KeyPad-Minus(-) to Control_L</name>
        <identifier>remap.keypadminus2controlL</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_MINUS, KeyCode::CONTROL_L</autogen>
      </item>
      <item>
        <name>KeyPad-Minus(-) to Option_L</name>
        <identifier>remap.keypadminus2optionL</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_MINUS, KeyCode::OPTION_L</autogen>
      </item>
      <item>
        <name>KeyPad-Minus(-) to Shift_L</name>
        <identifier>remap.keypadminus2shiftL</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_MINUS, KeyCode::SHIFT_L</autogen>
      </item>
    </item>
    <item>
      <name>Change KeyPad-Plus(+) Key</name>
      <item>
        <name>KeyPad-Plus(+) to Command_L</name>
        <identifier>remap.keypadplus2commandL</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_PLUS, KeyCode::COMMAND_L</autogen>
      </item>
      <item>
        <name>KeyPad-Plus(+) to Control_L</name>
        <identifier>remap.keypadplus2controlL</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_PLUS, KeyCode::CONTROL_L</autogen>
      </item>
      <item>
        <name>KeyPad-Plus(+) to Option_L</name>
        <identifier>remap.keypadplus2optionL</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_PLUS, KeyCode::OPTION_L</autogen>
      </item>
      <item>
        <name>KeyPad-Plus(+) to Shift_L</name>
        <identifier>remap.keypadplus2shiftL</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_PLUS, KeyCode::SHIFT_L</autogen>
      </item>
    </item>
    <item>
      <name>Keypad_0 to Shift_L</name>
      <appendix>(+ When you type Keypad_0 only, send Keypad_0) + [KeyRepeat]</appendix>
      <identifier>remap.keypad0_2_shiftL_keypad0_keyrepeat</identifier>
      <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::KEYPAD_0, KeyCode::SHIFT_L, KeyCode::KEYPAD_0</autogen>
    </item>
    <item>
      <name>Control+Keypad_0 to Command+C (Copy)</name>
      <identifier>remap.controlkeypad0_to_commandC</identifier>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_0, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Shift+Keypad_0 to Command+V (Paste)</name>
      <identifier>remap.shiftkeypad0_to_commandV</identifier>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_0, VK_SHIFT, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control+Keypad_1 to Command+Down Arrow</name>
      <identifier>remap.controlkeypad1_to_commandDown</identifier>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_1, VK_CONTROL, KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control+Keypad_7 to Command+Up Arrow</name>
      <identifier>remap.controlkeypad7_to_commandUp</identifier>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_7, VK_CONTROL, KeyCode::CURSOR_UP, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Shift+Enter to Equal</name>
      <identifier>remap.shift_enter2equal</identifier>
      <autogen>__KeyToKey__ KeyCode::ENTER, VK_SHIFT, KeyCode::KEYPAD_EQUAL</autogen>
    </item>
    <item>
      <name>Keypad_0 x3 to Equal</name>
      <appendix>(+ retaining Keypad_0)</appendix>
      <appendix></appendix>
      <appendix>// When you use this setting,</appendix>
      <appendix>// open "Key Repeat" tab, and</appendix>
      <appendix>// change "[Double Press Modifier] Recognition Threshold" to a small number.</appendix>
      <appendix>// (For example, 50ms.)</appendix>
      <identifier>remap.keypad0_x3_to_equal</identifier>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_0, ModifierFlag::EXTRA1, KeyCode::KEYPAD_EQUAL</autogen>
      <autogen>__DoublePressModifier__ KeyCode::KEYPAD_0, KeyCode::KEYPAD_0, KeyCode::DELETE, KeyCode::DELETE, KeyCode::VK_STICKY_EXTRA1</autogen>
    </item>
    <item>
      <name>Logitech N305 hack / FILCO FKBT22MB hack</name>
      <appendix>(Enable equal, parentheses)</appendix>
      <appendix>(Disable NumLock key)</appendix>
      <identifier>remap.logitech_n305_hack</identifier>
      <!--
          ============================================================
          [Device Information]

          The following is the output for the number one key:
          *** An unnecessary Clear key is output ***
          eventType:keyDown code:0x47 name:Clear    flags:Fn         misc:
          eventType:keyUp   code:0x47 name:Clear    flags:Fn         misc:
          eventType:keyDown code:0x53 name:1        flags:NumPad     misc:
          eventType:keyUp   code:0x53 name:1        flags:NumPad     misc:
          eventType:keyDown code:0x47 name:Clear    flags:Fn         misc:
          eventType:keyUp   code:0x47 name:Clear    flags:Fn         misc:

          Equal Symbol:
          eventType:keyMod  code:0x3a name:Option_L flags:Opt        misc:
          eventType:keyDown code:0x58 name:6        flags:Opt NumPad misc:
          eventType:keyDown code:0x53 name:1        flags:Opt NumPad misc:
          eventType:keyUp   code:0x58 name:6        flags:Opt NumPad misc:
          eventType:keyUp   code:0x53 name:1        flags:Opt NumPad misc:
          eventType:keyMod  code:0x3a name:Option_L flags:           misc:

          Left Parenthesis:
          eventType:keyMod  code:0x3a name:Option_L flags:Opt        misc:
          eventType:keyDown code:0x56 name:4        flags:Opt NumPad misc:
          eventType:keyUp   code:0x56 name:4        flags:Opt NumPad misc:
          eventType:keyDown code:0x52 name:0        flags:Opt NumPad misc:
          eventType:keyUp   code:0x52 name:0        flags:Opt NumPad misc:
          eventType:keyMod  code:0x3a name:Option_L flags:           misc:

          Right Parenthesis:
          eventType:keyMod  code:0x3a name:Option_L flags:Opt        misc:
          eventType:keyDown code:0x56 name:4        flags:Opt NumPad misc:
          eventType:keyDown code:0x53 name:1        flags:Opt NumPad misc:
          eventType:keyUp   code:0x56 name:4        flags:Opt NumPad misc:
          eventType:keyUp   code:0x53 name:1        flags:Opt NumPad misc:
          eventType:keyMod  code:0x3a name:Option_L flags:           misc:

          ============================================================
          [Our approach]

          We use sticky modifiers to achieve equal, parentheses.

          Option_L+6 to EXTRA1.
          - EXTRA1+1 to Equal

          Option_L+4 to EXTRA2.
          -EXTRA2+0 to Left Parenthesis
          -EXTRA2+1 to Right Parenthesis

          Option_L+1 to EXTRA3.
          - EXTRA3+6 to Equal
          - EXTRA3+4 to Right Parenthesis

          Option_L+0 to EXTRA4.
          - EXTRA4+4 to Left Parenthesis

        -->
      <!-- to Equal -->
      <autogen>__KeyToKey__ KeyCode::KEYPAD_1, ModifierFlag::EXTRA1 | ModifierFlag::OPTION_L, KeyCode::KEYPAD_EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_1, ModifierFlag::EXTRA1,                          KeyCode::KEYPAD_EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_6, ModifierFlag::EXTRA3 | ModifierFlag::OPTION_L, KeyCode::KEYPAD_EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_6, ModifierFlag::EXTRA3,                          KeyCode::KEYPAD_EQUAL</autogen>

      <!-- to Left Parenthesis -->
      <autogen>__KeyToKey__ KeyCode::KEYPAD_0, ModifierFlag::EXTRA2 | ModifierFlag::OPTION_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_0, ModifierFlag::EXTRA2,                          KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_4, ModifierFlag::EXTRA4 | ModifierFlag::OPTION_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_4, ModifierFlag::EXTRA4,                          KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>

      <!-- to Right Parenthesis -->
      <autogen>__KeyToKey__ KeyCode::KEYPAD_1, ModifierFlag::EXTRA2 | ModifierFlag::OPTION_L, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_1, ModifierFlag::EXTRA2,                          KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_4, ModifierFlag::EXTRA3 | ModifierFlag::OPTION_L, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_4, ModifierFlag::EXTRA3,                          KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>

      <!-- to Sticky Modifier -->
      <autogen>__KeyToKey__ KeyCode::KEYPAD_6, ModifierFlag::OPTION_L | ModifierFlag::NONE, KeyCode::VK_STICKY_EXTRA1</autogen>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_4, ModifierFlag::OPTION_L | ModifierFlag::NONE, KeyCode::VK_STICKY_EXTRA2</autogen>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_1, ModifierFlag::OPTION_L | ModifierFlag::NONE, KeyCode::VK_STICKY_EXTRA3</autogen>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_0, ModifierFlag::OPTION_L | ModifierFlag::NONE, KeyCode::VK_STICKY_EXTRA4</autogen>

      <!-- ================================================== -->
      <!-- Disable unnecessary Clear -->
      <autogen>__KeyToKey__ KeyCode::PC_KEYPAD_NUMLOCK, KeyCode::VK_NONE</autogen>
    </item>
    <item>
      <name>Logitech Number Pad Hack</name>
      <appendix>Force turn NumLock on at Logitech Number Pad (0x046d,0xc523)</appendix>
      <identifier>remap.logitech_number_pad_hack</identifier>
      <autogen>__ForceNumLockOn__ DeviceVendor::LOGITECH, DeviceProduct::LOGITECH_NUMBER_PAD</autogen>
    </item>
    <item>
      <name>Use KeyPad as MS Project Build Keys</name>
      <appendix>Maps some of the keypad keys to standard debugger step thru cmds for Visual Studio</appendix>
      <item>
        <name>Change Keypad Enter Key to F5 (Run)</name>
        <identifier>remap.KPEnter_to_F5</identifier>
        <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::F5</autogen>
      </item>
      <item>
        <name>Change Keypad Dot(Del) Key to Shift+F5 (Stop)</name>
        <identifier>remap.KPDot_to_Shift_F5</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, KeyCode::F5, ModifierFlag::SHIFT_L</autogen>
      </item>
      <item>
        <name>Change Keypad 0 to F11 (Step in)</name>
        <identifier>remap.KP0_to_F11</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_0, KeyCode::F11</autogen>
      </item>
      <item>
        <name>Change Keypad 1 to Shift+F11/Step out (this is intentionally the key above F11)</name>
        <identifier>remap.KP1_to_Shift_F11</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_1, KeyCode::F11, ModifierFlag::SHIFT_L</autogen>
      </item>
      <item>
        <name>Change Keypad 2 to F10 (Step over)</name>
        <identifier>remap.KP2_to_F10</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_2, KeyCode::F10</autogen>
      </item>
    </item>
  </item>

  <item>
    <name>Change Minus Key</name>
    <item>
      <name>Change Minus to Semicolon</name>
      <identifier>remap.minus2semicolon</identifier>
      <autogen>__KeyToKey__ KeyCode::MINUS, KeyCode::SEMICOLON</autogen>
    </item>
  </item>

  <item>
    <name>Change Num Key (1...0)</name>
    <item>
      <name>Fn+Number to KeyPad</name>
      <appendix>Fn+1,Fn+2,...,Fn+9,Fn+0 to KeyPad Numbers</appendix>
      <appendix>Fn+Symbols (.+-=/) to KeyPad Symbols</appendix>
      <appendix>Fn+Shift+Delete to KeyPad Clear</appendix>
      <identifier>remap.fnnumber2keypad</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_1,  ModifierFlag::FN,            KeyCode::KEYPAD_1</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_2,  ModifierFlag::FN,            KeyCode::KEYPAD_2</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_3,  ModifierFlag::FN,            KeyCode::KEYPAD_3</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4,  ModifierFlag::FN,            KeyCode::KEYPAD_4</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_5,  ModifierFlag::FN,            KeyCode::KEYPAD_5</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_6,  ModifierFlag::FN,            KeyCode::KEYPAD_6</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7,  ModifierFlag::FN,            KeyCode::KEYPAD_7</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8,  ModifierFlag::FN | VK_SHIFT, KeyCode::KEYPAD_MULTIPLY</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8,  ModifierFlag::FN,            KeyCode::KEYPAD_8</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9,  ModifierFlag::FN,            KeyCode::KEYPAD_9</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0,  ModifierFlag::FN,            KeyCode::KEYPAD_0</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS,  ModifierFlag::FN,            KeyCode::KEYPAD_MINUS</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT,    ModifierFlag::FN,            KeyCode::KEYPAD_DOT</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH,  ModifierFlag::FN,            KeyCode::KEYPAD_SLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::EQUAL,  ModifierFlag::FN | VK_SHIFT, KeyCode::KEYPAD_PLUS</autogen>
      <autogen>__KeyToKey__ KeyCode::EQUAL,  ModifierFlag::FN,            KeyCode::KEYPAD_EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::DELETE, ModifierFlag::FN | VK_SHIFT, KeyCode::KEYPAD_CLEAR</autogen>
    </item>
    <item>
      <name>Num Key (1234567890-=) to F1...F12</name>
      <item>
        <name>Holding Command+1,2,3,4,... to F1,F2,F3,...,F12</name>
        <appendix>Holding Command+1 to F1</appendix>
        <appendix>Holding Command+2 to F2</appendix>
        <appendix>Holding Command+3 to F3</appendix>
        <appendix>Holding Command+4 to F4</appendix>
        <appendix>Holding Command+5 to F5</appendix>
        <appendix>Holding Command+6 to F6</appendix>
        <appendix>Holding Command+7 to F7</appendix>
        <appendix>Holding Command+8 to F8</appendix>
        <appendix>Holding Command+9 to F9</appendix>
        <appendix>Holding Command+10 to F10</appendix>
        <appendix>Holding Command+- to F11</appendix>
        <appendix>Holding Command+= to F12</appendix>
        <identifier>remap.holding_command_num_to_function</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_1, VK_COMMAND, KeyCode::KEY_1, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F1</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_2, VK_COMMAND, KeyCode::KEY_2, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F2</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_3, VK_COMMAND, KeyCode::KEY_3, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F3</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_4, VK_COMMAND, KeyCode::KEY_4, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F4</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_5, VK_COMMAND, KeyCode::KEY_5, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F5</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_6, VK_COMMAND, KeyCode::KEY_6, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F6</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_7, VK_COMMAND, KeyCode::KEY_7, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F7</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_8, VK_COMMAND, KeyCode::KEY_8, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F8</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_9, VK_COMMAND, KeyCode::KEY_9, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F9</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_0, VK_COMMAND, KeyCode::KEY_0, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F10</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::MINUS, VK_COMMAND, KeyCode::MINUS, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F11</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::EQUAL, VK_COMMAND, KeyCode::EQUAL, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F12</autogen>
      </item>

      <item>
        <name>Holding Shift+1 to F1</name>
        <identifier>remap.holding_shiftL1_to_f1</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_1, VK_SHIFT, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F1</autogen>
      </item>
      <item>
        <name>Holding Shift+2 to F2</name>
        <identifier>remap.holding_shiftL2_to_f2</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_2, VK_SHIFT, KeyCode::KEY_2, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F2</autogen>
      </item>
      <item>
        <name>Holding Shift+3 to F3</name>
        <identifier>remap.holding_shiftL3_to_f3</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_3, VK_SHIFT, KeyCode::KEY_3, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F3</autogen>
      </item>
      <item>
        <name>Holding Shift+4 to F4</name>
        <identifier>remap.holding_shiftL4_to_f4</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_4, VK_SHIFT, KeyCode::KEY_4, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F4</autogen>
      </item>
      <item>
        <name>Holding Shift+5 to F5</name>
        <identifier>remap.holding_shiftL5_to_f5</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_5, VK_SHIFT, KeyCode::KEY_5, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F5</autogen>
      </item>
      <item>
        <name>Holding Shift+6 to F6</name>
        <identifier>remap.holding_shiftL6_to_f6</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_6, VK_SHIFT, KeyCode::KEY_6, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F6</autogen>
      </item>
      <item>
        <name>Holding Shift+7 to F7</name>
        <identifier>remap.holding_shiftL7_to_f7</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_7, VK_SHIFT, KeyCode::KEY_7, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F7</autogen>
      </item>
      <item>
        <name>Holding Shift+8 to F8</name>
        <identifier>remap.holding_shiftL8_to_f8</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_8, VK_SHIFT, KeyCode::KEY_8, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F8</autogen>
      </item>
      <item>
        <name>Holding Shift+9 to F9</name>
        <identifier>remap.holding_shiftL9_to_f9</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_9, VK_SHIFT, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F9</autogen>
      </item>
      <item>
        <name>Holding Shift+0 to F10</name>
        <identifier>remap.holding_shiftL0_to_f10</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_0, VK_SHIFT, KeyCode::KEY_0, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F10</autogen>
      </item>
    </item>
    <item>
      <name>1234567890 to !@#$%^&amp;*() / Shift+1234567890 to 1234567890</name>
      <identifier>remap.swap_number_and_symbol</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::NONE, KeyCode::KEY_1, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::NONE, KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::NONE, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::NONE, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::NONE, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::NONE, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::NONE, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::NONE, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::NONE, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_1, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_2, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_3, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_5, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_6, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0</autogen>
    </item>
    <item>
      <name>CapsLock+1234567890 to !@#$%^&amp;*() / CapsLock+Shift+1234567890 to 1234567890</name>
      <identifier>remap.swap_capslock_number_and_symbol</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_1, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0</autogen>
    </item>
  </item>
  <item>
    <name>Change Option_L Key (Left Option)</name>
    <item>
      <name>Option_L to CapsLock</name>
      <identifier>remap.optionL2capslock</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::CAPSLOCK</autogen>
    </item>
    <item>
      <name>Option_L to Command_L</name>
      <identifier>remap.optionL2commandL</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option_L to Command_L (only in virtual machine, RDC)</name>
      <identifier>remap.optionL2commandL_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option_L to Control_L</name>
      <identifier>remap.optionL2controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Option_L to Control_L (only in virtual machine, RDC)</name>
      <identifier>remap.optionL2controlL_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Option_L to Fn</name>
      <identifier>remap.optionL2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Control_L+Option_L to Fn</name>
      <identifier>remap.controlLoptionL2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_L, ModifierFlag::CONTROL_L, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Option_L to Option_L</name>
      <appendix>(+ When you type Option_L only, send Command+Space)</appendix>
      <identifier>remap.optionL2optionL_commandSpace</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_L, KeyCode::OPTION_L, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option_L to Option_L</name>
      <appendix>(+ When you type Option_L only, send End)</appendix>
      <identifier>remap.optionL2optionL_End</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_L, KeyCode::OPTION_L, KeyCode::END</autogen>
    </item>
    <item>
      <name>Option_L to Option_L</name>
      <appendix>(+ When you type Option_L only, send Control+F2 (Move focus to the menu bar))</appendix>
      <identifier>remap.optionL2optionL_controlF2</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_L, KeyCode::OPTION_L, KeyCode::F2, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Option_L to Option_R</name>
      <identifier>remap.optionL2optionR</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::OPTION_R</autogen>
    </item>
    <item>
      <name>Option_L to Shift_L</name>
      <identifier>remap.optionL2shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>Option_L to Sticky Option_L</name>
      <identifier>remap.sticky_optionL</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_L, KeyCode::OPTION_L, KeyCode::VK_STICKY_OPTION_L</autogen>
    </item>
    <item>
      <name>Option_L to Escape</name>
      <identifier>remap.optionL2escape</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Option_L to Command+Control+Option+Shift+F1</name>
      <identifier>remap.optionL2allF1</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::F1, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Option_L to Space</name>
      <identifier>remap.optionL2space</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::SPACE</autogen>
    </item>
  </item>

  <item>
    <name>Change Option_R Key (Right Option)</name>
    <item>
      <name>Option_R to CapsLock</name>
      <identifier>remap.optionR2capslock</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CAPSLOCK</autogen>
    </item>
    <item>
      <name>Option_R to Command_L</name>
      <identifier>remap.optionR2commandL</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option_R to Command_R</name>
      <identifier>remap.optionrcommandr</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::COMMAND_R</autogen>
    </item>
    <item>
      <name>Option_R to Control_L</name>
      <identifier>remap.optionR2controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Option_R to Control_L (only in virtual machine)</name>
      <identifier>remap.optionR2controlL_vm</identifier>
      <only>VIRTUALMACHINE</only>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Option_R to Control_L+Option_R</name>
      <identifier>remap.optionR2controlLoptionR</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CONTROL_L, ModifierFlag::OPTION_R</autogen>
    </item>
    <item>
      <name>Option_R to Control_R</name>
      <identifier>remap.optionR2controlR</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CONTROL_R</autogen>
    </item>
    <item>
      <name>Option_R to Control_R (only in Emacs, Terminal, X11)</name>
      <identifier>remap.optionR2controlR_etx</identifier>
      <only>EMACS, TERMINAL, X11</only>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CONTROL_R</autogen>
    </item>
    <item>
      <name>Option_R to Control_R (only in virtual machine, RDC)</name>
      <identifier>remap.optionR2controlR_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CONTROL_R</autogen>
    </item>
    <item>
      <name>Option_R to Fn</name>
      <identifier>remap.optionR2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Command_R+Option_R to Fn</name>
      <identifier>remap.commandRoptionR2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, ModifierFlag::COMMAND_R, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Option_R to Option_R</name>
      <appendix>(+ When you type Option_R only, send Control+F2 (Move focus to the menu bar))</appendix>
      <identifier>remap.optionR2optionR_controlF2</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_R, KeyCode::OPTION_R, KeyCode::F2, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Option_R to Option_R</name>
      <appendix>(+ When you type Option_R only, toggle IM)</appendix>
      <item>
        <name>When you type Option_R only, send Command+Space</name>
        <appendix>(except virtual machine, RDC)</appendix>
        <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
        <identifier>remap.optionR2optionR_commandSpace</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_R, KeyCode::OPTION_R, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>When you type Option_R only, send Option+Backquote</name>
        <appendix>(only in virtual machine, RDC)</appendix>
        <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
        <identifier>remap.optionR2optionR_optionBackquote_vm</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_R, KeyCode::VK_LAZY_OPTION_R, KeyCode::BACKQUOTE, ModifierFlag::OPTION_R</autogen>
      </item>
    </item>
    <item>
      <name>Option_R to Option_R+Shift_L</name>
      <identifier>remap.optionR2optionRshiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::OPTION_R, ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Option_R to Sticky Option_R</name>
      <identifier>remap.sticky_optionR</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_R, KeyCode::OPTION_R, KeyCode::VK_STICKY_OPTION_R</autogen>
    </item>
    <item>
      <name>Option_R to Delete</name>
      <identifier>remap.optionR2delete</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Option_R to End</name>
      <identifier>remap.optionR2end</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::END</autogen>
    </item>
    <item>
      <name>Option_R to End (only in virtual machine, RDC)</name>
      <identifier>remap.optionR2end_vm</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::END</autogen>
    </item>
    <item>
      <name>Option_R to End (only in virtual machine, RDC)</name>
      <appendix>(+ Shift+Option_R to Shift+End,Control_L+C)</appendix>
      <identifier>remap.optionR2end_vm_ex</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, VK_SHIFT, KeyCode::END, ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::END</autogen>
    </item>
    <item>
      <name>Option_R to End (only in virtual machine, RDC)</name>
      <appendix>(+ Shift+Option_R to Shift+End,Command_L+C)</appendix>
      <identifier>remap.optionR2end_vm_ex2</identifier>
      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, VK_SHIFT, KeyCode::END, ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::END</autogen>
    </item>
    <item>
      <name>Option_R to Enter</name>
      <identifier>remap.optionR2enter</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Option_R to Forward Delete</name>
      <identifier>remap.optionR2forwarddelete</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Option_R to Left-Arrow</name>
      <identifier>remap.optionR2leftarrow</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CURSOR_LEFT</autogen>
    </item>
    <item>
      <name>Option_R to PageDown</name>
      <identifier>remap.optionR2pagedown</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::PAGEDOWN</autogen>
    </item>
    <item>
      <name>Option_R to Command_L+Right-Arrow (except virtual machine, RDC)</name>
      <identifier>remap.optionR2commandLrightarrow</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option_R to Command_L+Right-Arrow (except virtual machine, RDC)</name>
      <appendix>(+ Shift+Option_R to Command_L+Shift_L+Right-Arrow,Command_L+C)</appendix>
      <identifier>remap.optionR2commandLrightarrow_ex</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option_R to Command_L+Right-Arrow (except virtual machine, RDC)</name>
      <appendix>(+ Shift+Option_R to Command_L+Shift_L+Right-Arrow,Control_L+C)</appendix>
      <identifier>remap.optionR2commandLrightarrow_ex2</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option_R to Command_L+Right-Arrow</name>
      <identifier>remap.optionR2commandLrightarrow_all</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option_R to Semicolon</name>
      <identifier>remap.optionR2semicolon</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::SEMICOLON</autogen>
    </item>
    <item>
      <name>Option_R to Space</name>
      <identifier>remap.optionR2space</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Option_R to Command+Control+Option+Shift+F1</name>
      <identifier>remap.optionR2allF1</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::F1, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>

    <item>
      <name>Change Input Source while pressing right option key.</name>
      <appendix>(Sending Command+Space when pressing/releasing right option key.)</appendix>
      <identifier>remap.option_r_language_switch</identifier>
      <!-- Hack: Sending Command_L key event after send Command+Space to release Command key -->
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::VK_NONE,
        Option::KEYTOKEY_BEFORE_KEYDOWN, KeyCode::SPACE, ModifierFlag::COMMAND_L, KeyCode::COMMAND_L,
        Option::KEYTOKEY_AFTER_KEYUP,    KeyCode::SPACE, ModifierFlag::COMMAND_L, KeyCode::COMMAND_L
      </autogen>
    </item>

    <item>
      <name>Disable Option_R, except when pressed with cursor/delete keys (Works better in Parallels)</name>
      <appendix>Option_R+Up/Down/Left/Right Arrow Keys to PageUp/PageDown/Home/End</appendix>
      <appendix>Option_R+Delete to Forward Delete</appendix>
      <identifier>remap.modified_optionR_behaviours</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::VK_MODIFIER_EXTRA1</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_UP,    ModifierFlag::EXTRA1, KeyCode::PAGEUP</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN,  ModifierFlag::EXTRA1, KeyCode::PAGEDOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT,  ModifierFlag::EXTRA1, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, ModifierFlag::EXTRA1, KeyCode::END</autogen>
      <autogen>__KeyToKey__ KeyCode::DELETE, ModifierFlag::EXTRA1, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Option_R to RightClick</name>
      <appendix>Fn+Option_R preserves Right Option</appendix>
      <identifier>remap.option_r_to_right_click</identifier>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, ModifierFlag::FN, KeyCode::OPTION_R</autogen>
      <autogen>__KeyToPointingButton__ KeyCode::OPTION_R, PointingButton::RIGHT</autogen>
    </item>
  </item>

  <item>
    <name>Change PageUp/PageDown Key</name>
    <item>
      <name>PageUp to PC Insert Key</name>
      <identifier>remap.pageup2pcinsert</identifier>
      <autogen>__KeyToKey__ FROMKEYCODE_PAGEUP, KeyCode::PC_INSERT</autogen>
    </item>
    <item>
      <name>PageDown to PageUp</name>
      <identifier>remap.pagedown2pageup</identifier>
      <autogen>__KeyToKey__ FROMKEYCODE_PAGEDOWN, KeyCode::PAGEUP</autogen>
    </item>
    <item>
      <name>PageUp/PageDown to Left/Right (only in iPhoto)</name>
      <appendix>(This is effective only with "Kensington K33374 Wireless Presenter with Laser Pointer")</appendix>
      <identifier>remap.device_kensington_k33374_pageupdown2leftright_iphone</identifier>
      <only>IPHOTO</only>
      <!-- Kensington K33374 Hardware VendorID,ProductID == 0x047d,0x2012 -->
      <!-- Kensington Hack 0x0,0x0 -->
      <device_only>DeviceVendor::KENSINGTON,DeviceProduct::K33374, DeviceVendor::PSEUDO,DeviceProduct::PSEUDO</device_only>
      <autogen>__KeyToKey__ FROMKEYCODE_PAGEUP,   KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ FROMKEYCODE_PAGEDOWN, KeyCode::CURSOR_RIGHT</autogen>
    </item>
  </item>

  <item>
    <name>Change Return Key</name>
    <item>
      <name>Return to Command_L</name>
      <identifier>remap.return2commandL</identifier>
      <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Return to Control_L</name>
      <appendix>(+ When you type Return only, send Return)</appendix>
      <identifier>remap.return2controlL_return</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::RETURN, KeyCode::CONTROL_L, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Return to Control_L</name>
      <appendix>(+ When you type Return only, send Return) + [KeyRepeat]</appendix>
      <identifier>remap.return2controlL_return_keyrepeat</identifier>
      <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::RETURN, KeyCode::CONTROL_L, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Return to Option_L</name>
      <identifier>remap.return2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Return to Option_L</name>
      <appendix>(+ When you type Return only, send Escape)</appendix>
      <identifier>remap.return2optionL_escape</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::RETURN, KeyCode::OPTION_L, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Fn+Return to Option_L</name>
      <identifier>remap.fnReturn2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::RETURN, ModifierFlag::FN, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Return to Delete</name>
      <identifier>remap.return_to_delete</identifier>
      <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Return to Control_L+F4 (= Move focus to the active (or next) window)</name>
      <identifier>remap.return2controlLf4</identifier>
      <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::F4, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Fn+Return to Shift_L+Insert</name>
      <identifier>remap.fnReturn2shiftLinsert</identifier>
      <autogen>__KeyToKey__ KeyCode::RETURN, ModifierFlag::FN, KeyCode::PC_INSERT, ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Return to Semicolon</name>
      <identifier>remap.return2semicolon</identifier>
      <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::SEMICOLON</autogen>
    </item>
    <item>
      <name>Disable Return</name>
      <identifier>remap.drop_return</identifier>
      <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::VK_NONE</autogen>
    </item>
  </item>

  <item>
    <name>Change Quote(') Key</name>
    <item>
      <name>Fn+Quote(') to Backslash(\)</name>
      <identifier>remap.fnquote2backslash</identifier>
      <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::FN, KeyCode::BACKSLASH</autogen>
    </item>
    <item>
      <name>Quote(') to Delete</name>
      <identifier>remap.quote_to_delete</identifier>
      <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Swap Quote and Shift+Quote</name>
      <identifier>remap.swap_quote_and_shiftquote</identifier>
      <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::NONE,
        KeyCode::QUOTE, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>__KeyToKey__ KeyCode::QUOTE, VK_SHIFT | ModifierFlag::NONE,
        KeyCode::QUOTE
      </autogen>
    </item>
  </item>

  <item>
    <name>Change Semicolon(;) Key</name>
    <item>
      <name>Semicolon to Minus</name>
      <identifier>remap.semicolon2minus</identifier>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::MINUS</autogen>
    </item>
    <item>
      <name>Semicolon to Return</name>
      <identifier>remap.semicolon2return</identifier>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Semicolon to Return</name>
      <appendix>(+ Control+Semicolon to Semicolon)</appendix>
      <identifier>remap.semicolon2return_controlsemicolon2semicolon</identifier>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_CONTROL, KeyCode::SEMICOLON</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Semicolon to Return (when there are not any modifiers)</name>
      <appendix>(+ Control+Semicolon to Semicolon)</appendix>
      <identifier>remap.semicolon2return_nomod</identifier>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_CONTROL | ModifierFlag::NONE, KeyCode::SEMICOLON</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Semicolon to Return (Only on WebIDE)</name>
      <identifier>remap.semicolon2return_onlywebide</identifier>
      <only>WEBIDE</only>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Semicolon to Sticky Shift_L</name>
      <identifier>remap.semicolon2stickyshiftL</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SEMICOLON, KeyCode::SHIFT_L, KeyCode::VK_STICKY_SHIFT_L</autogen>
    </item>
    <item>
      <name>Swap Semicolon and Colon</name>
      <identifier>remap.swapcolons</identifier>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_SHIFT, KeyCode::SEMICOLON</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::SEMICOLON, ModifierFlag::SHIFT_L</autogen>
    </item>
  </item>

  <item>
    <name>Change Shift_L Key (Left Shift)</name>
    <item>
      <name>Shift_L to CapsLock</name>
      <identifier>remap.shiftL2capslock</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::CAPSLOCK</autogen>
    </item>
    <item>
      <name>Shift_L to turn off CapsLock</name>
      <appendix>(+ Retain Shift_L movement)</appendix>
      <identifier>remap.shiftL2turnoffcapslock</identifier>
      <modifier_only>ModifierFlag::CAPSLOCK</modifier_only>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::CAPSLOCK, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>Shift_L to Command_L</name>
      <identifier>remap.shiftL2commandL</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Shift_L to Control_L</name>
      <identifier>remap.shiftL2controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Fn+Shift_L to Control_R</name>
      <identifier>remap.fnshiftL2controlR</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, ModifierFlag::FN, KeyCode::CONTROL_R</autogen>
    </item>
    <item>
      <name>Shift_L to Fn</name>
      <identifier>remap.shiftL2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Shift_L to Shift_L</name>
      <appendix>(+ When you type Shift_L only, release CapsLock)</appendix>
      <identifier>remap.shiftL2releasecapslock</identifier>
      <modifier_only>ModifierFlag::CAPSLOCK</modifier_only>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::CAPSLOCK, KeyCode::VK_NONE</autogen>
    </item>
    <item>
      <name>Shift_L to Shift_L</name>
      <appendix>(+ When you type shift_L only without other modifiers, send Escape)</appendix>
      <identifier>remap.shiftL2shiftL_escape</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::SHIFT_L, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Shift_L to Shift_L</name>
      <appendix>(+ When you type shiftL only, send Space)</appendix>
      <identifier>remap.shiftL2shiftL_space</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Shift_L to Shift_L</name>
      <appendix>(+ When you type shiftL only, send CapsLock)</appendix>
      <identifier>remap.shiftL2shiftL_capslock</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::CAPSLOCK</autogen>
    </item>
    <item>
      <name>Shift_L to Shift_L</name>
      <appendix>(+ When you type shiftL only, send Space) + [KeyRepeat]</appendix>
      <identifier>remap.shiftL2shiftL_space_keyrepeat</identifier>
      <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Shift_L to Lazy_Shift_L</name>
      <identifier>remap.shiftL2lazy_shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::VK_LAZY_SHIFT_L</autogen>
    </item>
    <item>
      <name>Shift_L to Option_L</name>
      <identifier>remap.shiftL2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Shift_L to Sticky Shift_L</name>
      <identifier>remap.sticky_shiftL</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::VK_STICKY_SHIFT_L</autogen>
    </item>
    <item>
      <name>Shift_L to Escape</name>
      <identifier>remap.shiftL2escape</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Shift_L x2 to F18</name>
      <identifier>remap.shiftL_x2_to_f18</identifier>
      <autogen>__DoublePressModifier__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::F18</autogen>
    </item>
    <item>
      <name>Shift_L to Space</name>
      <identifier>remap.shiftL2space</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Shift_R+Shift_L to Space</name>
      <appendix>(Shift_R+Shift_L to Space, Shift_L+Shift_R to Shift+Space)</appendix>
      <identifier>remap.shiftRshiftL2space</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, ModifierFlag::SHIFT_L, KeyCode::SPACE, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, ModifierFlag::SHIFT_R, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Shift_L to Tab</name>
      <identifier>remap.shiftL2tab</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::TAB</autogen>
    </item>
    <item>
      <name>Disable Shift_L</name>
      <identifier>remap.drop_shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::VK_NONE</autogen>
    </item>
    <item>
      <name>Disable Shift_L</name>
      <appendix>(+ When you type Shift_L only, send Fn_Lock)</appendix>
      <identifier>remap.drop_shiftL_fn</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, KeyCode::VK_NONE, KeyCode::VK_LOCK_FN</autogen>
    </item>
    <item>
      <name></name>
      <identifier vk_config="true">notsave.shiftl_capslocktrick</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::CAPSLOCK, KeyCode::VK_CONFIG_TOGGLE_notsave_shiftl_capslocktrick</autogen>
    </item>
    <item>
      <name>Shift_L to Shift_L</name>
      <appendix>(+ When you type Shift_L only, Sticky Shift_L)</appendix>
      <appendix>(+ When you type Shift_L twice, Capslock)</appendix>
      <identifier>remap.shiftl_to_sticky_shiftl</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, ModifierFlag::EXTRA3, KeyCode::SHIFT_L, KeyCode::CAPSLOCK, KeyCode::VK_CONFIG_TOGGLE_notsave_shiftl_capslocktrick</autogen>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::VK_STICKY_SHIFT_L, KeyCode::VK_STICKY_EXTRA3</autogen>
    </item>
  </item>

  <item>
    <name>Change Shift_R Key (Right Shift)</name>
    <item>
      <name>Shift_R to turn off CapsLock</name>
      <appendix>(+ Retain Shift_R movement)</appendix>
      <identifier>remap.shiftR2turnoffcapslock</identifier>
      <modifier_only>ModifierFlag::CAPSLOCK</modifier_only>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::CAPSLOCK, KeyCode::SHIFT_R</autogen>
    </item>
    <item>
      <name>Shift_R to Command_L</name>
      <identifier>remap.shiftR2commandL</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Shift_R to Control_L</name>
      <identifier>remap.shiftR2controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Shift_R to Fn</name>
      <identifier>remap.shiftR2fn</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::FN</autogen>
    </item>
    <item>
      <name>Shift_R to Option_L</name>
      <identifier>remap.shiftR2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Shift_R to Shift_R</name>
      <appendix>(+ When you type Shift_R only, release CapsLock)</appendix>
      <identifier>remap.shiftR2releasecapslock</identifier>
      <modifier_only>ModifierFlag::CAPSLOCK</modifier_only>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::CAPSLOCK, KeyCode::VK_NONE</autogen>
    </item>
    <item>
      <name>Shift_R to Shift_R</name>
      <appendix>(+ When you type Shift_R only, send Backslash)</appendix>
      <identifier>remap.shiftR2shiftR_backslash</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::BACKSLASH</autogen>
    </item>
    <item>
      <name>Shift_R to Shift_R</name>
      <appendix>(+ When you type Shift_R only, send CapsLock)</appendix>
      <identifier>remap.shiftR2shiftR_capslock</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::CAPSLOCK</autogen>
    </item>
    <item>
      <name>Shift_R to Shift_R</name>
      <appendix>(+ When you type Shift_R only, send Enter)</appendix>
      <identifier>remap.shiftR2shiftR_enter</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Shift_R to Shift_R</name>
      <appendix>(+ When you type Shift_R only, send Escape)</appendix>
      <identifier>remap.shiftR2shiftR_escape</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Shift_R to Shift_R</name>
      <appendix>(+ When you type shiftR only, send Space)</appendix>
      <identifier>remap.shiftR2shiftR_space</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Shift_R to Shift_R</name>
      <appendix>(+ When you type shiftR only, send Space) + [KeyRepeat]</appendix>
      <identifier>remap.shiftR2shiftR_space_keyrepeat</identifier>
      <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Shift_R to Lazy_Shift_R</name>
      <identifier>remap.shiftR2lazy_shiftR</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::VK_LAZY_SHIFT_R</autogen>
    </item>
    <item>
      <name>Shift_R to Sticky Shift_R</name>
      <identifier>remap.sticky_shiftR</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::VK_STICKY_SHIFT_R</autogen>
    </item>
    <item>
      <name>Shift_R to ^ (Shift+6)</name>
      <appendix>Shift_L+Shift_R to &amp; (Shift+7)</appendix>
      <identifier>remap.right_shift_to_hat_amp</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, ModifierFlag::SHIFT_L | ModifierFlag::SHIFT_R, KeyCode::KEY_7, ModifierFlag::SHIFT_R</autogen>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::KEY_6, ModifierFlag::SHIFT_R</autogen>
    </item>
    <item>
      <name>Shift_R to Enter</name>
      <identifier>remap.shiftR2enter</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Shift_R to Escape</name>
      <identifier>remap.shiftR2escape</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Shift_R to Forward Delete</name>
      <identifier>remap.shiftR2forwarddelete</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Shift_R to Return</name>
      <identifier>remap.shiftR2return</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Shift_R to Right-Arrow</name>
      <identifier>remap.shiftR2rightarrow</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Shift_R to Space</name>
      <identifier>remap.shiftR2space</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Shift_L+Shift_R to Space</name>
      <appendix>(Shift_L+Shift_R to Space, Shift_R+Shift_L to Shift+Space)</appendix>
      <identifier>remap.shiftLshiftR2space</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, ModifierFlag::SHIFT_R, KeyCode::SPACE, ModifierFlag::SHIFT_R</autogen>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, ModifierFlag::SHIFT_L, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Shift_R to Tab</name>
      <identifier>remap.shiftR2tab</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::TAB</autogen>
    </item>
    <item>
      <name>Shift_R to Up-Arrow</name>
      <identifier>remap.shiftR2uparrow</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::CURSOR_UP</autogen>
    </item>
    <item>
      <name>Disable Shift_R</name>
      <identifier>remap.drop_shiftR</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::VK_NONE</autogen>
    </item>
    <item>
      <name>Back/Forward in Finder, Safari, etc. Left/Right Shift in mi.</name>
      <item>
        <name>Shift_R to Shift_R</name>
        <appendix>(+ When you type shift_R only without other modifiers, send Command+[ )</appendix>
        <identifier>remap.shiftR2shiftR_backward_nomod</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::SHIFT_R, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_R</autogen>
      </item>
      <item>
        <name>Option_R+Shift_R to Command+]</name>
        <appendix>(only without other modifiers)</appendix>
        <identifier>remap.optionRshiftR2forward</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, ModifierFlag::SHIFT_R | ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::SHIFT_R, ModifierFlag::OPTION_R, KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_R</autogen>
      </item>
    </item>
    <item>
      <name></name>
      <identifier vk_config="true">notsave.shiftr_capslocktrick</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::CAPSLOCK, KeyCode::VK_CONFIG_TOGGLE_notsave_shiftr_capslocktrick</autogen>
    </item>
    <item>
      <name>Shift_R to Shift_R</name>
      <appendix>(+ When you type Shift_R only, Sticky Shift_R)</appendix>
      <appendix>(+ When you type Shift_R twice, Capslock)</appendix>
      <identifier>remap.shiftr_to_sticky_shiftr</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, ModifierFlag::EXTRA3, KeyCode::SHIFT_R, KeyCode::CAPSLOCK, KeyCode::VK_CONFIG_TOGGLE_notsave_shiftr_capslocktrick</autogen>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::VK_STICKY_SHIFT_R, KeyCode::VK_STICKY_EXTRA3</autogen>
    </item>
  </item>

  <item>
    <name>Change Slash(/) Key</name>
    <item>
      <name>Swap Slash and Shift+Slash</name>
      <identifier>remap.swap_slash_and_shiftslash</identifier>
      <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE,
        KeyCode::SLASH, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH, VK_SHIFT | ModifierFlag::NONE,
        KeyCode::SLASH
      </autogen>
    </item>
  </item>

  <item>
    <name>Change Space Key</name>
    <item>
      <name>Space to Control_L</name>
      <identifier>remap.space2controlL</identifier>
      <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Space to Control_L</name>
      <appendix>(+ When you type Space only, send Space)</appendix>
      <identifier>remap.space2controlL_space</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SPACE, KeyCode::CONTROL_L, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Space to Control_L</name>
      <appendix>(+ When you type Space only, send Space) + [KeyRepeat]</appendix>
      <identifier>remap.space2controlL_space_keyrepeat</identifier>
      <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::SPACE, KeyCode::CONTROL_L, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Space to Option_L</name>
      <identifier>remap.space2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Space to Option_L</name>
      <appendix>(+ When you type Space only, send Space)</appendix>
      <identifier>remap.space2optionL_space</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SPACE, KeyCode::OPTION_L, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Control+Space to Option_L</name>
      <identifier>remap.controlSpace2optionL</identifier>
      <autogen>__KeyToKey__ KeyCode::SPACE, VK_CONTROL, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Space to Shift_L</name>
      <identifier>remap.space2shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>Space to Shift_L</name>
      <appendix>(+ When you type Space only, send Space)</appendix>
      <identifier>remap.space2shiftL_space</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SPACE, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Space to Shift_L</name>
      <appendix>(+ When you type Space only, send Space) + [KeyRepeat]</appendix>
      <identifier>remap.space2shiftL_space_keyrepeat</identifier>
      <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::SPACE, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Space to Shift_L</name>
      <appendix>(+ When you type Space only, send Space) (Disable on Adobe Softwares)</appendix>
      <not>ADOBE, PHOTOSHOP, ILLUSTRATOR</not>
      <identifier>remap.space2shiftL_space_not_adobe</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SPACE, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Space to Shift_L</name>
      <appendix>(+ When you type Space only, send Space)</appendix>
      <appendix>Fn+Space to Space</appendix>
      <identifier>remap.space2shiftL_space_fnspace</identifier>
      <autogen>__KeyToKey__ KeyCode::SPACE, ModifierFlag::FN, KeyCode::SPACE</autogen>
      <autogen>__KeyOverlaidModifier__ KeyCode::SPACE, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Control+Space to Shift_L_Lock</name>
      <identifier>remap.controlSpace2shiftL_lock</identifier>
      <autogen>__KeyToKey__ KeyCode::SPACE, VK_CONTROL, KeyCode::VK_LOCK_SHIFT_L</autogen>
    </item>
    <item>
      <name>Swap Space and Option+Space</name>
      <item>
        <!-- Swap Mode Core -->
        <name>You can swap Space and Option+Space temporarily.</name>
        <appendix>Turn on a setting below, and toggle "Swap Mode".</appendix>
        <identifier vk_config="true">notsave.swap_space_optionspace</identifier>
        <autogen>__ShowStatusMessage__ Swap Mode</autogen>
        <autogen>__KeyToKey__ KeyCode::SPACE, VK_OPTION | ModifierFlag::NONE, KeyCode::SPACE</autogen>
        <autogen>__KeyToKey__ KeyCode::SPACE, ModifierFlag::NONE, KeyCode::SPACE, ModifierFlag::OPTION_L</autogen>
      </item>
      <item>
        <name>Fn+Escape to toggle "Swap Space and Option+Space" Mode</name>
        <identifier>remap.swap_space_optionspace_toggle_fnescape</identifier>
        <autogen>__KeyToKey__ KeyCode::ESCAPE, ModifierFlag::FN, KeyCode::VK_CONFIG_TOGGLE_notsave_swap_space_optionspace</autogen>
      </item>
      <item>
        <name>Fn+Space to toggle "Swap Space and Option+Space" Mode</name>
        <identifier>remap.swap_space_optionspace_toggle_fnspace</identifier>
        <autogen>__KeyToKey__ KeyCode::SPACE, ModifierFlag::FN, KeyCode::VK_CONFIG_TOGGLE_notsave_swap_space_optionspace</autogen>
      </item>
    </item>
    <item>
      <name>Space to Return</name>
      <identifier>remap.space2return</identifier>
      <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Command+Space to Command+Shift+Space</name>
      <identifier>remap.commandSpace2commandLshiftLspace</identifier>
      <autogen>__KeyToKey__ KeyCode::SPACE, VK_COMMAND | ModifierFlag::NONE, KeyCode::SPACE, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Shift+Space to Command_L+Space</name>
      <identifier>remap.shiftSpace2commandLSpace</identifier>
      <autogen>__KeyToKey__ KeyCode::SPACE, VK_SHIFT, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control+Space to Option_L+Enter (except Emacs)</name>
      <not>EMACS</not>
      <identifier>remap.controlSpace2optionLEnter</identifier>
      <autogen>__KeyToKey__ KeyCode::SPACE, VK_CONTROL, KeyCode::ENTER, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Non-Breaking Space to Normal Space</name>
      <appendix>(Option+Space to Space)</appendix>
      <appendix>(Option+Shift+Space to Space)</appendix>
      <identifier>remap.option_space_to_space</identifier>
      <autogen>__KeyToKey__ KeyCode::SPACE, VK_OPTION | ModifierFlag::NONE, KeyCode::SPACE</autogen>
      <autogen>__KeyToKey__ KeyCode::SPACE, VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::SPACE</autogen>
    </item>
  </item>

  <item>
    <name>Change Tab Key</name>
    <item>
      <name>Tab to Command_L</name>
      <appendix>(+ When you type Tab only, send Expose All)</appendix>
      <identifier>remap.tab2commandL_exposeAll</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::TAB, KeyCode::COMMAND_L, KeyCode::EXPOSE_ALL</autogen>
    </item>
    <item>
      <name>Tab to Command_L</name>
      <appendix>(+ When you type Tab only, send Tab)</appendix>
      <identifier>remap.tab2commandL_tab</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::TAB, KeyCode::COMMAND_L, KeyCode::TAB</autogen>
    </item>
    <item>
      <name>Tab to Option_L when you held down Control_L</name>
      <appendix>(+ When you type Control_L+Tab, send Control_L+Tab)</appendix>
      <identifier>remap.tab2option_withControlL</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::TAB, ModifierFlag::CONTROL_L, KeyCode::OPTION_L, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Tab to Shift_L</name>
      <identifier>remap.tab2shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>Tab to Delete</name>
      <identifier>remap.tab2delete</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Tab to Expose All</name>
      <identifier>remap.tab2exposeALL</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::EXPOSE_ALL</autogen>
    </item>
    <item>
      <name>Command+Tab to Expose</name>
      <identifier>remap.commandTab2expose</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_COMMAND | ModifierFlag::NONE, KeyCode::EXPOSE_ALL</autogen>
    </item>
    <item>
      <name>Control+tab to Command+F1 (only in Terminal)</name>
      <only>TERMINAL</only>
      <identifier>remap.ctrltab2cmdf1_onlyterminal</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_CONTROL, KeyCode::F1, VK_COMMAND</autogen>
    </item>
    <item>
      <name>Command+Tab to F5</name>
      <identifier>remap.commandTab2f5</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_COMMAND, KeyCode::F5</autogen>
    </item>
    <item>
      <name>Option+Tab to F5</name>
      <identifier>remap.optionTab2f5</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_OPTION, KeyCode::F5</autogen>
    </item>
    <item>
      <name>Command+Tab to Control+Tab (only in Firefox, Google Chrome, Opera, Safari)</name>
      <identifier>remap.commandTab2controlTab_browser</identifier>
      <only>FIREFOX, GOOGLE_CHROME, OPERA, SAFARI</only>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command+Tab to Option+Tab</name>
      <identifier>remap.commandTab2optionTab</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Control+Tab to Command+Tab</name>
      <appendix></appendix>
      <appendix>*** We recommend using following settings together. ***</appendix>
      <appendix>General &gt; Don't restore modifiers in the mouse event</appendix>
      <appendix>Change Shift_L &gt; Shift_L to Lazy_Shift_L</appendix>
      <appendix>Change Shift_R &gt; Shift_R to Lazy_Shift_R</appendix>
      <identifier>remap.controlTab2commandTab</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_CONTROL, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control+Tab to Option+Tab</name>
      <identifier>remap.controlTab2optionTab</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_CONTROL, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Option+Tab to Command+Tab</name>
      <appendix></appendix>
      <appendix>*** We recommend using following settings together. ***</appendix>
      <appendix>General &gt; Don't restore modifiers in the mouse event</appendix>
      <appendix>Change Shift_L &gt; Shift_L to Lazy_Shift_L</appendix>
      <appendix>Change Shift_R &gt; Shift_R to Lazy_Shift_R</appendix>
      <identifier>remap.optionTab2commandTab</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_OPTION, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option+Tab to Control+Tab</name>
      <identifier>remap.optionTab2controlTab</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_OPTION, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Change Command+Tab to Command+Tab+Option</name>
      <appendix>(Bring app to foreground when you've switched app by Command+Tab.)</appendix>
      <identifier>remap.command_tab_to_command_tab_option</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_COMMAND,
        KeyCode::TAB, VK_COMMAND,
        KeyCode::VK_STICKY_OPTION_R_FORCE_ON, VK_COMMAND</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::COMMAND_L,
        Option::KEYTOKEY_AFTER_KEYUP, KeyCode::VK_WAIT_100MS, KeyCode::VK_STICKY_OPTION_R_FORCE_OFF</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::COMMAND_R,
        Option::KEYTOKEY_AFTER_KEYUP, KeyCode::VK_WAIT_100MS, KeyCode::VK_STICKY_OPTION_R_FORCE_OFF</autogen>
    </item>
    <item>
      <name>Swap Command+Tab and Option+Tab</name>
      <identifier>remap.swap_commandtaboptiontab</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_OPTION, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Swap Command+Tab and Control+Tab</name>
      <identifier>remap.swap_commandtabcontroltab</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_CONTROL, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Disable Tab</name>
      <identifier>remap.drop_tab</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::VK_NONE</autogen>
    </item>

    <item>
      <name>Tabmode</name>
      <item>
        <name>What's Tabmode?</name>
        <appendix>It replaces the default shortcut for switching applications. (cmd+tab)</appendix>
        <appendix>While tab is pressed, use your favourite combination of left/right keys to switch between apps.</appendix>
        <appendix>It has evolved into a window manager shortcut, capable of managing windows, tabs,</appendix>
        <appendix>spaces and split views.</appendix>
        <identifier vk_config="true">notsave.tabmode</identifier>
        <autogen>__KeyToKey__ KeyCode::F, KeyCode::VK_MODIFIER_EXTRA1</autogen>
        <block>
          <name>[Option] ; to Command+Option+L</name>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::EXTRA1, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L| ModifierFlag::CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::EXTRA1, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L| ModifierFlag::CONTROL_L</autogen>
          <config_only>option.tabmode_g_j_l_to_changespaces</config_only>
        </block>
        <block>
          <config_only>option.tabmode_jl</config_only>
          <autogen>__KeyToKey__ KeyCode::L, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::J, KeyCode::TAB, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_hl</config_only>
          <autogen>__KeyToKey__ KeyCode::L, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::H, KeyCode::TAB, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_leftright</config_only>
          <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, KeyCode::TAB, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_ik</config_only>
          <block>
            <only>VIRTUALMACHINE</only>
            <config_only>option.tabmode_ikvm</config_only>
            <autogen>__KeyToKey__ KeyCode::I, KeyCode::UK_SECTION, ModifierFlag::COMMAND_L</autogen>
            <autogen>__KeyToKey__ KeyCode::K, KeyCode::UK_SECTION, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
          </block>
          <autogen>__KeyToKey__ KeyCode::I, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::K, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_uo</config_only>
          <block>
            <only>TERMINAL</only>
            <config_only>remap.app_term_screen_switch</config_only>
            <autogen>__KeyToKey__ KeyCode::U, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::P</autogen>
            <autogen>__KeyToKey__ KeyCode::O, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::N</autogen>
          </block>
          <autogen>__KeyToKey__ KeyCode::U, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::O, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_q</config_only>
          <autogen>__KeyToKey__ KeyCode::Q, KeyCode::Q, ModifierFlag::COMMAND_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_w</config_only>
          <autogen>__KeyToKey__ KeyCode::W, KeyCode::W, ModifierFlag::COMMAND_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_switchviews</config_only>
          <autogen>__KeyToKey__ KeyCode::B, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L | ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L | ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::M, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L | ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::H, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L | ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
        </block>
        <block>
          <name>[Option] Y to Command+W</name>
          <autogen>__KeyToKey__ KeyCode::Y, KeyCode::W, ModifierFlag::COMMAND_L</autogen>
          <config_only>option.tabmode_y_to_w</config_only>
        </block>
        <block>
          <name>[Option] P to Command+T</name>
          <autogen>__KeyToKey__ KeyCode::P, KeyCode::T, ModifierFlag::COMMAND_L</autogen>
          <config_only>option.tabmode_p_to_t</config_only>
        </block>
        <block>
          <name>[Option] ' to Command+Q</name>
          <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::Q, ModifierFlag::COMMAND_L</autogen>
          <config_only>option.tabmode_quote_to_q</config_only>
        </block>
        <block>
          <name>[Option] ; to Command+Option+L</name>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::L, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L</autogen>
          <config_only>option.tabmode_semicolon_to_launchbar</config_only>
        </block>
      </item>
      <item>
        <name>Keeping tab pressed turns on "Tab Mode"</name>
        <appendix>(+ When you type Tab only, send Tab)</appendix>
        <identifier>remap.tabmode</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::TAB, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_tabmode , KeyCode::TAB</autogen>
      </item>
      <item><name>____________________________________________________________</name></item>
      <item>
        <name>[Option] Switch apps with J/L</name>
        <appendix>For people who like jkli configuration</appendix>
        <identifier>option.tabmode_jl</identifier>
      </item>
      <item>
        <name>[Option] Switch apps with h/l</name>
        <appendix>For people who like hjkl configuration</appendix>
        <identifier>option.tabmode_hl</identifier>
      </item>
      <item>
        <name>[Option] Switch apps with left/right</name>
        <appendix>For people who like directional arrows</appendix>
        <identifier>option.tabmode_leftright</identifier>
      </item>
      <item>
        <name>[Option] Switch windows of frontmost app with i/k</name>
        <appendix>For people who like jkli configuration</appendix>
        <appendix>+(Having F pressed, K/I send Command+(N/W) (New/Close Window))</appendix>
        <identifier>option.tabmode_ik</identifier>
      </item>
      <item>
        <name>[Option] Send Uk Section instead of Backquote when on virtual machine</name>
        <appendix>For people who use the previous option, vmware and an international keyboard</appendix>
        <identifier>option.tabmode_ikvm</identifier>
      </item>
      <item>
        <name>[Option] Switch tabs of frontmost app with U/O</name>
        <appendix>For people who like jkli configuration and have cmd+option+left/rigth as shortcut to</appendix>
        <appendix>switch tabs</appendix>
        <identifier>option.tabmode_uo</identifier>
      </item>
      <item>
        <name>[Option] Quit application with q</name>
        <identifier>option.tabmode_q</identifier>
      </item>
      <item>
        <name>[Option] Close window with w</name>
        <identifier>option.tabmode_w</identifier>
      </item>
      <item>
        <name>[Option] bnmh to (left/down/right/up)+Ctrl+Optn+Shift+</name>
        <appendix>Shortcuts used to switch split panes it apps like iTerm2 and others</appendix>
        <identifier>option.tabmode_switchviews</identifier>
      </item>
      <item>
        <name>[Option] Y to Command+W</name>
        <identifier>option.tabmode_y_to_w</identifier>
      </item>
      <item>
        <name>[Option] P to Command+T</name>
        <identifier>option.tabmode_p_to_t</identifier>
      </item>
      <item>
        <name>[Option] ' to Command+Q</name>
        <identifier>option.tabmode_quote_to_q</identifier>
      </item>
      <item>
        <name>[Option] ; to Command+Option+L</name>
        <identifier>option.tabmode_semicolon_to_launchbar</identifier>
      </item>
      <item>
        <name>[Option] F+J/L to Command+Option+Control+Left/Right</name>
        <appendix>(Using this to change spaces)</appendix>
        <identifier>option.tabmode_g_j_l_to_changespaces</identifier>
      </item>
    </item>
  </item>
  <item>
    <name>Custom Shortcuts</name>
    <item>
      <name>Change Command+Q to Command+Shift+W</name>
      <appendix>Change Command+Shift_L+Q to Command+Q</appendix>
      <identifier>remap.commandQ2commandW_commandshiftQ2commandQ</identifier>
      <autogen>__KeyToKey__ KeyCode::Q, VK_COMMAND | ModifierFlag::SHIFT_L, KeyCode::Q, VK_COMMAND | ModifierFlag::NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::Q, VK_COMMAND | ModifierFlag::NONE,    KeyCode::W, VK_COMMAND | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Hold Command+Q to Quit Application</name>
      <appendix>(You can adjust the threshold time of holding by</appendix>
      <appendix>"[Holding Key to Key] Holding Threshold" in Key Repeat tab.)</appendix>
      <identifier>remap.holdcommandQ</identifier>
      <autogen>__HoldingKeyToKey__ KeyCode::Q, VK_COMMAND | ModifierFlag::NONE, KeyCode::VK_NONE, KeyCode::Q, VK_COMMAND, Option::NOREPEAT</autogen>
    </item>
    <item>
      <name>Press Command+Q twice to Quit Application</name>
      <identifier>remap.doublepresscommandQ</identifier>
      <autogen>__DoublePressModifier__ KeyCode::Q, VK_COMMAND | ModifierFlag::NONE,
        KeyCode::VK_NONE,
        KeyCode::Q, VK_COMMAND
      </autogen>
    </item>
  </item>

  <item>
    <name>Diamond Cursor</name>
    <item>
      <name>Control_L+WSAD to Up/Down/Left/Right</name>
      <identifier>remap.diamond_cursor_controlL_wsad</identifier>
      <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Control_R+WSAD to Up/Down/Left/Right</name>
      <identifier>remap.diamond_cursor_controlR_wsad</identifier>
      <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::CONTROL_R, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::CONTROL_R, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::CONTROL_R, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_R, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item><name>____________________________________________________________</name></item>
    <item>
      <name>ModifierFlag::EXTRA1+WXSD to Up/Down/Left/Right</name>
      <appendix>(+ ModifierFlag::EXTRA1+A to Command_L+Left)</appendix>
      <appendix>(+ ModifierFlag::EXTRA1+F to Command_L+Right)</appendix>
      <identifier>remap.diamond_cursor_extra1_exsd</identifier>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::EXTRA1, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::EXTRA1, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA1, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::EXTRA1, KeyCode::CURSOR_RIGHT</autogen>
      <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::EXTRA1, KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::EXTRA1, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item><name>____________________________________________________________</name></item>
    <item>
      <name>Control_L+EXSD to Up/Down/Left/Right</name>
      <identifier>remap.diamond_cursor_controlL_exsd</identifier>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Control_R+EXSD to Up/Down/Left/Right</name>
      <identifier>remap.diamond_cursor_controlR_exsd</identifier>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::CONTROL_R, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::CONTROL_R, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::CONTROL_R, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_R, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item><name>____________________________________________________________</name></item>
    <item>
      <name>Control_L+RVDF to Up/Down/Left/Right</name>
      <identifier>remap.diamond_cursor_controlL_rvdf</identifier>
      <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item><name>____________________________________________________________</name></item>
    <item>
      <name>Control_L+ESDF to Up/Down/Left/Right</name>
      <identifier>remap.diamond_cursor_controlL_esdf</identifier>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Control_R+ESDF to Up/Down/Left/Right</name>
      <identifier>remap.diamond_cursor_controlR_esdf</identifier>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::CONTROL_R, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_R, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::CONTROL_R, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::CONTROL_R, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item><name>____________________________________________________________</name></item>
    <item>
      <name>Control_L+ESDF to Shift+Up/Down/Left/Right</name>
      <appendix>+ Control_L+AG to beginning-of-line/end-of-line (Command+Shift+Left/Right)</appendix>
      <identifier>remap.diamond_cursor_controlL_esdf_selection</identifier>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP,    ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN,  ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT,  ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT,  ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control_R+ESDF to Shift+Up/Down/Left/Right</name>
      <appendix>+ Control_R+AG to beginning-of-line/end-of-line (Command+Shift+Left/Right)</appendix>
      <identifier>remap.diamond_cursor_controlR_esdf_selection</identifier>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::CONTROL_R, KeyCode::CURSOR_UP,    ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_R, KeyCode::CURSOR_DOWN,  ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::CONTROL_R, KeyCode::CURSOR_LEFT,  ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::CONTROL_R, KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::CONTROL_R, KeyCode::CURSOR_LEFT,  ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::CONTROL_R, KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L</autogen>
    </item>
    <item><name>____________________________________________________________</name></item>
    <item>
      <name>Control_L+IKJL to Up/Down/Left/Right</name>
      <identifier>option.extra_cursor_controlL_jkil</identifier>
      <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item><name>____________________________________________________________</name></item>
    <item>
      <name>Control_L+IKJL to Up/Down/Left/Right</name>
      <appendix>+ Control_L+H/Control_L+; to beginning-of-line/end-of-line (Command+Shift+Left/Right)</appendix>
      <identifier>option.extra_cursor_controlL_jkil_hsemicolon</identifier>
      <autogen>__KeyToKey__ KeyCode::I,         ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
      <autogen>__KeyToKey__ KeyCode::H,         ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control_R+IKJL to Up/Down/Left/Right</name>
      <appendix>+ Control_R+H/Control_R+; to beginning-of-line/end-of-line (Command+Shift+Left/Right)</appendix>
      <identifier>option.extra_cursor_controlR_jkil_hsemicolon</identifier>
      <autogen>__KeyToKey__ KeyCode::I,         ModifierFlag::CONTROL_R, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::CONTROL_R, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::CONTROL_R, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::CONTROL_R, KeyCode::CURSOR_RIGHT</autogen>
      <autogen>__KeyToKey__ KeyCode::H,         ModifierFlag::CONTROL_R, KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::CONTROL_R, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item><name>____________________________________________________________</name></item>
    <item>
      <name>Option_L+IKJL to Up/Down/Left/Right</name>
      <identifier>option.extra_cursor_optionL_jkil</identifier>
      <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::OPTION_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::OPTION_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT</autogen>
    </item>
  </item>

  <item>
    <name>Browsing Mode</name>
    <item>
      <name>What's Browsing Mode?</name>
      <appendix>Browsing Mode is a mode to perform reading of the text effectively.</appendix>
      <appendix></appendix>
      <appendix>- Change Space to PageDown</appendix>
      <appendix>- Change Shift+Space to PageUp</appendix>
      <appendix>- Change B to PageUp</appendix>
      <appendix>- Change H to Home</appendix>
      <appendix>- Change J to Option_L+Down</appendix>
      <appendix>- Change K to Option_L+Up</appendix>
      <appendix>- Change L to End</appendix>
      <identifier vk_config="true">notsave.browsingmode</identifier>
      <autogen>__ShowStatusMessage__ Browsing Mode</autogen>
      <autogen>__KeyToKey__ KeyCode::SPACE, VK_SHIFT, KeyCode::PAGEUP</autogen>
      <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::PAGEDOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::B, KeyCode::PAGEUP</autogen>
      <autogen>__KeyToKey__ KeyCode::H, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::END</autogen>
      <autogen>__KeyToKey__ KeyCode::J, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::K, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Eject to toggle Browsing Mode</name>
      <appendix>(+ Fn+Eject to Eject)</appendix>
      <identifier>remap.eject2browsing</identifier>
      <autogen>__ConsumerToConsumer__ ConsumerKeyCode::EJECT, ModifierFlag::FN, ConsumerKeyCode::EJECT</autogen>
      <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::VK_CONFIG_TOGGLE_notsave_browsingmode</autogen>
    </item>
    <item>
      <name>Fn to Fn</name>
      <appendix>(+ When you type Fn only, toggle Browsing Mode)</appendix>
      <identifier>remap.Fn2Fn_browsing</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::FN, KeyCode::FN, KeyCode::VK_CONFIG_TOGGLE_notsave_browsingmode</autogen>
    </item>
    <item>
      <name>Option_R to Option_R</name>
      <appendix>(+ When you type Option_R only, toggle Browsing Mode)</appendix>
      <identifier>remap.optionR2optionR_browsing</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_R, KeyCode::OPTION_R, KeyCode::VK_CONFIG_TOGGLE_notsave_browsingmode</autogen>
    </item>
    <item>
      <name>RightClick to toggle Browsing Mode</name>
      <identifier>remap.rightclick_to_browsing</identifier>
      <autogen>__PointingButtonToKey__ PointingButton::RIGHT, KeyCode::VK_CONFIG_TOGGLE_notsave_browsingmode</autogen>
    </item>
  </item>

  <item>
    <name>Emacs Mode</name>
    <item>
      <name>Control+D to Forward Delete</name>
      <identifier>option.emacsmode_controlD</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Control+D to Forward Delete</name>
      <appendix>(when there are no other modifiers)</appendix>
      <identifier>option.emacsmode_controlD_nomodifiers</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::D, VK_CONTROL | ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Control+H to Delete</name>
      <identifier>option.emacsmode_controlH</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Control+I to Tab</name>
      <identifier>option.emacsmode_controlI</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
    </item>
    <item>
      <name>Control+[ to Escape</name>
      <identifier>option.emacsmode_controlLeftbracket</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Control+J to Return</name>
      <identifier>remap.controlJ2return</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::J, VK_CONTROL, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Control+J to Enter</name>
      <identifier>remap.controlJ2enter</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::J, VK_CONTROL, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Control+M to Return</name>
      <identifier>option.emacsmode_controlM</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Control+PNBF to Up/Down/Left/Right</name>
      <identifier>option.emacsmode_controlPNBF</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Control+PNBF to Up/Down/Left/Right</name>
      <appendix>(when there are no other modifiers)</appendix>
      <identifier>option.emacsmode_controlPNBF_nomodifiers</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Control+PNBF to Up/Down/Left/Right</name>
      <appendix>(+ Control+AE to Command+Left/Right)</appendix>
      <appendix>(+ Command+Control+PNBF to Shift+Up/Down/Left/Right)</appendix>
      <appendix>(+ Command+Control+AE to Shift+Command+Left/Right)</appendix>
      <appendix>(+ retain Control+Shift+PNBF)</appendix>
      <appendix>(+ retain Control+Shift+AE)</appendix>
      <identifier>option.emacsmode_controlPNBF_ex</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <!-- retain -->
      <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL | VK_SHIFT, KeyCode::P, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL | VK_SHIFT, KeyCode::N, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL | VK_SHIFT, KeyCode::B, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL | VK_SHIFT, KeyCode::F, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL | VK_SHIFT, KeyCode::A, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL | VK_SHIFT, KeyCode::E, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>

      <autogen>__KeyToKey__ KeyCode::P, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_UP,    ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::N, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::B, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_LEFT,  ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::F, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::A, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::E, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>

      <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
      <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control+V to PageDown</name>
      <identifier>option.emacsmode_controlV</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::V, VK_CONTROL, KeyCode::PAGEDOWN</autogen>
    </item>
    <item>
      <name>Option+V to PageUp</name>
      <identifier>option.emacsmode_optionV</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::V, VK_OPTION, KeyCode::PAGEUP</autogen>
    </item>
    <item>
      <name>Command+V to PageUp</name>
      <identifier>option.emacsmode_commandV</identifier>
      <!-- Do not use "not filter" on changing Command+XXX -->
      <autogen>__KeyToKey__ KeyCode::V, VK_COMMAND, KeyCode::PAGEUP</autogen>
    </item>
    <item>
      <name>Control+Y to Command+V</name>
      <identifier>option.emacsmode_controlY</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::Y, VK_CONTROL, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control+AE to Command+Left/Right</name>
      <identifier>option.emacsmode_controlAE</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control+AE to Command+Shift+Left/Right,Left/Right</name>
      <appendix>(An Alternative way if you use Command+Left/Right for Spaces)</appendix>
      <identifier>option.emacsmode_controlAE_alternative</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Control+K to Command+Shift+Right,Forward Delete</name>
      <identifier>option.emacsmode_controlK_ex</identifier>
      <block>
        <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE, DICTIONARY</not>
        <autogen>__KeyToKey__ KeyCode::K, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::FORWARD_DELETE</autogen>
      </block>
      <block>
        <only>DICTIONARY</only>
        <autogen>__KeyToKey__ KeyCode::K, VK_CONTROL | ModifierFlag::NONE, KeyCode::E, VK_CONTROL | ModifierFlag::SHIFT_L, KeyCode::FORWARD_DELETE</autogen>
      </block>
    </item>
    <item>
      <name>Control+K to Command+Shift+Right,Command+X</name>
      <identifier>option.emacsmode_controlK</identifier>
      <block>
        <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE, DICTIONARY</not>
        <autogen>__KeyToKey__ KeyCode::K, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
      </block>
      <block>
        <only>DICTIONARY</only>
        <autogen>__KeyToKey__ KeyCode::K, VK_CONTROL | ModifierFlag::NONE, KeyCode::E, VK_CONTROL | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
      </block>
    </item>
    <item>
      <name>Control+W to Command+X</name>
      <identifier>option.emacsmode_controlW</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::W, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option+W to Command+C</name>
      <identifier>option.emacsmode_OptionWCopy</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::W, VK_OPTION, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option+BF to Option+Left/Right</name>
      <identifier>option.emacsmode_optionBF</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::B, VK_OPTION, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::F, VK_OPTION, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Option+D to Option+Forward Delete</name>
      <identifier>option.emacsmode_optionD</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::D, VK_OPTION, KeyCode::FORWARD_DELETE, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Option+&lt; to Home / Option+&gt; to End</name>
      <identifier>option.emacsmode_optionLtGt</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::COMMA, VK_OPTION | VK_SHIFT, KeyCode::HOME, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT,   VK_OPTION | VK_SHIFT, KeyCode::END, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Control+/ to Command_Z</name>
      <identifier>option.emacsmode_controlSlash</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::SLASH, VK_CONTROL, KeyCode::Z, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control+S to Command+F</name>
      <identifier>option.emacsmode_controlS</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::S, VK_CONTROL, KeyCode::F, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>[ex] Control+1 to Home / Control+2 to End</name>
      <identifier>option.emacsmode_ex_control12</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::KEY_1, VK_CONTROL, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_2, VK_CONTROL, KeyCode::END</autogen>
    </item>
    <item>
      <name>[ex] Control+Comma(,)/Dot(.) to Home/End</name>
      <identifier>option.emacsmode_ex_controlcommadot</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::COMMA, VK_CONTROL, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT,   VK_CONTROL, KeyCode::END</autogen>
    </item>
    <item>
      <name>[ex] Control+Q to PageUp</name>
      <identifier>option.emacsmode_ex_controlQ</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::Q, VK_CONTROL, KeyCode::PAGEUP</autogen>
    </item>
    <item>
      <name>[ex] Control+W to Option+Delete</name>
      <identifier>option.emacsmode_ex_controlW</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::W, VK_CONTROL, KeyCode::DELETE, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>[ex] Control+U to Command+Shift+Left,Command+X</name>
      <identifier>option.emacsmode_ex_controlU</identifier>
      <block>
        <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE, DICTIONARY</not>
        <autogen>__KeyToKey__ KeyCode::U, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L, Option::NOREPEAT</autogen>
      </block>
      <block>
        <only>DICTIONARY</only>
        <autogen>__KeyToKey__ KeyCode::U, VK_CONTROL | ModifierFlag::NONE, KeyCode::A, VK_CONTROL | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L, Option::NOREPEAT</autogen>
      </block>
    </item>
    <item>
      <name>[ex] Control+U to Command+Shift+Left,Delete</name>
      <identifier>option.emacsmode_ex_controlU_delete</identifier>
      <block>
        <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE, DICTIONARY</not>
        <autogen>__KeyToKey__ KeyCode::U, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::DELETE, Option::NOREPEAT</autogen>
      </block>
      <block>
        <only>DICTIONARY</only>
        <autogen>__KeyToKey__ KeyCode::U, VK_CONTROL | ModifierFlag::NONE, KeyCode::A, VK_CONTROL | ModifierFlag::SHIFT_L, KeyCode::DELETE, Option::NOREPEAT</autogen>
      </block>
    </item>
    <item>
      <name>[ex] Control+U to Command+Shift+Left,Forward Delete</name>
      <identifier>option.emacsmode_ex_controlU_forwarddelete</identifier>
      <block>
        <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE, DICTIONARY</not>
        <autogen>__KeyToKey__ KeyCode::U, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::FORWARD_DELETE, Option::NOREPEAT</autogen>
      </block>
      <block>
        <only>DICTIONARY</only>
        <autogen>__KeyToKey__ KeyCode::U, VK_CONTROL | ModifierFlag::NONE, KeyCode::A, VK_CONTROL | ModifierFlag::SHIFT_L, KeyCode::FORWARD_DELETE, Option::NOREPEAT</autogen>
      </block>
    </item>
    <item>
      <name>[ex] Control+U to PageUp</name>
      <identifier>remap.controlU2pageup</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::U, VK_CONTROL, KeyCode::PAGEUP</autogen>
    </item>
    <item>
      <name>[ex] Control+G to Escape</name>
      <identifier>option.emacsmode_ex_controlG</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::G, VK_CONTROL, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>[ex] Control+AE to Home/End</name>
      <identifier>option.emacsmode_ex_controlAE</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::END</autogen>
    </item>
    <item>
      <name>[ex] Command+W to Command+C</name>
      <identifier>option.emacsmode_ex_commandW</identifier>
      <!-- Do not use "not filter" on changing Command+XXX -->
      <autogen>__KeyToKey__ KeyCode::W, VK_COMMAND, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>[ex] Command+W to Control+X,Control+M,Command+C (only in Xcode)</name>
      <appendix>(+ Command+W to Command+C (except Xcode))</appendix>
      <identifier>option.emacsmode_ex_commandW_xcode</identifier>
      <block>
        <only>XCODE</only>
        <autogen>__KeyToKey__ KeyCode::W, VK_COMMAND, KeyCode::X, ModifierFlag::CONTROL_L, KeyCode::M, ModifierFlag::CONTROL_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
      </block>
      <block>
        <!-- Do not use "not filter" on changing Command+XXX -->
        <autogen>__KeyToKey__ KeyCode::W, VK_COMMAND, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
      </block>
    </item>
    <item>
      <name>[ex] Control+W to Control+X,Control+M,Command+X (only in Xcode)</name>
      <appendix>(+ Control+W to Command+X (except Xcode))</appendix>
      <identifier>option.emacsmode_ex_controlW_xcode</identifier>
      <block>
        <only>XCODE</only>
        <autogen>__KeyToKey__ KeyCode::W, VK_CONTROL, KeyCode::X, ModifierFlag::CONTROL_L, KeyCode::M, ModifierFlag::CONTROL_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
      </block>
      <block>
        <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
        <autogen>__KeyToKey__ KeyCode::W, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
      </block>
    </item>
    <item>
      <name>[ex] Option+W to Command+W</name>
      <identifier>option.emacsmode_ex_optionW</identifier>
      <autogen>__KeyToKey__ KeyCode::W, VK_OPTION, KeyCode::W, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>[ex] Use Control+X as prefix key</name>
      <item>
        <!-- C-x Mode Core -->
        <name>Control+X detail</name>
        <appendix>C-x C-s to Command_L+S</appendix>
        <appendix>C-x C-f to Command_L+O</appendix>
        <appendix>C-x k to Command_L+W</appendix>
        <appendix>C-x C-c to Command_L+Q</appendix>
        <appendix>C-x C-g to turn off Control+X Mode</appendix>
        <identifier vk_config="true">notsave.emacsmode_ex_controlX_core</identifier>
        <autogen>__ShowStatusMessage__ C-x Mode</autogen>
        <autogen>__KeyToKey__ KeyCode::S, VK_CONTROL | ModifierFlag::NONE, KeyCode::S, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
        <autogen>__KeyToKey__ KeyCode::C, VK_CONTROL | ModifierFlag::NONE, KeyCode::Q, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
        <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL | ModifierFlag::NONE, KeyCode::O, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
        <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE,              KeyCode::W, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
        <autogen>__KeyToKey__ KeyCode::G, VK_CONTROL | ModifierFlag::NONE,                                      KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
      </item>
      <item>
        <name>Enable Control+X</name>
        <identifier>option.emacsmode_ex_controlX</identifier>
        <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
        <autogen>__KeyToKey__ KeyCode::X, VK_CONTROL | ModifierFlag::NONE, KeyCode::VK_CONFIG_FORCE_ON_notsave_emacsmode_ex_controlX_core</autogen>
      </item>
    </item>
    <item>
      <name>[ex] Use Control+Space as MarkSet</name>
      <item>
        <!-- MarkSet Mode Core -->
        <name>MarkSet Mode detail</name>
        <appendix>Control+W to Command_L+X</appendix>
        <appendix>Option+W to Command_L+C</appendix>
        <appendix>Control+G to turn off MarkSet</appendix>
        <appendix>Control+Space to turn off MarkSet</appendix>
        <identifier vk_config="true">notsave.emacsmode_ex_controlSpace_core</identifier>
        <autogen>__ShowStatusMessage__ MarkSet</autogen>
        <autogen>__KeyToKey__ KeyCode::W,     VK_CONTROL | ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF, KeyCode::X, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlSpace_core</autogen>
        <autogen>__KeyToKey__ KeyCode::W,     VK_OPTION  | ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF, KeyCode::C, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlSpace_core</autogen>
        <autogen>__KeyToKey__ KeyCode::G,     VK_CONTROL | ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF,                                      KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlSpace_core</autogen>
        <autogen>__KeyToKey__ KeyCode::SPACE, VK_CONTROL | ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF,                                      KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlSpace_core</autogen>
      </item>
      <item>
        <name>Enable Control+Space</name>
        <identifier>option.emacsmode_ex_controlSpace</identifier>
        <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
        <autogen>__KeyToKey__ KeyCode::SPACE, VK_CONTROL | ModifierFlag::NONE, KeyCode::VK_LOCK_SHIFT_L_FORCE_ON, KeyCode::VK_CONFIG_FORCE_ON_notsave_emacsmode_ex_controlSpace_core</autogen>
      </item>
    </item>
    <item>
      <name>Behavior in Emacs, Terminal, X11, VMware, Parallels, RDC, Eclipse</name>
      <item>
        <name>Force change C-d to Forward Delete</name>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlD_term</identifier>
          <only>EMACS, TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlD_x11</identifier>
          <only>X11</only>
          <autogen>__KeyToKey__ KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlD_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>In Eclipse</name>
          <identifier>option.emacsmode_force_controlD_eclipse</identifier>
          <only>ECLIPSE</only>
          <autogen>__KeyToKey__ KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
        </item>
      </item>
      <item>
        <name>Force change C-h to Delete</name>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlH_term</identifier>
          <only>EMACS, TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlH_x11</identifier>
          <only>X11</only>
          <autogen>__KeyToKey__ KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlH_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>In Eclipse</name>
          <identifier>option.emacsmode_force_controlH_eclipse</identifier>
          <only>ECLIPSE</only>
          <autogen>__KeyToKey__ KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
        </item>
      </item>
      <item>
        <name>Force change C-i to Tab</name>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlI_term</identifier>
          <only>EMACS, TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlI_x11</identifier>
          <only>X11</only>
          <autogen>__KeyToKey__ KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlI_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>In Eclipse</name>
          <identifier>option.emacsmode_force_controlI_eclipse</identifier>
          <only>ECLIPSE</only>
          <autogen>__KeyToKey__ KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
        </item>
      </item>
      <item>
        <name>Force change C-m to Return</name>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlM_term</identifier>
          <only>EMACS, TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlM_x11</identifier>
          <only>X11</only>
          <autogen>__KeyToKey__ KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlM_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>In Eclipse</name>
          <identifier>option.emacsmode_force_controlM_eclipse</identifier>
          <only>ECLIPSE</only>
          <autogen>__KeyToKey__ KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
        </item>
      </item>
      <item>
        <name>Force change C-[ to Escape</name>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlLeftbracket_term</identifier>
          <only>EMACS, TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlLeftbracket_x11</identifier>
          <only>X11</only>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlLeftbracket_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>In Eclipse</name>
          <identifier>option.emacsmode_force_controlLeftbracket_eclipse</identifier>
          <only>ECLIPSE</only>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
        </item>
      </item>
      <item>
        <name>Force change C-pnbf to Up/Down/Left/Right</name>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlPNBF_term</identifier>
          <only>EMACS, TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlPNBF_x11</identifier>
          <only>X11</only>
          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlPNBF_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>In Eclipse</name>
          <identifier>option.emacsmode_force_controlPNBF_eclipse</identifier>
          <only>ECLIPSE</only>
          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
        </item>
      </item>
      <item>
        <name>Force change C-pnbf to Up/Down/Left/Right</name>
        <appendix>(+ Control+AE to Command+Left/Right)</appendix>
        <appendix>(+ Command+Control+PNBF to Shift+Up/Down/Left/Right)</appendix>
        <appendix>(+ Command+Control+AE to Shift+Command+Left/Right)</appendix>
        <appendix>(+ retain Control+Shift+PNBF)</appendix>
        <appendix>(+ retain Control+Shift+AE)</appendix>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlPNBF_ex_term</identifier>
          <only>EMACS, TERMINAL</only>
          <!-- retain -->
          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL | VK_SHIFT, KeyCode::P, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL | VK_SHIFT, KeyCode::N, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL | VK_SHIFT, KeyCode::B, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL | VK_SHIFT, KeyCode::F, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL | VK_SHIFT, KeyCode::A, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL | VK_SHIFT, KeyCode::E, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>

          <autogen>__KeyToKey__ KeyCode::P, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_UP,    ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_LEFT,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>

          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlPNBF_ex_x11</identifier>
          <only>X11</only>
          <!-- retain -->
          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL | VK_SHIFT, KeyCode::P, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL | VK_SHIFT, KeyCode::N, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL | VK_SHIFT, KeyCode::B, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL | VK_SHIFT, KeyCode::F, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL | VK_SHIFT, KeyCode::A, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL | VK_SHIFT, KeyCode::E, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>

          <autogen>__KeyToKey__ KeyCode::P, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_UP,    ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_LEFT,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>

          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlPNBF_ex_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <!-- retain -->
          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL | VK_SHIFT, KeyCode::P, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL | VK_SHIFT, KeyCode::N, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL | VK_SHIFT, KeyCode::B, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL | VK_SHIFT, KeyCode::F, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL | VK_SHIFT, KeyCode::A, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL | VK_SHIFT, KeyCode::E, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>

          <autogen>__KeyToKey__ KeyCode::P, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_UP,    ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_LEFT,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>

          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>In Eclipse</name>
          <identifier>option.emacsmode_force_controlPNBF_ex_eclipse</identifier>
          <only>ECLIPSE</only>
          <!-- retain -->
          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL | VK_SHIFT, KeyCode::P, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL | VK_SHIFT, KeyCode::N, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL | VK_SHIFT, KeyCode::B, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL | VK_SHIFT, KeyCode::F, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL | VK_SHIFT, KeyCode::A, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL | VK_SHIFT, KeyCode::E, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>

          <autogen>__KeyToKey__ KeyCode::P, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_UP,    ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_LEFT,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_COMMAND | VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>

          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
      </item>
      <item>
        <name>Control+AE to Home/End</name>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_controlAE_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::HOME</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::END</autogen>
        </item>
      </item>
      <item>
        <name>[Terminal] Control+/ to C-_ and Control+' to C-M-_</name>
        <identifier>option.emacsmode_controlSlashTerminal</identifier>
        <only>TERMINAL</only>
        <autogen>__KeyToKey__ KeyCode::SLASH, VK_CONTROL, KeyCode::MINUS, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::QUOTE, VK_CONTROL, KeyCode::MINUS, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
      </item>
    </item>
  </item>

  <item>
    <name>Mouse Keys</name>
    <item>
      <name>Arrow(Up/Down/Left/Right) Keys to Mouse Keys</name>
      <identifier>remap.mousekeys_arrow</identifier>
      <autogen>__KeyToKey__ KeyCode::CURSOR_UP,    KeyCode::VK_MOUSEKEY_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN,  KeyCode::VK_MOUSEKEY_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT,  KeyCode::VK_MOUSEKEY_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, KeyCode::VK_MOUSEKEY_RIGHT</autogen>
    </item>

    <item>
      <name>Mouse Keys Mode</name>
      <item>
        <name>What's Mouse Keys Mode?</name>
        <appendix>Push "S" and "D" keys simultaneously while pressing Shift key,</appendix>
        <appendix>and keep S,D keys pressing.</appendix>
        <appendix>Then you can control mouse cursor by HJKL keys. (and Arrow keys)</appendix>
        <appendix>- HJKL to move mouse cursor</appendix>
        <appendix>- Arrow Keys to move mouse cursor</appendix>
        <appendix></appendix>
        <appendix>And, control scroll wheel.</appendix>
        <appendix>- F+HJKL to scroll wheel</appendix>
        <appendix>- F+Arrow Keys to scroll wheel</appendix>
        <appendix></appendix>
        <appendix>You can adjust the speed, too.</appendix>
        <appendix>- A+HJKL to high-speed movement</appendix>
        <appendix>- A+Arrow Keys to high-speed movement</appendix>
        <identifier vk_config="true">notsave.mousekeys_mode</identifier>
        <autogen>__ShowStatusMessage__ Mouse Keys</autogen>
        <!-- scroll wheel mode -->
        <autogen>__KeyToKey__ {{VI_H}},               ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_LEFT,  ModifierFlag::FN</autogen>
        <autogen>__KeyToKey__ {{VI_J}},               ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_DOWN,  ModifierFlag::FN</autogen>
        <autogen>__KeyToKey__ {{VI_K}},               ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_UP,    ModifierFlag::FN</autogen>
        <autogen>__KeyToKey__ {{VI_L}},               ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_RIGHT, ModifierFlag::FN</autogen>
        <autogen>__KeyToKey__ KeyCode::CURSOR_UP,    ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_UP,    ModifierFlag::FN</autogen>
        <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN,  ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_DOWN,  ModifierFlag::FN</autogen>
        <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT,  ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_LEFT,  ModifierFlag::FN</autogen>
        <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_RIGHT, ModifierFlag::FN</autogen>
        <!-- normal mode -->
        <autogen>__KeyToKey__ {{VI_H}},    KeyCode::VK_MOUSEKEY_LEFT</autogen>
        <autogen>__KeyToKey__ {{VI_J}},    KeyCode::VK_MOUSEKEY_DOWN</autogen>
        <autogen>__KeyToKey__ {{VI_K}},    KeyCode::VK_MOUSEKEY_UP</autogen>
        <autogen>__KeyToKey__ {{VI_L}},    KeyCode::VK_MOUSEKEY_RIGHT</autogen>
        <autogen>__KeyToKey__ KeyCode::CURSOR_UP,    KeyCode::VK_MOUSEKEY_UP</autogen>
        <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN,  KeyCode::VK_MOUSEKEY_DOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT,  KeyCode::VK_MOUSEKEY_LEFT</autogen>
        <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, KeyCode::VK_MOUSEKEY_RIGHT</autogen>
        <!-- ======================================== -->
        <block>
          <config_only>remap.simultaneouskeypresses_mouse_keys_mode_commandSD, remap.simultaneouskeypresses_mouse_keys_mode_shiftSD</config_only>
          <autogen>__KeyToKey__ KeyCode::F, KeyCode::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::VK_MOUSEKEY_HIGHSPEED</autogen>
        </block>
        <block>
          <config_only>remap.simultaneouskeypresses_mouse_keys_mode_df</config_only>
          <autogen>__KeyToKey__ KeyCode::S, KeyCode::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::VK_MOUSEKEY_HIGHSPEED</autogen>
        </block>
        <block>
          <config_only>remap.simultaneouskeypresses_mouse_keys_mode_cx</config_only>
          <autogen>__KeyToKey__ KeyCode::V, KeyCode::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, KeyCode::VK_MOUSEKEY_HIGHSPEED</autogen>
        </block>
        <block>
          <config_only>remap.mouse_keys_mode_holding_m</config_only>
          <autogen>__KeyToKey__ KeyCode::F, KeyCode::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::D, KeyCode::VK_MOUSEKEY_HIGHSPEED</autogen>
        </block>
        <!-- ======================================== -->
        <block>
          <config_only>option.mousekeys_mode_commandL2leftclick</config_only>
          <autogen>__KeyToPointingButton__ KeyCode::COMMAND_L, PointingButton::LEFT</autogen>
        </block>
        <block>
          <config_only>option.mousekeys_mode_space2middleclick</config_only>
          <autogen>__KeyToPointingButton__ KeyCode::SPACE, PointingButton::MIDDLE</autogen>
        </block>
        <block>
          <config_only>option.mousekeys_mode_commandR2rightclick</config_only>
          <autogen>__KeyToPointingButton__ KeyCode::COMMAND_R, PointingButton::RIGHT</autogen>
        </block>
        <block>
          <config_only>option.mousekeys_mode_wer2click</config_only>
          <autogen>__KeyToPointingButton__ KeyCode::W, PointingButton::LEFT</autogen>
          <autogen>__KeyToPointingButton__ KeyCode::E, PointingButton::MIDDLE</autogen>
          <autogen>__KeyToPointingButton__ KeyCode::R, PointingButton::RIGHT</autogen>
        </block>
        <block>
          <config_only>option.mousekeys_mode_uio2click</config_only>
          <autogen>__KeyToPointingButton__ KeyCode::U, PointingButton::LEFT</autogen>
          <autogen>__KeyToPointingButton__ KeyCode::I, PointingButton::MIDDLE</autogen>
          <autogen>__KeyToPointingButton__ KeyCode::O, PointingButton::RIGHT</autogen>
        </block>
        <block>
          <config_only>option.mousekeys_mode_jis_eisuu2leftclick</config_only>
          <autogen>__KeyToPointingButton__ KeyCode::JIS_EISUU, PointingButton::LEFT</autogen>
        </block>
        <block>
          <config_only>option.mousekeys_mode_jis_kana2rightclick</config_only>
          <autogen>__KeyToPointingButton__ KeyCode::JIS_KANA, PointingButton::RIGHT</autogen>
        </block>
      </item>
      <item>
        <name>Simultaneous Key Presses Shift+[S+D] to turn on Mouse Keys Mode</name>
        <appendix>// Press S,D keys simultaneously while pressing Shift_L or Shift_R.</appendix>
        <appendix>// You can release Shift key while pressing S,D keys.</appendix>
        <appendix></appendix>
        <appendix>+ F turns on "Scroll Wheel Mode"</appendix>
        <appendix>// F+HJKL to scroll wheel</appendix>
        <appendix></appendix>
        <appendix>+ A turns on "High Speed Mode"</appendix>
        <appendix>// A+HJKL to high-speed movement</appendix>
        <identifier>remap.simultaneouskeypresses_mouse_keys_mode_shiftSD</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::S, VK_SHIFT, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_mousekeys_mode</autogen>
      </item>
      <item>
        <name>Simultaneous Key Presses Command+[S+D] to turn on Mouse Keys Mode</name>
        <appendix>// Press S,D keys simultaneously while pressing Command_L or Command_R.</appendix>
        <appendix>// You can release Command key while pressing S,D keys.</appendix>
        <appendix></appendix>
        <appendix>+ F turns on "Scroll Wheel Mode"</appendix>
        <appendix>// F+HJKL to scroll wheel</appendix>
        <appendix></appendix>
        <appendix>+ A turns on "High Speed Mode"</appendix>
        <appendix>// A+HJKL to high-speed movement</appendix>
        <identifier>remap.simultaneouskeypresses_mouse_keys_mode_commandSD</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::S, VK_COMMAND, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_mousekeys_mode</autogen>
      </item>
      <item>
        <name>Simultaneous Key Presses [D+F] to turn on Mouse Keys Mode</name>
        <appendix></appendix>
        <appendix>+ S turns on "Scroll Wheel Mode"</appendix>
        <appendix>// S+HJKL to scroll wheel</appendix>
        <appendix></appendix>
        <appendix>+ A turns on "High Speed Mode"</appendix>
        <appendix>// A+HJKL to high-speed movement</appendix>
        <identifier>remap.simultaneouskeypresses_mouse_keys_mode_df</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::F, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_mousekeys_mode</autogen>
      </item>
      <item>
        <name>Simultaneous Key Presses [X+C] to turn on Mouse Keys Mode</name>
        <appendix></appendix>
        <appendix>+ V turns on "Scroll Wheel Mode"</appendix>
        <appendix>// V+HJKL to scroll wheel</appendix>
        <appendix></appendix>
        <appendix>+ Z turns on "High Speed Mode"</appendix>
        <appendix>// Z+HJKL to high-speed movement</appendix>
        <identifier>remap.simultaneouskeypresses_mouse_keys_mode_cx</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::X, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_mousekeys_mode</autogen>
      </item>
      <item>
        <name>Holding "M" Key to toggle Mouse Keys Mode</name>
        <appendix>+ F turns on "Scroll Wheel Mode"</appendix>
        <appendix>// F+HJKL to scroll wheel</appendix>
        <appendix></appendix>
        <appendix>+ D turns on "High Speed Mode"</appendix>
        <appendix>// D+HJKL to high-speed movement</appendix>
        <identifier>remap.mouse_keys_mode_holding_m</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::M, KeyCode::VK_NONE, KeyCode::VK_CONFIG_TOGGLE_notsave_mousekeys_mode</autogen>
      </item>
      <item>
        <name>[Option] Command_L to LeftClick</name>
        <identifier>option.mousekeys_mode_commandL2leftclick</identifier>
      </item>
      <item>
        <name>[Option] Space to MiddleClick</name>
        <identifier>option.mousekeys_mode_space2middleclick</identifier>
      </item>
      <item>
        <name>[Option] Command_R to RightClick</name>
        <identifier>option.mousekeys_mode_commandR2rightclick</identifier>
      </item>
      <item>
        <name>[Option] WER to Click</name>
        <appendix>- W to LeftClick</appendix>
        <appendix>- E to MiddleClick</appendix>
        <appendix>- R to RightClick</appendix>
        <identifier>option.mousekeys_mode_wer2click</identifier>
      </item>
      <item>
        <name>[Option] UIO to Click</name>
        <appendix>- U to LeftClick</appendix>
        <appendix>- I to MiddleClick</appendix>
        <appendix>- O to RightClick</appendix>
        <identifier>option.mousekeys_mode_uio2click</identifier>
      </item>
      <item>
        <name>[Option] JIS_EISUU to LeftClick</name>
        <appendix></appendix>
        <appendix>// If you are using Apple keyboards, this setting may be useless.</appendix>
        <appendix>// Because Apple keyboards have a 2-key rollover problem,</appendix>
        <appendix>// and can't recognize JIS_EISUU while pressing S,D keys.</appendix>
        <identifier>option.mousekeys_mode_jis_eisuu2leftclick</identifier>
      </item>
      <item>
        <name>[Option] JIS_KANA to RightClick</name>
        <identifier>option.mousekeys_mode_jis_kana2rightclick</identifier>
      </item>
      <item>
        <name>[Option] Ignore Hardware CursorMove Events</name>
        <identifier>option.mousekeys_mode_droppointingrelativecursormove</identifier>
        <config_only>remap.simultaneouskeypresses_mouse_keys_mode_commandSD, remap.simultaneouskeypresses_mouse_keys_mode_shiftSD, remap.simultaneouskeypresses_mouse_keys_mode_df, remap.simultaneouskeypresses_mouse_keys_mode_cx</config_only>
        <autogen>__DropPointingRelativeCursorMove__</autogen>
      </item>
    </item>

    <item>
      <name>Control+L to RightClick</name>
      <identifier>remap.control_l2rightclick</identifier>
      <autogen>__KeyToPointingButton__ KeyCode::L, VK_CONTROL, PointingButton::RIGHT</autogen>
    </item>
  </item>

  <item>
    <name>Vi Mode</name>
    <item>
      <name>Command_L+hjkl to Left/Down/Up/Right</name>
      <identifier>option.vimode_commandl_hjkl</identifier>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::COMMAND_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::COMMAND_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::COMMAND_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::COMMAND_L, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Command_R+hjkl to Left/Down/Up/Right</name>
      <identifier>option.vimode_hjkl</identifier>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::COMMAND_R, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::COMMAND_R, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::COMMAND_R, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::COMMAND_R, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Control_L+hjkl to Left/Down/Up/Right</name>
      <identifier>option.vimode_control_hjkl</identifier>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Fn+hjkl to Left/Down/Up/Right</name>
      <identifier>option.vimode_fn_hjkl</identifier>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::FN, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::FN, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::FN, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::FN, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Option_L+hjkl to Left/Down/Up/Right</name>
      <identifier>option.extra_cursor_optionL_kjhl</identifier>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::OPTION_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::OPTION_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Command_R+g/G to Home/End</name>
      <identifier>option.vimode_gG</identifier>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::COMMAND_R | VK_SHIFT, KeyCode::END</autogen>
    </item>
    <item>
      <name>Control_L+g/G to Home/End</name>
      <identifier>option.vimode_control_gG</identifier>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::CONTROL_L | VK_SHIFT, KeyCode::END</autogen>
    </item>
    <item>
      <name>Command_R+bf to PageUp/PageDown</name>
      <identifier>option.vimode_bf</identifier>
      <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::COMMAND_R, KeyCode::PAGEUP</autogen>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::COMMAND_R, KeyCode::PAGEDOWN</autogen>
    </item>
    <item>
      <name>Control_L+bf to PageUp/PageDown</name>
      <identifier>option.vimode_control_bf</identifier>
      <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::CONTROL_L, KeyCode::PAGEUP</autogen>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::CONTROL_L, KeyCode::PAGEDOWN</autogen>
    </item>
    <item>
      <name>Command_R+0$ to Command+Left/Right</name>
      <identifier>option.vimode_0dollar</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::COMMAND_R | VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control_L+0$ to Command+Left/Right</name>
      <identifier>option.vimode_control_0dollar</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::CONTROL_L | VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option_L+hjkl to Option+Left/Down/Up/Right</name>
      <identifier>option.vimode_option_hjkl</identifier>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::OPTION_L, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::OPTION_L, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
    </item>
  </item>

  <!-- Ubiquitous Vim Bindings        -->
  <!-- Author: Seth Milliken          -->
  <!-- Date:  2010-09-26 21:51:17 PDT -->
  <item>
    <name>Ubiquitous Vim Bindings</name>

    <item>
      <name>Documentation:</name>
      <item>
        <name>Ubiquitous Vim Bindings for Normal Mode:</name>

        <identifier vk_config="true">notsave.ubiq_vimnormal</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__ShowStatusMessage__ Normal Mode</autogen>

        <appendix>To enable these settings enable a binding or set of bindings to enter Normal Mode below.</appendix>
        <appendix></appendix>
        <appendix>h: Left</appendix>
        <appendix>j: Down</appendix>
        <appendix>k: Up</appendix>
        <appendix>l: Right</appendix>
        <appendix>b: Back a word (Option_L+Left)</appendix>
        <appendix>B: Back two words (Option_L+Left, Option_L+Left)</appendix> <!-- TODO: Can't detect WORDs, so doing next best thing. -->
        <appendix>e: Back to end of previous word (Option_L+Right)</appendix>
        <appendix>E: Back to end of previous word twice (Option_L+Right, Option_L+Right)</appendix> <!-- TODO: Can't detect WORDs, so doing next best thing. -->
        <appendix>w: Forward a word (Option_L+Right, Option_L+Right, Option_L+Left)</appendix>
        <appendix>W: Forward two words (Option_L+Right, Option_L+Right, Option_L+Right, Option_L+Left)</appendix> <!-- TODO: Can't detect WORDs, so doing next best thing. -->
        <appendix>Ctrl-f Move page down (Option_L+PageDown)</appendix>
        <appendix>Ctrl-b Move page up (Option_L+PageUp)</appendix>
        <appendix>Ctrl-n Down</appendix> <!-- TODO: Not always what we want, but often sufficient. -->
        <appendix>Ctrl-p Up</appendix> <!-- TODO: Not always what we want, but often sufficient. -->
        <appendix>G: Move to end of document (Command_L+Down)</appendix>
        <appendix>0: Move to beginning of line (Command_L+Left)</appendix>
        <appendix>^: Move to beginning of line (Command_L+Left,Option_L+Right, Option-L+Left) [^ == Shift+6]</appendix> <!-- TODO: Best approximation of first non-whitespace character in the line. -->
        <appendix>$: Move to end of line (Command_L+Right) [$ == Shift+4]</appendix>
        <appendix>/: Find (Command_L+f, Exit Normal Mode)</appendix>
        <appendix>n: Find next match (Command_L+g)</appendix>
        <appendix>N: Find previous match (Shift_L+Command_L+g)</appendix>
        <appendix>x: Forward Delete</appendix>
        <appendix>X: Delete</appendix>
        <appendix>o: Begin new line below cursor (Command_L+Right, Shift+Return, Exit Normal Mode)</appendix>
        <appendix>O: Begin new line above cursor (Command_L+Left, Shift+Return, Up, Exit Normal Mode)</appendix>
        <appendix>a: Append (Exit Normal Mode)</appendix>
        <appendix>A: Append at end of line (Command_L+Right, Exit Normal Mode)</appendix>
        <appendix>i: Insert (Exit Normal Mode)</appendix>
        <appendix>I: Insert at beginning of line (Command_L+Left, Exit Normal Mode)</appendix>
        <appendix>J: Join line (Command_L+Right, Shift_L+Forward Delete)</appendix> <!-- TODO: Can't special-case whitespace, so doing next best thing. -->
        <appendix>u: Undo (Command_L+z)</appendix>
        <appendix>U: Undo (Command_L+z)</appendix> <!-- TODO: Can't distinguish undo contexts, so doing next best thing. -->
        <appendix>Ctrl-r: Redo (Command_L+Shift_L+z)</appendix>
        <appendix>dd: Delete line (Command+CursorLeft, Shift_L+Down, Delete)</appendix>
        <appendix>D: Delete to end of line (Command_L+Shift_L+Right, Delete)</appendix>
        <appendix>H: Current line to top (Option_L+PageDown, Down, Up)</appendix> <!-- TODO: Can't navigate in visible area, so doing something with a somewhat similar effect. -->
        <appendix>L: Current line to bottom (Option_L+PageUp, Up, Down)</appendix> <!-- TODO: Can't navigate in visible area, so doing something with a somewhat similar effect. -->
        <appendix>M: Current line to middle (Option_L+PageDown, Option+PageUp)</appendix> <!-- TODO: Can't navigate in visible area, so doing something with a somewhat similar effect. -->
        <appendix>S: Delete line (Command_L+Left, Command_L+Shift_L+Right, Command_L-x)</appendix> <!-- FIXME: implement this. -->
        <appendix>yy: Yank line (Command_L+Left, Shift_L+Down, Command_L-c)</appendix>
        <appendix>Y: Yank line (Command_L+Left, Shift_L+Down, Command_L-c)</appendix>
        <appendix>p: Paste line below (Command_L+Left, Down, Command_L+v)</appendix> <!-- TODO: Can't detect context, so assuming linewise operation wanted. -->
        <appendix>P: Paste line above (Command_L+Left, Command_L+v)</appendix> <!-- TODO: Can't detect context, so assuming linewise operation wanted. -->
        <appendix>ZZ: Close Window (Command_L+w)</appendix>
        <appendix></appendix>
        <appendix>g operator-pending mode:</appendix>
        <appendix>gt: Next tab (Shift-L+Command_L+}) [Can vary by application.]</appendix>
        <appendix>gT: Previous tab (Shift-L+Command_L+{) [Can vary by application.]</appendix>
        <appendix>gg: Move to beginning of document (Command_L+Up)</appendix>
        <appendix></appendix>
        <appendix>C-w operator-pending mode:</appendix>
        <appendix>C-w, x: Close Window (Command_L+w)</appendix>
        <appendix>C-w, n: New Window (Command_L+n)</appendix>
        <appendix>C-w, w: Next Window (Command_L+`)</appendix>
        <appendix>C-w, j: Next Window (Command_L+`)</appendix>
        <appendix>C-w, l: Next Window (Command_L+`)</appendix>
        <appendix>C-w, h: Previous Window (Command_L+Shift_L+`)</appendix>
        <appendix>C-w, k: Previous Window (Command_L+Shift_L+`)</appendix>
        <appendix></appendix>
        <appendix>Non-standard behavior:</appendix>
        <appendix>f: FN</appendix>
        <appendix></appendix>
        <appendix>Any key (without a modifier) not defined here is a dead key.</appendix>
        <appendix></appendix>
        <appendix>Ubiquitous Vim Normal Mode is inactive in terminal applications, Firefox, emacs, vi and vim, and when the password dialog box is active.
        </appendix>

        <block>

          <!-- Unimplemented dead keys in Normal Mode -->
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::R, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::C, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::V, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::EQUAL, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::EQUAL, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::BACKQUOTE, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::BACKSLASH, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::BACKSLASH, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <block>
            <config_not>option.vimnormal_turnoff_backquote</config_not>
            <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          </block>
          <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::QUOTE, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, VK_SHIFT, KeyCode::VK_NONE</autogen>
          <block>
            <config_not>option.ubiquitous_vim_bindings_enable_tab</config_not>
            <autogen>__KeyToKey__ KeyCode::TAB, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::TAB, VK_SHIFT, KeyCode::VK_NONE</autogen>
          </block>
          <block>
            <config_not>notsave.g_operator_pending</config_not>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::T, VK_SHIFT, KeyCode::VK_NONE</autogen>
          </block>

          <!-- hjkl -->
          <block>
            <config_not>notsave.c_w_operator_pending</config_not>
            <autogen>__KeyToKey__ {{VI_H}}, ModifierFlag::NONE, KeyCode::CURSOR_LEFT</autogen>
            <autogen>__KeyToKey__ {{VI_J}}, ModifierFlag::NONE, KeyCode::CURSOR_DOWN</autogen>
            <autogen>__KeyToKey__ {{VI_K}}, ModifierFlag::NONE, KeyCode::CURSOR_UP</autogen>
            <autogen>__KeyToKey__ {{VI_L}}, ModifierFlag::NONE, KeyCode::CURSOR_RIGHT</autogen>
          </block>

          <!-- DELETE -->
          <autogen>__KeyToKey__ KeyCode::DELETE, ModifierFlag::NONE, KeyCode::CURSOR_LEFT</autogen>

          <!-- FN + hjkl -->
          <autogen>__KeyToKey__ {{VI_H}}, ModifierFlag::FN, KeyCode::HOME, ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToKey__ {{VI_J}}, ModifierFlag::FN, KeyCode::PAGEDOWN, ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToKey__ {{VI_K}}, ModifierFlag::FN, KeyCode::PAGEUP, ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToKey__ {{VI_L}}, ModifierFlag::FN, KeyCode::END, ModifierFlag::OPTION_L</autogen>

          <!-- H, M, L --> <!-- TODO: H and L are questionable. May be no good way to implement. -->
          <autogen>__KeyToKey__ {{VI_H}}, VK_SHIFT, KeyCode::PAGEDOWN, ModifierFlag::NONE, KeyCode::CURSOR_DOWN, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ {{VI_L}}, VK_SHIFT, KeyCode::PAGEUP, ModifierFlag::NONE, KeyCode::CURSOR_UP, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::M, VK_SHIFT, KeyCode::PAGEDOWN, ModifierFlag::OPTION_L, KeyCode::PAGEUP, ModifierFlag::OPTION_L</autogen>

          <!-- C-f, C-b -->
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::PAGEDOWN, ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::PAGEUP, ModifierFlag::OPTION_L</autogen>

          <!-- b, e, w, B, E, W -->
          <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
          <block>
            <config_not>notsave.c_w_operator_pending</config_not>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::W, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
          </block>

          <!-- /, n, N -->
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::F, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
          <block>
            <config_not>notsave.c_w_operator_pending</config_not>
            <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::G, ModifierFlag::COMMAND_L</autogen>
            <autogen>__KeyToKey__ KeyCode::N, VK_SHIFT, KeyCode::G, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
          </block>

          <!-- G -->
          <autogen>__KeyToKey__ KeyCode::G, VK_SHIFT, KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L</autogen>

          <!-- x, X -->
          <block>
            <config_not>notsave.c_w_operator_pending</config_not>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>
          </block>
          <autogen>__KeyToKey__ KeyCode::X, VK_SHIFT | ModifierFlag::NONE, KeyCode::DELETE</autogen>

          <!-- u, C-r -->
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::Z, ModifierFlag::COMMAND_L, KeyCode::CURSOR_LEFT, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::U, VK_SHIFT, KeyCode::Z, ModifierFlag::COMMAND_L, KeyCode::CURSOR_LEFT, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::R, VK_CONTROL, KeyCode::Z, ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L</autogen>

          <!-- ZZ -->
          <autogen>__DoublePressModifier__ KeyCode::Z, VK_SHIFT, KeyCode::CONTROL_L, KeyCode::W, ModifierFlag::COMMAND_L</autogen>

          <!-- f -->
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::FN</autogen>

          <block>
            <not>ADIUMX</not>

            <!-- 0, ^, $ -->
            <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>

            <!-- o, O -->
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L, KeyCode::RETURN, ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
            <autogen>__KeyToKey__ KeyCode::O, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::RETURN, ModifierFlag::SHIFT_L, KeyCode::CURSOR_UP, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>

            <!-- a, A -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
            <autogen>__KeyToKey__ KeyCode::A, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::NONE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>

            <!-- J -->
            <autogen>__KeyToKey__ KeyCode::J, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::NONE, KeyCode::SPACE, KeyCode::FORWARD_DELETE, ModifierFlag::SHIFT_L</autogen>

            <!-- i, I -->
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
            <autogen>__KeyToKey__ KeyCode::I, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::NONE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>

            <!-- S -->
            <autogen>__KeyToKey__ KeyCode::S, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>

            <!-- yy, Y -->
            <autogen>__DoublePressModifier__ KeyCode::Y, ModifierFlag::NONE, KeyCode::VK_NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
            <autogen>__KeyToKey__ KeyCode::Y, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>

            <!-- p, P -->
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::CURSOR_DOWN, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
            <autogen>__KeyToKey__ KeyCode::P, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::V, ModifierFlag::COMMAND_L</autogen>

            <!-- dd -->
            <autogen>__DoublePressModifier__ KeyCode::D, ModifierFlag::NONE, KeyCode::VK_NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L, KeyCode::DELETE</autogen>
            <autogen>__KeyToKey__ KeyCode::D, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::DELETE</autogen>

            <!-- C-n, C-p -->
            <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
            <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>

          </block>

          <!-- Adium Customization: Adium interprets Command+Left or Command+Right as Tab change commands rather than text field editor commands. -->
          <block>
            <only>ADIUMX</only>

            <!-- 0, ^, $ -->
            <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L</autogen>

            <!-- o, O -->
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L, KeyCode::RETURN, ModifierFlag::OPTION_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
            <autogen>__KeyToKey__ KeyCode::O, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L, KeyCode::RETURN, ModifierFlag::OPTION_L, KeyCode::CURSOR_UP, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>

            <!-- a, A -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
            <autogen>__KeyToKey__ KeyCode::A, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>

            <!-- J -->
            <autogen>__KeyToKey__ KeyCode::J, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::SPACE, KeyCode::FORWARD_DELETE, ModifierFlag::SHIFT_L</autogen>

            <!-- i, I -->
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
            <autogen>__KeyToKey__ KeyCode::I, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>

            <!-- S -->
            <autogen>__KeyToKey__ KeyCode::S, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>

            <!-- yy, Y -->
            <autogen>__DoublePressModifier__ KeyCode::Y, ModifierFlag::NONE, KeyCode::VK_NONE, KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
            <autogen>__KeyToKey__ KeyCode::Y, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>

            <!-- p, P -->
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
            <autogen>__KeyToKey__ KeyCode::P, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L, KeyCode::V, ModifierFlag::COMMAND_L</autogen>

            <!-- dd -->
            <autogen>__DoublePressModifier__ KeyCode::D, ModifierFlag::NONE, KeyCode::VK_NONE, KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L, KeyCode::DELETE</autogen>
            <autogen>__KeyToKey__ KeyCode::D, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L, KeyCode::DELETE</autogen>

            <!-- C-n, C-p -->
            <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L</autogen>

          </block>
        </block>

        <!-- Enter g operator pending mode. -->
        <block>
          <config_not>notsave.g_operator_pending</config_not>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::VK_CONFIG_FORCE_ON_notsave_g_operator_pending</autogen>
        </block>

        <!-- g operator pending mode commands. -->
        <block>
          <config_only>notsave.g_operator_pending</config_only>
          <!-- Default gg behavior -->
          <block>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::CURSOR_UP, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending</autogen>
          </block>

          <!-- Default gt, gT (tab-switch) bindings. -->
          <block>
            <not>SAFARI, SKYPE, GOOGLE_CHROME</not>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending</autogen>
            <autogen>__KeyToKey__ KeyCode::T, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending</autogen>
          </block>

          <!-- Skype tab-switch customization. -->
          <block>
            <only>SKYPE</only>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending</autogen>
            <autogen>__KeyToKey__ KeyCode::T, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending</autogen>
          </block>

          <!-- Safari tab-switch customization. -->
          <block>
            <only>SAFARI</only>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending</autogen>
            <autogen>__KeyToKey__ KeyCode::T, VK_SHIFT, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending</autogen>
          </block>

          <!-- Google Chrome tab-switch customization. -->
          <block>
            <only>GOOGLE_CHROME</only>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending</autogen>
            <autogen>__KeyToKey__ KeyCode::T, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending</autogen>
          </block>
        </block>

        <!-- Enter C-w operator pending mode. -->
        <block>
          <config_not>notsave.c_w_operator_pending</config_not>
          <autogen>__KeyToKey__ KeyCode::W, VK_CONTROL, KeyCode::VK_CONFIG_FORCE_ON_notsave_c_w_operator_pending</autogen>
        </block>

        <!-- C-w operator pending mode commands. -->
        <block>
          <config_only>notsave.c_w_operator_pending</config_only>
          <!-- New window with C-w, n -->
          <autogen>__KeyToKey__ KeyCode::N, KeyCode::N, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
          <!-- Close window with C-w, x -->
          <autogen>__KeyToKey__ KeyCode::X, KeyCode::W, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>

          <!-- Switch windows with C-w, w/h/j/k/l -->
          <autogen>__KeyToKey__ KeyCode::W, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
          <autogen>__KeyToKey__ KeyCode::H, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
          <autogen>__KeyToKey__ KeyCode::J, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
          <autogen>__KeyToKey__ KeyCode::K, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
          <autogen>__KeyToKey__ KeyCode::L, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
        </block>
      </item>
    </item>

    <item>
      <name>Insert Mode Commands</name>
      <item>
        <name>Enable Insert Mode Commands</name>
        <appendix>Ctrl-w delete preceding word (Shift+Option+Left, Delete)</appendix>
        <appendix>Ctrl-u delete preceding line (Shift+Command+Left, Delete)</appendix>
        <appendix>Ctrl-d remove an indent (Command+BracketLeft)</appendix>
        <appendix>Ctrl-t add an indent (Command+BracketRight)</appendix>
        <appendix></appendix>
        <appendix>These commands are available when not in Normal Mode.</appendix>
        <identifier>option.ubiq_vimnormal_insert</identifier>

        <!-- Insert Mode Commands -->
        <block>
          <config_not>notsave.ubiq_vimnormal</config_not>
          <config_only>option.ubiq_vimnormal_insert</config_only>
          <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>

          <!-- Ctrl-w -->
          <autogen>__KeyToKey__ KeyCode::W, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L, KeyCode::DELETE</autogen>

          <!-- Ctrl-u -->
          <autogen>__KeyToKey__ KeyCode::U, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::DELETE</autogen>

          <!-- Ctrl-d -->
          <autogen>__KeyToKey__ KeyCode::D, VK_CONTROL, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L</autogen>

          <!-- Ctrl-t -->
          <autogen>__KeyToKey__ KeyCode::T, VK_CONTROL, KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L</autogen>

        </block>
      </item>
    </item>

    <item>
      <name>Recommended binding options to enter Normal Mode</name>

      <item>
        <name>Normal Mode exit commands simultaneously force Modifier Lock off and exit any active operator pending mode.</name>
      </item>

      <item>
        <name>Esc toggles Normal Mode</name>
        <appendix>Holding Esc sends raw Esc</appendix>
        <appendix></appendix>
        <appendix>Lowering the Holding Threshold setting is recommended (200ms)</appendix>
        <identifier>remap.vimnormal_escape_toggle</identifier>
        <!-- Normal Mode on in mode-allowing context: Esc exits Normal Mode, holding Esc sends raw Esc. -->
        <block>
          <config_only>notsave.ubiq_vimnormal</config_only>
          <config_not>option.vimnormal_escape_enters_only</config_not>
          <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
          <autogen>__HoldingKeyToKey__ KeyCode::ESCAPE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending, KeyCode::VK_NONE, KeyCode::ESCAPE</autogen>
        </block>
        <!-- Normal Mode on in mode-allowing context: Esc remains in Normal Mode, holding Esc sends raw Esc. -->
        <block>
          <config_only>notsave.ubiq_vimnormal, option.vimnormal_escape_enters_only</config_only>
          <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
          <autogen>__HoldingKeyToKey__ KeyCode::ESCAPE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_ON_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending, KeyCode::VK_NONE, KeyCode::ESCAPE</autogen>
        </block>
        <!-- Normal Mode off in mode-allowing context: Esc enters Normal Mode, holding Esc sends raw Esc. -->
        <block>
          <config_not>notsave.ubiq_vimnormal</config_not>
          <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
          <autogen>__HoldingKeyToKey__ KeyCode::ESCAPE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_ON_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending, KeyCode::VK_NONE, KeyCode::ESCAPE</autogen>
        </block>
        <!-- Normal Mode on in mode-prohibiting context: Esc sends raw Esc and exits Normal Mode. -->
        <block>
          <config_only>notsave.ubiq_vimnormal</config_only>
          <only>TERMINAL, VI, PASSWORD, FIREFOX, EMACS</only>
          <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending, KeyCode::ESCAPE</autogen>
        </block>
      </item>

      <item>
        <name>Esc does not exit Normal Mode.</name>
        <identifier>option.vimnormal_escape_enters_only</identifier>
      </item>

      <item>
        <name>Ctrl-[ toggles Normal Mode</name>
        <identifier>remap.vimnormal_ctrlbracketleft_toggle</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>

      <item>
        <name>Command_R tap toggles Normal Mode</name>
        <identifier>remap.vimnormal_commandr_toggle</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>

      <item>
        <name>Command_L tap toggles Normal Mode</name>
        <identifier>remap.vimnormal_commandl_toggle</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>

    </item>

    <!-- Key Activations Mirrored from Complete Vi Mode -->

    <item>
      <name>Additional binding options to enter Normal Mode</name>
      <item>
        <name>Simultaneous Key Presses [Command_L+Command_R] toggles Normal Mode</name>
        <identifier>remap.vimnormal_toggle_commandLR</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__SimultaneousKeyPresses__ KeyCode::COMMAND_R, KeyCode::COMMAND_L, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>
      <item>
        <name>Arrow(Down/Left/Right) to Option_L</name>
        <appendix>Disable Up-Arrow</appendix>
        <appendix>(+ When you type Arrow only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_arrow2optionL</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__KeyOverlaidModifier__ KeyCode::CURSOR_UP, KeyCode::VK_NONE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::CURSOR_DOWN, KeyCode::OPTION_L, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::CURSOR_LEFT, KeyCode::OPTION_L, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::CURSOR_RIGHT, KeyCode::OPTION_L, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>
      <item>
        <name>Backquote(`) toggles Normal Mode (if no modifiers pressed)</name>
        <identifier>option.vimnormal_turnoff_backquote</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::NONE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>
      <item>
        <name>Command_L to Command_L</name>
        <appendix>(+ When you type Command_L only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_commandL</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>
      <item>
        <name>Command_R to Command_R</name>
        <appendix>(+ When you type Command_R only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_commandR</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>
      <item>
        <name>Control_R to Control_R</name>
        <appendix>(+ When you type Control_R only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_controlR</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__KeyOverlaidModifier__ KeyCode::CONTROL_R, KeyCode::CONTROL_R, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>
      <item>
        <name>Escape to turn on Normal Mode</name>
        <appendix>(except in Vim)</appendix>
        <identifier>remap.vimnormal_turnon_escape</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <config_not>notsave.ubiq_vimnormal</config_not>
        <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_ON_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>
      <item>
        <name>Escape to turn off Normal Mode</name>
        <appendix>(+ turn off Modifier Lock)</appendix>
        <identifier>option.vimnormal_turnoff_escape</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <config_only>notsave.ubiq_vimnormal</config_only>
        <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>
      <item>
        <name>Return to Command_L+Control_L</name>
        <appendix>(+ When you type Return only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_return</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__KeyOverlaidModifier__ KeyCode::RETURN, KeyCode::CONTROL_L, ModifierFlag::COMMAND_L, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>
      <item>
        <name>Fn to Fn</name>
        <appendix>(+ When you type Fn only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_fn2fn</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__KeyOverlaidModifier__ KeyCode::FN, KeyCode::FN, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>
      <item>
        <name>Option+V toggles Normal Mode</name>
        <identifier>option.vimnormal_toggle_optionV</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__KeyToKey__ KeyCode::V, VK_OPTION, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>
      <item>
        <name>Option+V to turn on Normal Mode</name>
        <identifier>option.vimnormal_turnon_optionV</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__KeyToKey__ KeyCode::V, VK_OPTION, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_ON_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>
      <item>
        <name>Disable Shift_L</name>
        <appendix>(+ When you type Shift_L only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_drop_shiftL</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_EXCEPTION_APPS}}</not>
        <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, KeyCode::VK_NONE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending</autogen>
      </item>
    </item>

    <!-- End Simultaneous Key Activations -->

    <!-- The STICKY in these settings is to allow you to exit Normal Mode when you press the modifier keys, and still allow you to immediately use them as modifiers for the subsequent key command. -->
    <item>
      <name>Normal Mode Auto-deactivation with modifier combinations</name>

      <item>
        <name>Disable Normal Mode on Ctrl+Shift_L key combinations</name>
        <identifier>remap.vimnormal_autodeactivate_ctrl_shift</identifier>
        <config_only>notsave.ubiq_vimnormal</config_only>
        <autogen>__KeyToKey__ KeyCode::SHIFT_L, VK_CONTROL, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending, KeyCode::VK_STICKY_CONTROL_L, KeyCode::VK_STICKY_SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::CONTROL_L, VK_SHIFT, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending, KeyCode::VK_STICKY_CONTROL_L, KeyCode::VK_STICKY_SHIFT_L</autogen>
      </item>

      <item>
        <name>Disable Normal Mode on Ctrl+Command_L key combinations</name>
        <identifier>remap.vimnormal_autodeactivate_ctrl_command</identifier>
        <config_only>notsave.ubiq_vimnormal</config_only>
        <autogen>__KeyToKey__ KeyCode::COMMAND_L, VK_CONTROL, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending, KeyCode::VK_STICKY_CONTROL_L, KeyCode::VK_STICKY_COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::CONTROL_L, VK_COMMAND, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending, KeyCode::VK_STICKY_CONTROL_L, KeyCode::VK_STICKY_COMMAND_L</autogen>
      </item>

      <item>
        <name>Disable Normal Mode on Command_L key combinations</name>
        <identifier>remap.vimnormal_autodeactivate_command</identifier>
        <config_only>notsave.ubiq_vimnormal</config_only>
        <autogen>__KeyToKey__ KeyCode::COMMAND_L, ModifierFlag::COMMAND_L, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal, KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending, KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending, KeyCode::VK_STICKY_COMMAND_L</autogen>
      </item>

    </item>

    <item>
      <name>Activate dead keys</name>
      <item>
        <name>Enable Tab key</name>
        <identifier>option.ubiquitous_vim_bindings_enable_tab</identifier>
      </item>
    </item>

    <!-- Putting these here since items must have names, so we can't hide them completely. -->
    <item>
      <name>Operator Pending Mode Placeholders (No Settings)</name>
      <item>
        <name>g operator pending mode placeholder</name>
        <identifier vk_config="true">notsave.g_operator_pending</identifier>
        <autogen>__ShowStatusMessage__ [g]</autogen>
      </item>
      <item>
        <name>c-w operator pending mode placeholder</name>
        <identifier vk_config="true">notsave.c_w_operator_pending</identifier>
        <autogen>__ShowStatusMessage__ [w]</autogen>
      </item>
    </item>

  </item> <!-- End Ubiquitous Vim Bindings -->

  <item>
    <name>Complete Vi Mode</name>
    <item>
      <name>What's Complete Vi Mode?</name>
      <appendix>You can use Vi style navigation on any applications when "Complete Vi Mode" is on.</appendix>
      <appendix>Turn on a setting below, and toggle "Complete Vi Mode".</appendix>
      <appendix></appendix>
      <appendix>It is a list of the operation.</appendix>
      <appendix>- hjkl to Left/Down/Up/Right</appendix>
      <appendix>- b to Option_L+Left</appendix>
      <appendix>- e to Option_L+Right</appendix>
      <appendix>- w to Option_L+Right,Option_L+Right,Option_L+Left</appendix>
      <appendix>- Control+F to PageDown</appendix>
      <appendix>- Control+B to PageUp</appendix>
      <appendix>- g to Home</appendix>
      <appendix>- Shift+g to End</appendix>
      <appendix>- 0 to Command_L+Left</appendix>
      <appendix>- $ to Command_L+Right ($ == Shift+4)</appendix>
      <appendix>- / to Command_L+F (+ turn off Vi Mode)</appendix>
      <appendix>- n to Command_L+G</appendix>
      <appendix>- x to Forward Delete</appendix>
      <appendix>- Shift+x to Delete</appendix>
      <appendix>- f to Fn</appendix>
      <appendix>- i to turn off Vi Mode</appendix>
      <identifier vk_config="true">notsave.complete_vimode</identifier>
      <autogen>__ShowStatusMessage__ Vi Mode</autogen>
      <block>
        <config_not>option.complete_vimode_dvorak</config_not>
        <!-- HJKL -->
        <autogen>__KeyToKey__ KeyCode::H, KeyCode::CURSOR_LEFT</autogen>
        <autogen>__KeyToKey__ KeyCode::J, KeyCode::CURSOR_DOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::K, KeyCode::CURSOR_UP</autogen>
        <autogen>__KeyToKey__ KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>

        <!-- 0, Shift+4 -->
        <autogen>__KeyToKey__ KeyCode::KEY_0, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_4, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>

        <!-- C-f, C-b -->
        <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::PAGEDOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::PAGEUP</autogen>

        <!-- B, E -->
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::E, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>

        <!-- W -->
        <autogen>__KeyToKey__ KeyCode::W, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>

        <!-- G, Shift+G -->
        <autogen>__KeyToKey__ KeyCode::G, VK_SHIFT, KeyCode::END</autogen>
        <autogen>__KeyToKey__ KeyCode::G, KeyCode::HOME</autogen>

        <!-- SLASH, N -->
        <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::F, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_complete_vimode</autogen>
        <autogen>__KeyToKey__ KeyCode::N, KeyCode::G, ModifierFlag::COMMAND_L</autogen>

        <!-- X -->
        <autogen>__KeyToKey__ KeyCode::X, VK_SHIFT | ModifierFlag::NONE, KeyCode::DELETE</autogen>
        <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>

        <!-- F, I -->
        <autogen>__KeyToKey__ KeyCode::F, KeyCode::FN</autogen>
        <autogen>__KeyToKey__ KeyCode::I, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
      </block>
      <block>
        <config_only>option.complete_vimode_dvorak</config_only>
        <!-- HJKL -->
        <autogen>__KeyToKey__ KeyCode::J, KeyCode::CURSOR_LEFT</autogen>
        <autogen>__KeyToKey__ KeyCode::C, KeyCode::CURSOR_DOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::V, KeyCode::CURSOR_UP</autogen>
        <autogen>__KeyToKey__ KeyCode::P, KeyCode::CURSOR_RIGHT</autogen>

        <!-- 0, Shift+4 -->
        <autogen>__KeyToKey__ KeyCode::KEY_0, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_4, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>

        <!-- C-f, C-b -->
        <autogen>__KeyToKey__ KeyCode::Y, VK_CONTROL, KeyCode::PAGEDOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::PAGEUP</autogen>

        <!-- B, E -->
        <autogen>__KeyToKey__ KeyCode::N, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::D, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>

        <!-- W -->
        <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>

        <!-- G, Shift+G -->
        <autogen>__KeyToKey__ KeyCode::U, VK_SHIFT, KeyCode::END</autogen>
        <autogen>__KeyToKey__ KeyCode::U, KeyCode::HOME</autogen>

        <!-- SLASH, N -->
        <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::Y, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_complete_vimode</autogen>
        <autogen>__KeyToKey__ KeyCode::L, KeyCode::U, ModifierFlag::COMMAND_L</autogen>

        <!-- X -->
        <autogen>__KeyToKey__ KeyCode::B, VK_SHIFT | ModifierFlag::NONE, KeyCode::DELETE</autogen>
        <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>

        <!-- F, I -->
        <autogen>__KeyToKey__ KeyCode::Y, KeyCode::FN</autogen>
        <autogen>__KeyToKey__ KeyCode::G, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
      </block>
    </item>

    <item>
      <name>Option</name>
      <item>
        <name>Dvorak logical HJKL to navigate</name>
        <identifier>option.complete_vimode_dvorak</identifier>
      </item>
    </item>

    <item>
      <name>Simultaneous Key Presses [Command_L+Command_R] to toggle Vi Mode</name>
      <identifier>remap.vimode_toggle_commandLR</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::COMMAND_R, KeyCode::COMMAND_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Holding "V" Key to toggle Vi Mode</name>
      <identifier>remap.vimode_holding_v</identifier>
      <autogen>__HoldingKeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::V, KeyCode::VK_NONE, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Arrow(Down/Left/Right) to Option_L</name>
      <appendix>Disable Up-Arrow</appendix>
      <appendix>(+ When you type Arrow only, toggle Vi Mode)</appendix>
      <identifier>remap.vimode_toggle_arrow2optionL</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::CURSOR_UP,    KeyCode::VK_NONE,  KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
      <autogen>__KeyOverlaidModifier__ KeyCode::CURSOR_DOWN,  KeyCode::OPTION_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
      <autogen>__KeyOverlaidModifier__ KeyCode::CURSOR_LEFT,  KeyCode::OPTION_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
      <autogen>__KeyOverlaidModifier__ KeyCode::CURSOR_RIGHT, KeyCode::OPTION_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Backquote(`) to toggle Vi Mode (if no modifiers pressed)</name>
      <identifier>option.vimode_turnoff_backquote</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::NONE, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Command_L to Command_L</name>
      <appendix>(+ When you type Command_L only, toggle Vi Mode)</appendix>
      <identifier>remap.vimode_toggle_commandL</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Command_R to Command_R</name>
      <appendix>(+ When you type Command_R only, toggle Vi Mode)</appendix>
      <identifier>remap.vimode_toggle_commandR</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Control_R to Control_R</name>
      <appendix>(+ When you type Control_R only, toggle Vi Mode)</appendix>
      <identifier>remap.vimode_toggle_controlR</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::CONTROL_R, KeyCode::CONTROL_R, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Escape to turn on Vi Mode</name>
      <appendix>(except in Vim)</appendix>
      <identifier>remap.vimode_turnon_escape</identifier>
      <not>VI</not>
      <config_not>notsave.complete_vimode</config_not>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::VK_CONFIG_FORCE_ON_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Escape to turn off Vi Mode</name>
      <appendix>(+ turn off Modifier Lock)</appendix>
      <identifier>option.vimode_turnoff_escape</identifier>
      <config_only>notsave.complete_vimode</config_only>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Return to Command_L+Control_L</name>
      <appendix>(+ When you type Return only, toggle Vi Mode)</appendix>
      <identifier>remap.vimode_toggle_return</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::RETURN, KeyCode::CONTROL_L, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Fn to Fn</name>
      <appendix>(+ When you type Fn only, toggle Vi Mode)</appendix>
      <identifier>remap.vimode_toggle_fn2fn</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::FN, KeyCode::FN, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Option+V to toggle Vi Mode</name>
      <identifier>option.vimode_toggle_optionV</identifier>
      <autogen>__KeyToKey__ KeyCode::V, VK_OPTION, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Option+V to turn on Vi Mode</name>
      <identifier>option.vimode_turnon_optionV</identifier>
      <autogen>__KeyToKey__ KeyCode::V, VK_OPTION, KeyCode::VK_CONFIG_FORCE_ON_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Disable Shift_L</name>
      <appendix>(+ When you type Shift_L only, toggle Vi Mode)</appendix>
      <identifier>remap.vimode_toggle_drop_shiftL</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, KeyCode::VK_NONE, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
    </item>
  </item>

  <item>
    <name>Simultaneous Vi Mode</name>
    <item>
      <name>What's Simultaneous Vi Mode?</name>
      <appendix>Push S and D keys simultaneously and keep them pressing.</appendix>
      <appendix>Then you can use Vi style navigation by HJKL.</appendix>
      <appendix>- HJKL to Left/Down/Up/Right</appendix>
      <identifier vk_config="true">notsave.simultaneouskeypresses_vimode</identifier>
      <autogen>__ShowStatusMessage__ Vi Mode</autogen>
      <autogen>__KeyToKey__ {{VI_H}}, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ {{VI_J}}, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ {{VI_K}}, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ {{VI_L}}, KeyCode::CURSOR_RIGHT</autogen>
      <block>
        <config_only>option.pointing_relative_to_scroll_vi_mode</config_only>
        <autogen>__PointingRelativeToScroll__ PointingButton::NONE</autogen>
      </block>
      <block>
        <config_only>option.simultaneouskeypresses_vimode_f_to_fn</config_only>
        <autogen>__KeyToKey__ KeyCode::F, KeyCode::FN</autogen>
      </block>
      <block>
        <config_only>option.simultaneouskeypresses_vimode_g_to_option</config_only>
        <autogen>__KeyToKey__ KeyCode::G, KeyCode::OPTION_L</autogen>
      </block>
      <block>
        <config_only>option.simultaneouskeypresses_vimode_commadot_to_optionleftright</config_only>
        <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::CURSOR_LEFT,  ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::DOT,   KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
      </block>
      <block>
        <config_only>option.simultaneouskeypresses_vimode_brackets_to_optionleftright</config_only>
        <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT,  KeyCode::CURSOR_LEFT,  ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
      </block>
      <block>
        <config_only>option.simultaneouskeypresses_vimode_commandLR_to_optionleftright</config_only>
        <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CURSOR_LEFT,  ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
      </block>
    </item>
    <item>
      <name>Simultaneous Key Presses [S+D] turns on "Simultaneous Vi Mode"</name>
      <identifier>remap.simultaneouskeypresses_vimode_sd</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::S, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_simultaneouskeypresses_vimode</autogen>
    </item>
    <item>
      <name>____ Options ____________________________________________________________</name>
    </item>
    <item>
      <name>Change F to FN</name>
      <appendix>(= F+HJKL to Home/PageDown/PageUp/End)</appendix>
      <identifier>option.simultaneouskeypresses_vimode_f_to_fn</identifier>
    </item>
    <item>
      <name>Scroll with mouse movement while</name>
      <identifier>option.pointing_relative_to_scroll_vi_mode</identifier>
    </item>
    <item>
      <name>Change G to Option_L</name>
      <appendix>(= G+HL to backward-word/forward-word)</appendix>
      <identifier>option.simultaneouskeypresses_vimode_g_to_option</identifier>
    </item>
    <item>
      <name>Change ,. to backward-word/forward-word</name>
      <identifier>option.simultaneouskeypresses_vimode_commadot_to_optionleftright</identifier>
    </item>
    <item>
      <name>Change [] to backward-word/forward-word</name>
      <identifier>option.simultaneouskeypresses_vimode_brackets_to_optionleftright</identifier>
    </item>
    <item>
      <name>Change Command_L/Command_R to backward-word/forward-word</name>
      <identifier>option.simultaneouskeypresses_vimode_commandLR_to_optionleftright</identifier>
    </item>
  </item>
  <!-- Author: aristidesfl@gmail.com -->
  <item>
    <name>Home Row Arrow and Modifier Mode</name>
    <item>
      <name>What's "Home Row Arrow and Modifier Mode"?</name>
      <appendix>Single Key Press Space turns on "Home Row Arrow and Modifier Mode"</appendix>
      <appendix>Then you can use JKIL as Left/Down/Up/Right.</appendix>
      <identifier vk_config="true">notsave.homerow_mode</identifier>
      <autogen>__ShowStatusMessage__ Home Row Arrow and Modifier Mode</autogen>

      <block>
        <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::EXTRA3, KeyCode::TAB, ModifierFlag::SHIFT_L</autogen>
        <config_only>option.homerow_mode_u_o_to_delete_space_tab</config_only>
      </block>

      <block>
        <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::EXTRA4, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::RETURN, KeyCode::CURSOR_UP</autogen>
        <config_only>option.homerow_mode_u_o_to_delete_space_newline</config_only>
      </block>

      <block>
        <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::EXTRA5, KeyCode::SPACE, KeyCode::CURSOR_LEFT</autogen>
        <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::EXTRA5, KeyCode::FORWARD_DELETE</autogen>
        <config_only>option.homerow_mode_u_o_to_delete_space</config_only>
      </block>

      <block>
        <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::O, ModifierFlag::OPTION_L, KeyCode::VK_MODIFIER_EXTRA3, KeyCode::TAB</autogen>
        <config_only>option.homerow_mode_u_o_to_delete_space_tab</config_only>
      </block>

      <block>
        <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::O, ModifierFlag::COMMAND_L, KeyCode::VK_MODIFIER_EXTRA4, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L, KeyCode::RETURN</autogen>
        <config_only>option.homerow_mode_u_o_to_delete_space_newline</config_only>
      </block>

      <block>
        <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::U, KeyCode::VK_MODIFIER_EXTRA5, KeyCode::DELETE</autogen>
        <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::O, KeyCode::VK_MODIFIER_EXTRA5, KeyCode::SPACE</autogen>
        <config_only>option.homerow_mode_u_o_to_delete_space</config_only>
      </block>

      <autogen>__KeyToKey__ KeyCode::J, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::K, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::I, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>

      <block>
        <config_only>option.homerow_mode_return</config_only>
        <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::RETURN</autogen>
      </block>

      <block>
        <config_only>option.homerow_mode_g_to_duplicate</config_only>
        <autogen>__KeyOverlaidModifier__ KeyCode::G, KeyCode::VK_LAZY_COMMAND_L, ModifierFlag::OPTION_L | ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L, KeyCode::D, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
      </block>

      <block>
        <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::SLASH, ModifierFlag::COMMAND_L</autogen>
        <config_only>option.homerow_mode_slash_to_command_slash</config_only>
      </block>

      <block>
        <config_only>option.homerow_mode_w_to_cmd_w</config_only>
        <block>
          <only>TERMINAL</only>
          <config_only>remap.app_term_screen_k</config_only>
          <autogen>__KeyToKey__ KeyCode::W, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::K</autogen>
        </block>
        <block>
          <only>TERMINAL</only>
          <config_only>remap.app_term_screen_ky</config_only>
          <autogen>__KeyToKey__ KeyCode::W, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::K, KeyCode::Y</autogen>
        </block>
        <autogen>__KeyToKey__ KeyCode::W, KeyCode::W, ModifierFlag::COMMAND_L</autogen>
      </block>

      <block>
        <block>
          <only>TERMINAL</only>
          <config_only>remap.app_term_screen_a</config_only>
          <autogen>__KeyToKey__ KeyCode::R, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::A, ModifierFlag::SHIFT_L</autogen>
        </block>
        <autogen>__KeyToKey__ KeyCode::R, KeyCode::R, ModifierFlag::COMMAND_L</autogen>
        <config_only>option.homerow_mode_r_to_command_r</config_only>
      </block>

      <block>
        <config_only>option.homerow_mode_t_to_command_t</config_only>
        <block>
          <only>TERMINAL</only>
          <config_only>remap.app_term_screen_c</config_only>
          <autogen>__KeyToKey__ KeyCode::T, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::C</autogen>
        </block>
        <autogen>__KeyToKey__ KeyCode::T, KeyCode::T, ModifierFlag::COMMAND_L</autogen>
      </block>

      <block>
        <autogen>__KeyToKey__ KeyCode::E, KeyCode::F, ModifierFlag::COMMAND_L</autogen>
        <config_only>option.homerow_mode_e_to_command_f</config_only>
      </block>
      <block>
        <autogen>__KeyToKey__ KeyCode::H, KeyCode::Z, ModifierFlag::COMMAND_L</autogen>
        <config_only>option.homerow_mode_h_to_undo</config_only>
      </block>

      <block>
        <autogen>__KeyToKey__ KeyCode::N, KeyCode::Z, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        <config_only>option.homerow_mode_n_to_redo</config_only>
      </block>

      <block>
        <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::BACKSLASH, ModifierFlag::COMMAND_L</autogen>
        <config_only>option.homerow_mode_backslash</config_only>
      </block>

      <block>
        <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::ESCAPE</autogen>
        <config_only>option.homerow_mode_quote_to_escape</config_only>
      </block>
      <block>
        <autogen>__KeyToKey__ KeyCode::Y, KeyCode::DELETE, ModifierFlag::COMMAND_L</autogen>
        <config_only>option.homerow_mode_y_to_command_delete</config_only>
      </block>

      <block>
        <config_not>remap.homerow_mode_space_no_repeat</config_not>
        <autogen>__KeyOverlaidModifier__ KeyCode::S, KeyCode::VK_LAZY_CONTROL_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        <config_only>option.homerow_mode_s_to_control</config_only>
      </block>

      <block>
        <config_not>remap.homerow_mode_space_no_repeat</config_not>
        <autogen>__KeyOverlaidModifier__ KeyCode::D, KeyCode::VK_LAZY_OPTION_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
        <config_only>option.homerow_mode_d_to_option</config_only>
      </block>

      <block>
        <config_not>remap.homerow_mode_space_no_repeat</config_not>
        <autogen>__KeyOverlaidModifier__ KeyCode::A, KeyCode::VK_LAZY_SHIFT_L, KeyCode::S, ModifierFlag::CONTROL_L</autogen>
        <config_only>option.homerow_mode_a_to_shift_select</config_only>
      </block>

      <block>
        <config_not>remap.homerow_mode_space_no_repeat</config_not>
        <config_only>option.homerow_mode_f_to_command</config_only>
        <autogen>__KeyOverlaidModifier__ KeyCode::F, KeyCode::VK_LAZY_COMMAND_L, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
      </block>
    </item>

    <item>
      <name>Single Key Press Space turns on "Home Row Arrow and Modifier Mode"</name>
      <identifier>remap.homerow_mode_space_no_repeat</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SPACE, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_homerow_mode, ModifierFlag::EXTRA1, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>[Option] ; to Return</name>
      <identifier>option.homerow_mode_return</identifier>
    </item>
    <item>
      <config_only>remap.homerow_mode_space_no_repeat</config_only>
      <name>[Option] A to Shift</name>
      <appendix>(+ When you press A only send Control+S)</appendix>
      <identifier>option.homerow_mode_a_to_shift_select</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::A, ModifierFlag::EXTRA1, KeyCode::VK_LAZY_SHIFT_L, ModifierFlag::EXTRA1, KeyCode::S, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <config_only>remap.homerow_mode_space_no_repeat</config_only>
      <name>[Option] S to Control</name>
      <appendix>(+ When you press S only send Command+X)</appendix>
      <identifier>option.homerow_mode_s_to_control</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::S, ModifierFlag::EXTRA1, KeyCode::VK_LAZY_CONTROL_L, ModifierFlag::EXTRA1, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <config_only>remap.homerow_mode_space_no_repeat</config_only>
      <name>[Option] D to Option</name>
      <appendix>(+ When you press D only send Command+C)</appendix>
      <identifier>option.homerow_mode_d_to_option</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::D, ModifierFlag::EXTRA1, KeyCode::VK_LAZY_OPTION_L, ModifierFlag::EXTRA1, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <config_only>remap.homerow_mode_space_no_repeat</config_only>
      <name>[Option] F to Command</name>
      <appendix>(+ When you press F only send Command+V)</appendix>
      <identifier>option.homerow_mode_f_to_command</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::F, ModifierFlag::EXTRA1, KeyCode::VK_LAZY_COMMAND_L, ModifierFlag::EXTRA1, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>[Option] G to Command+Option+Control+Shift</name>
      <appendix> + when you press G only send Control+Shift+D (Duplicate line in Texmate)</appendix>
      <identifier>option.homerow_mode_g_to_duplicate</identifier>
    </item>
    <item>
      <name>[Option] / to Command+/</name>
      <identifier>option.homerow_mode_slash_to_command_slash</identifier>
    </item>
    <item>
      <name>[Option] U/O to Backspace/Space</name>
      <appendix>+ when you keep U pressed and press O it sends Delete</appendix>
      <appendix>+ when you keep O pressed and press U it sends Spaceback(space+left)</appendix>
      <identifier>option.homerow_mode_u_o_to_delete_space</identifier>
    </item>
    <item>
      <name>[Option] Option+O to Tab</name>
      <appendix>+ when you keep O pressed and press U it sends Shift+Tab</appendix>
      <identifier>option.homerow_mode_u_o_to_delete_space_tab</identifier>
    </item>
    <item>
      <name>[Option] Command+O to New Empty Line</name>
      <appendix>+ when you keep O pressed and press U it send Empty line above</appendix>
      <identifier>option.homerow_mode_u_o_to_delete_space_newline</identifier>
    </item>
    <item>
      <name>[Option] W to Command+W (Close Window) </name>
      <identifier>option.homerow_mode_w_to_cmd_w</identifier>
    </item>
    <item>
      <name>[Option] R to Command+R</name>
      <identifier>option.homerow_mode_r_to_command_r</identifier>
    </item>
    <item>
      <name>[Option] T to Command+T</name>
      <identifier>option.homerow_mode_t_to_command_t</identifier>
    </item>
    <item>
      <name>[Option] E to Command+F</name>
      <identifier>option.homerow_mode_e_to_command_f</identifier>
    </item>
    <item>
      <name>[Option] H to Cmd+Z</name>
      <identifier>option.homerow_mode_h_to_undo</identifier>
    </item>
    <item>
      <name>[Option] N to Cmd+Shift+Z</name>
      <identifier>option.homerow_mode_n_to_redo</identifier>
    </item>
    <item>
      <name>[Option] Backslash to Command+Backslash</name>
      <identifier>option.homerow_mode_backslash</identifier>
    </item>
    <item>
      <name>[Option] Quote(') to Esc</name>
      <identifier>option.homerow_mode_quote_to_escape</identifier>
    </item>
    <item>
      <name>[Option] Y to Command + Delete</name>
      <identifier>option.homerow_mode_y_to_command_delete</identifier>
    </item>
  </item>

  <item>
    <name>Simultaneous Key Presses</name>
    <item>
      <name>Two cursors to diagonal</name>
      <appendix>Simultaneous arrow keys presses to Home/End/PageUp/PageDown</appendix>
      <appendix>(Up+Left to Home)</appendix>
      <appendix>(Up+Right to PageUp)</appendix>
      <appendix>(Down+Left to End)</appendix>
      <appendix>(Down+Right to PageDown)</appendix>
      <identifier>remap.simcursor_to_diagonal_cursor</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::CURSOR_UP, KeyCode::CURSOR_LEFT, KeyCode::HOME</autogen>
      <autogen>__SimultaneousKeyPresses__ KeyCode::CURSOR_UP, KeyCode::CURSOR_RIGHT, KeyCode::PAGEUP</autogen>
      <autogen>__SimultaneousKeyPresses__ KeyCode::CURSOR_DOWN, KeyCode::CURSOR_LEFT, KeyCode::END</autogen>
      <autogen>__SimultaneousKeyPresses__ KeyCode::CURSOR_DOWN, KeyCode::CURSOR_RIGHT, KeyCode::PAGEDOWN</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [F+HJKL] to Left/Down/Up/Right</name>
      <appendix>(F+H to Left)</appendix>
      <appendix>(F+J to Down)</appendix>
      <appendix>(F+K to Up)</appendix>
      <appendix>(F+L to Right)</appendix>
      <identifier>remap.simultaneouskeypresses_vimode_f</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::F, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::F, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::F, KeyCode::CURSOR_UP</autogen>
      <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::F, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>5, 6, 7 for Escape and Delete</name>
      <item>
        <name>5+6 for Escape</name>
        <identifier>remap.key5_plus_key6_for_esc</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_5, KeyCode::KEY_6, KeyCode::ESCAPE</autogen>
      </item>
      <item>
        <name>6+7 for Escape</name>
        <identifier>remap.key6_plus_key7_for_esc</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_6, KeyCode::KEY_7, KeyCode::ESCAPE</autogen>
      </item>
      <item>
        <name>6+7 for Delete</name>
        <identifier>remap.key6_plus_key7_for_delete</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_6, KeyCode::KEY_7, KeyCode::DELETE</autogen>
      </item>
      <item>
        <name>5+7 for Delete</name>
        <identifier>remap.key5_plus_key7_for_delete</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_5, KeyCode::KEY_7, KeyCode::DELETE</autogen>
      </item>
      <item>
        <name>5+7 for Forward Delete</name>
        <identifier>remap.key5_plus_key7_for_forward_delete</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_5, KeyCode::KEY_7, KeyCode::FORWARD_DELETE</autogen>
      </item>
    </item>

    <item>
      <name>H, J, K for Return, Delete, Tab </name>
      <item>
        <name>H+J for Delete</name>
        <identifier>remap.h_plus_j_for_delete</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::J, KeyCode::DELETE</autogen>
      </item>

      <item>
        <name>J+K for Return</name>
        <identifier>remap.j_plus_k_for_return</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::K, KeyCode::RETURN</autogen>
      </item>

      <item>
        <name>H+K for Tab</name>
        <identifier>remap.h_plus_k_for_tab</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::K, KeyCode::TAB</autogen>
      </item>
    </item>

    <item>
      <name>Simultaneous Key Presses [F+J] to Return</name>
      <identifier>remap.simultaneouskeypresses_fj_to_return</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::J, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [F+J] to Command+Space(invoke Launchbar,Quicksilver,etc)</name>
      <identifier>remap.simultaneouskeypresses_fj_to_command_space</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::J, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [X+C] to Escape</name>
      <identifier>remap.simultaneouskeypresses_xc2escape</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::X, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [Z+X] to LeftClick</name>
      <identifier>remap.simultaneouskeypresses_zx2leftclick</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::Z, PointingButton::LEFT</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [M+N] to F13</name>
      <identifier>remap.simultaneouskeypresses_mn2f13</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::N, KeyCode::M, KeyCode::F13</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [F+N] to Fn_Lock</name>
      <identifier>remap.simultaneouskeypresses_fn_to_fnlock</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::N, KeyCode::VK_LOCK_FN</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [V+I] to toggle Complete Vi Mode</name>
      <identifier>remap.simultaneouskeypresses_vi_to_vimode</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::I, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [Q+P] to M</name>
      <identifier>remap.simultaneouskeypresses_pq2m</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::P, KeyCode::Q, KeyCode::M</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [K+L] to Control_L+F4 (= Move focus to the active (or next) window)</name>
      <appendix>(+ Shift+[K+L] to EXPOSE_ALL)</appendix>
      <appendix>(+ Control+[K+L] to F8)</appendix>
      <identifier>remap.simultaneouskeypresses_kl2controlLf4</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::L, VK_SHIFT,   KeyCode::EXPOSE_ALL</autogen>
      <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::L, VK_CONTROL, KeyCode::F8</autogen>
      <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::L,             KeyCode::F4, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [K+L] to PC Application Key</name>
      <appendix>(We can change the key once again)</appendix>
      <identifier>remap.simultaneouskeypresses_kl2pc_application</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::L, KeyCode::PC_APPLICATION, SimultaneousKeyPresses::Option::RAW</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [Shift_R+Up Arrow] to PC Application Key</name>
      <appendix>(We can change the key once again)</appendix>
      <identifier>remap.simultaneouskeypresses_shiftRuparrow2pc_application</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::CURSOR_UP, KeyCode::SHIFT_R, KeyCode::PC_APPLICATION, SimultaneousKeyPresses::Option::RAW</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [Up-Arrow+Down-Arrow] to PC Application Key</name>
      <appendix>(We can change the key once again)</appendix>
      <identifier>remap.simultaneouskeypresses_UpDown2pc_application</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::CURSOR_UP, KeyCode::CURSOR_DOWN, KeyCode::PC_APPLICATION, SimultaneousKeyPresses::Option::RAW</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [K+L] to Return</name>
      <appendix>(We can change the key once again)</appendix>
      <identifier>remap.simultaneouskeypresses_kl2return</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::L, KeyCode::RETURN, SimultaneousKeyPresses::Option::RAW</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [S+D] to Esc</name>
      <identifier>remap.simultaneouskeypresses_sd_to_esc</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::D, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [Shift_L+Shift_R] to Capslock</name>
      <identifier>remap.simultaneouskeypresses_ss_to_capslock</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::SHIFT_L, KeyCode::SHIFT_R, KeyCode::CAPSLOCK</autogen>
    </item>
    <item>
      <name>Simultaneous Key Presses [Command_L+Command_R] to Return</name>
      <appendix>(We can change the key once again)</appendix>
      <identifier>remap.simultaneouskeypresses_commandLcommandR2return</identifier>
      <autogen>__SimultaneousKeyPresses__ KeyCode::COMMAND_L, KeyCode::COMMAND_R, KeyCode::RETURN, SimultaneousKeyPresses::Option::RAW</autogen>
    </item>
  </item>

  <item>
    <name>ThumbSense</name>
    <item>
      <name>What's ThumbSense</name>
      <appendix>ThumbSense changes key while touching a finger in TrackPad.</appendix>
      <appendix></appendix>
      <appendix>- F/J to LeftClick</appendix>
      <appendix>- D/K to RightClick</appendix>
      <appendix>- S/L to "CursorMove to ScrollWheel"</appendix>
      <appendix></appendix>
      <appendix>- G/H to History Back/Forward (Command+[/Command+])</appendix>
      <appendix>- W to Close Window (Command+W)</appendix>
      <identifier>notsave.thumbsense</identifier>
      <autogen>__ShowStatusMessage__ ThumbSense</autogen>
      <!-- ============================================================ -->
      <!-- PointingButton -->
      <autogen>__KeyToPointingButton__ KeyCode::F,     PointingButton::LEFT</autogen>
      <autogen>__KeyToPointingButton__ KeyCode::J,     PointingButton::LEFT</autogen>
      <block>
        <config_only>option.thumbsense_space2leftclick</config_only>
        <autogen>__KeyToPointingButton__ KeyCode::SPACE, PointingButton::LEFT</autogen>
      </block>

      <autogen>__KeyToPointingButton__ KeyCode::D,     PointingButton::RIGHT</autogen>
      <autogen>__KeyToPointingButton__ KeyCode::K,     PointingButton::RIGHT</autogen>

      <!-- ============================================================ -->
      <!-- Scroll Mode -->
      <!--
          We want to keep the scroll mode while pressing S key even if ThumbSense is turned off as follows.

          (1) Turn ThumbSense on.
          (2) Press S
          (3) move pointer (=> scroll)
          (4) Turn ThumbSense off.
          (5) Turn ThumbSense on.
          (6) move pointer (=> scroll)
          (7) Release S

          So, we use ModifierFlag::EXTRA1 instead of KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_*.
          Because KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_* will be canceled when we turn ThumbSense off.
        -->
      <autogen>__KeyToKey__ KeyCode::S, KeyCode::VK_MODIFIER_EXTRA1</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::VK_MODIFIER_EXTRA1</autogen>
      <autogen>__PointingRelativeToScroll__ PointingButton::NONE, ModifierFlag::EXTRA1</autogen>

      <!-- ============================================================ -->
      <!-- no E definition -->
      <!-- no T definition -->

      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::BRACKET_LEFT,  ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L</autogen>

      <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::W, ModifierFlag::COMMAND_L</autogen>

      <!-- no I definition -->
      <!-- no O definition -->
      <!-- no M definition -->
    </item>
    <item>
      <name>How to use</name>
      <appendix>Note: You need a multi-touch device to use ThumbSense.</appendix>
      <appendix>(MacBook / Magic Mouse / Magic Trackpad)</appendix>
      <appendix></appendix>
      <appendix>(1) Launch multi-touch extension from "Misc &amp; Uninstall" tab.</appendix>
      <appendix>(2) Click the icon in Dock to open preferences window.</appendix>
      <appendix>(3) Enter "notsave.thumbsense" to Target setting.</appendix>
    </item>
    <item>
      <name>[Option] Use Space as LeftClick in ThumbSense</name>
      <identifier>option.thumbsense_space2leftclick</identifier>
    </item>

    <item><name>____________________________________________________________</name></item>

    <item>
      <name>Enhanced Copy&amp;Paste</name>
      <appendix>You can do copy&amp;paste easily when you use mouse.</appendix>
      <appendix>(Set "notsave.enhanced_copyandpaste" to Target setting in multi-touch extension)</appendix>
      <appendix></appendix>
      <appendix>X to Cut (Command+X)</appendix>
      <appendix>C to Copy (Command+C)</appendix>
      <appendix>V to Paste (Command+V)</appendix>
      <appendix>G to Find Next (Command+G)</appendix>
      <appendix>A to Select All (Command+A)</appendix>
      <appendix>W to Close Window (Command+W)</appendix>
      <appendix>E to Expose</appendix>
      <appendix>1 to LeftClick</appendix>
      <appendix>2 to MiddleClick</appendix>
      <appendix>3 to RightClick</appendix>
      <identifier>notsave.enhanced_copyandpaste</identifier>
      <autogen>__ShowStatusMessage__ Copy&amp;Paste</autogen>
      <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::G,                     KeyCode::G, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::A, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::W, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::EXPOSE_ALL</autogen>
      <autogen>__KeyToPointingButton__ KeyCode::KEY_1, ModifierFlag::NONE, PointingButton::LEFT</autogen>
      <autogen>__KeyToPointingButton__ KeyCode::KEY_2, ModifierFlag::NONE, PointingButton::MIDDLE</autogen>
      <autogen>__KeyToPointingButton__ KeyCode::KEY_3, ModifierFlag::NONE, PointingButton::RIGHT</autogen>
    </item>
  </item>

  <item>
    <name>For Mission Control, Dashboard</name>
    <item>
      <name>Disable Slow-Expose (Disable Shift+Expose, Shift+Dashboard, Shift+F8,...,Shift+F12)</name>
      <identifier>option.drop_slowexpose</identifier>
      <autogen>__DropKeyAfterRemap__ KeyCode::EXPOSE_ALL, VK_SHIFT</autogen>
      <autogen>__DropKeyAfterRemap__ KeyCode::DASHBOARD,  VK_SHIFT</autogen>
      <autogen>__DropKeyAfterRemap__ KeyCode::F8,         VK_SHIFT</autogen>
      <autogen>__DropKeyAfterRemap__ KeyCode::F9,         VK_SHIFT</autogen>
      <autogen>__DropKeyAfterRemap__ KeyCode::F10,        VK_SHIFT</autogen>
      <autogen>__DropKeyAfterRemap__ KeyCode::F11,        VK_SHIFT</autogen>
      <autogen>__DropKeyAfterRemap__ KeyCode::F12,        VK_SHIFT</autogen>
    </item>
    <item>
      <name>Holding "E" Key to Mission Control (Expose)</name>
      <identifier>remap.holding_e_to_expose</identifier>
      <autogen>__HoldingKeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::E, KeyCode::VK_NONE, KeyCode::EXPOSE_ALL, Option::NOREPEAT</autogen>
    </item>
    <item>
      <name>Holding "D" Key to Dashboard</name>
      <identifier>remap.holding_d_to_dashboard</identifier>
      <autogen>__HoldingKeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::D, KeyCode::VK_NONE, KeyCode::DASHBOARD, Option::NOREPEAT</autogen>
    </item>
    <item>
      <name>Holding Shift+"E" Key to Mission Control (Expose)</name>
      <identifier>remap.holding_shift_e_to_expose</identifier>
      <autogen>__HoldingKeyToKey__ KeyCode::E, VK_SHIFT | ModifierFlag::NONE, KeyCode::E, VK_SHIFT, KeyCode::VK_NONE, KeyCode::EXPOSE_ALL, Option::NOREPEAT</autogen>
    </item>
    <item>
      <name>Holding Shift+"D" Key to Dashboard</name>
      <identifier>remap.holding_shift_d_to_dashboard</identifier>
      <autogen>__HoldingKeyToKey__ KeyCode::D, VK_SHIFT | ModifierFlag::NONE, KeyCode::D, VK_SHIFT, KeyCode::VK_NONE, KeyCode::DASHBOARD, Option::NOREPEAT</autogen>
    </item>
    <item>
      <name>Control+Scroll (Left/Right) to Move a space</name>
      <appendix>(Change Control+Left Scroll to Control+Left Arrow)</appendix>
      <appendix>(Change Control+Right Scroll to Control+Right Arrow)</appendix>
      <identifier>remap.controlscroll_to_controlarrow</identifier>
      <autogen>__ScrollWheelToKey__ ScrollWheel::LEFT,  VK_CONTROL | ModifierFlag::NONE,
        KeyCode::CURSOR_LEFT,  VK_CONTROL</autogen>
      <autogen>__ScrollWheelToKey__ ScrollWheel::RIGHT, VK_CONTROL | ModifierFlag::NONE,
        KeyCode::CURSOR_RIGHT, VK_CONTROL</autogen>
    </item>
    <item>
      <name>Expose Mode</name>
      <item>
        <name>What's Expose Mode?</name>
        <appendix>This makes it easy to use Expose.</appendix>
        <appendix>You can do Expose by an alphabet key instead of F8,F9,..,F12 keys.</appendix>
        <appendix></appendix>
        <appendix>- S to Spaces (F8)</appendix>
        <appendix>- E to Expose</appendix>
        <appendix>- D to Desktop</appendix>
        <appendix>- A to Application windows</appendix>
        <appendix>- B to Dashboard</appendix>
        <appendix>- F to Move focus to active or next window (Control+F4)</appendix>
        <identifier vk_config="true">notsave.expose_mode</identifier>
        <autogen>__ShowStatusMessage__ Expose Mode</autogen>
        <autogen>__KeyToKey__ KeyCode::S, KeyCode::F8</autogen>
        <autogen>__KeyToKey__ KeyCode::E, KeyCode::EXPOSE_ALL</autogen>
        <autogen>__KeyToKey__ KeyCode::D, KeyCode::EXPOSE_ALL, ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::EXPOSE_ALL, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::DASHBOARD</autogen>

        <block>
          <config_only>option.expose_mode_f_to_optiontab</config_only>
          <autogen>__KeyToKey__ KeyCode::F, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
        </block>
        <block>
          <config_not>option.expose_mode_f_to_optiontab</config_not>
          <autogen>__KeyToKey__ KeyCode::F, KeyCode::F4, ModifierFlag::CONTROL_L</autogen>
        </block>
      </item>
      <item>
        <name>Simultaneous Key Presses [K+L] to toggle Expose Mode</name>
        <identifier>remap.simultaneouskeypresses_expose_kl</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::L, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_expose_mode</autogen>
      </item>
      <item>
        <name>[Option] Change "F" key behavior to "Option+Tab"</name>
        <appendix>(Changing the shortcut of "Move focus" to "Option+Tab" from "Control+F4" is</appendix>
        <appendix>a well workaround for a problem that Emacs.app grabs Control+F4 from system.)</appendix>
        <identifier>option.expose_mode_f_to_optiontab</identifier>
      </item>
    </item>
    <item>
      <name>Cmd+Tab Mode</name>
      <item>
        <name>What's Cmd+Tab Mode?</name>
        <appendix>This makes it easy to use Command+Tab.</appendix>
        <appendix></appendix>
        <appendix>- Return: decide an application.</appendix>
        <appendix>- Escape: cancel.</appendix>
        <appendix>- Tab: Switch application__cycle forward.</appendix>
        <appendix>- Shift: Switch application__cycle backward.</appendix>
        <appendix>- Arrow keys: move a selection.</appendix>
        <identifier vk_config="true">notsave.cmdtab_mode</identifier>
        <autogen>__ShowStatusMessage__ Cmd+Tab</autogen>
        <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::RETURN, KeyCode::VK_LOCK_COMMAND_L_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_cmdtab_mode</autogen>
        <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::ESCAPE, KeyCode::VK_LOCK_COMMAND_L_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_cmdtab_mode</autogen>
        <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::TAB</autogen>
        <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::TAB, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::TAB, ModifierFlag::SHIFT_R</autogen>
        <block>
          <config_only>remap.cmdtab_mode_controlM</config_only>
          <autogen>__KeyToKey__ KeyCode::M, VK_CONTROL, KeyCode::RETURN, KeyCode::VK_LOCK_COMMAND_L_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_cmdtab_mode</autogen>
        </block>
        <block>
          <config_only>remap.cmdtab_mode_control_bracket_left</config_only>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::ESCAPE, KeyCode::VK_LOCK_COMMAND_L_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_cmdtab_mode</autogen>
        </block>
        <block>
          <config_only>remap.cmdtab_mode_hjkl</config_only>
          <autogen>__KeyToKey__ KeyCode::H, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::J, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::K, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>
        </block>
        <block>
          <config_only>remap.cmdtab_mode_jkil</config_only>
          <autogen>__KeyToKey__ KeyCode::J, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::K, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::I, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>
        </block>
      </item>
      <item>
        <name>Simultaneous Key Presses [Tab+Q] to toggle Cmd+Tab</name>
        <identifier>remap.simultaneouskeypresses_cmdtab_tabq</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::TAB, KeyCode::Q, KeyCode::VK_CONFIG_FORCE_ON_notsave_cmdtab_mode, KeyCode::VK_LOCK_COMMAND_L_FORCE_ON, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>[Option] Control+M to Return</name>
        <identifier>remap.cmdtab_mode_controlM</identifier>
      </item>
      <item>
        <name>[Option] Control+[ to Escape</name>
        <identifier>remap.cmdtab_mode_control_bracket_left</identifier>
      </item>
      <item>
        <name>[Option] HJKL to Arrow Keys</name>
        <identifier>remap.cmdtab_mode_hjkl</identifier>
      </item>
      <item>
        <name>[Option] JKIL to Arrow Keys</name>
        <identifier>remap.cmdtab_mode_jkil</identifier>
      </item>
    </item>
    <item>
      <name>For Spaces</name>
      <item>
        <name>Holding "S" Key to Spaces (F8)</name>
        <identifier>remap.holding_s_to_spaces</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::S, KeyCode::VK_NONE, KeyCode::F8, Option::NOREPEAT</autogen>
      </item>
      <item>
        <name>Holding Shift+"S" Key to Spaces (F8)</name>
        <identifier>remap.holding_shift_s_to_spaces</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::S, VK_SHIFT | ModifierFlag::NONE, KeyCode::S, VK_SHIFT, KeyCode::VK_NONE, KeyCode::F8, Option::NOREPEAT</autogen>
      </item>
      <item>
        <name>Holding "1234 QWER ASDF ZXCV" to switch a space (4x4)</name>
        <appendix>To switch a space, Hold "1234"</appendix>
        <appendix>To switch a space, Hold "QWER"</appendix>
        <appendix>To switch a space, Hold "ASDF"</appendix>
        <appendix>To switch a space, Hold "ZXCV"</appendix>
        <appendix></appendix>
        <appendix>*** Change the configuration of Spaces to use this setting. ***</appendix>
        <appendix>(1) Open "Spaces Preferences".</appendix>
        <appendix>(2) Change "To switch directly to a space" configuration to</appendix>
        <appendix>    "Command+Control+Shift+Number Keys".</appendix>
        <identifier>remap.spaces_special_holding_1234qwerasdfzxcv</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_1, ModifierFlag::NONE, KeyCode::KEY_1, KeyCode::VK_NONE, KeyCode::KEY_1, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_2, ModifierFlag::NONE, KeyCode::KEY_2, KeyCode::VK_NONE, KeyCode::KEY_2, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_3, ModifierFlag::NONE, KeyCode::KEY_3, KeyCode::VK_NONE, KeyCode::KEY_3, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_4, ModifierFlag::NONE, KeyCode::KEY_4, KeyCode::VK_NONE, KeyCode::KEY_4, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::Q,     ModifierFlag::NONE, KeyCode::Q,     KeyCode::VK_NONE, KeyCode::KEY_5, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::W,     ModifierFlag::NONE, KeyCode::W,     KeyCode::VK_NONE, KeyCode::KEY_6, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::E,     ModifierFlag::NONE, KeyCode::E,     KeyCode::VK_NONE, KeyCode::KEY_7, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::R,     ModifierFlag::NONE, KeyCode::R,     KeyCode::VK_NONE, KeyCode::KEY_8, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::A,     ModifierFlag::NONE, KeyCode::A,     KeyCode::VK_NONE, KeyCode::KEY_9, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::S,     ModifierFlag::NONE, KeyCode::S,     KeyCode::VK_NONE, KeyCode::KEY_0, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::D,     ModifierFlag::NONE, KeyCode::D,     KeyCode::VK_NONE, KeyCode::KEY_1, VK_MOD_CCOS_L, Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::F,     ModifierFlag::NONE, KeyCode::F,     KeyCode::VK_NONE, KeyCode::KEY_2, VK_MOD_CCOS_L, Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::Z,     ModifierFlag::NONE, KeyCode::Z,     KeyCode::VK_NONE, KeyCode::KEY_3, VK_MOD_CCOS_L, Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::X,     ModifierFlag::NONE, KeyCode::X,     KeyCode::VK_NONE, KeyCode::KEY_4, VK_MOD_CCOS_L, Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::C,     ModifierFlag::NONE, KeyCode::C,     KeyCode::VK_NONE, KeyCode::KEY_5, VK_MOD_CCOS_L, Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::V,     ModifierFlag::NONE, KeyCode::V,     KeyCode::VK_NONE, KeyCode::KEY_6, VK_MOD_CCOS_L, Option::NOREPEAT</autogen>
      </item>

      <item>
        <name>Holding "1234 QWER ASDF ZXCV" to switch a space (4x4)</name>
        <appendix>To switch a space, Hold "1234"</appendix>
        <appendix>To switch a space, Hold "QWER"</appendix>
        <appendix>To switch a space, Hold "ASDF"</appendix>
        <appendix>To switch a space, Hold "ZXCV"</appendix>
        <appendix></appendix>
        <appendix>(+ 1234567890 to !@#$%^&amp;*() / Shift+1234567890 to 1234567890)</appendix>
        <appendix></appendix>
        <appendix>*** Change the configuration of Spaces to use this setting. ***</appendix>
        <appendix>(1) Open "Spaces Preferences".</appendix>
        <appendix>(2) Change "To switch directly to a space" configuration to</appendix>
        <appendix>    "Command+Control+Shift+Number Keys".</appendix>
        <identifier>remap.spaces_special_holding_1234qwerasdfzxcv_swap_number_and_symbol</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_1, ModifierFlag::NONE, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::KEY_1, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_2, ModifierFlag::NONE, KeyCode::KEY_2, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::KEY_2, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_3, ModifierFlag::NONE, KeyCode::KEY_3, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::KEY_3, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::KEY_4, ModifierFlag::NONE, KeyCode::KEY_4, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::KEY_4, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::Q,     ModifierFlag::NONE, KeyCode::Q,                            KeyCode::VK_NONE, KeyCode::KEY_5, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::W,     ModifierFlag::NONE, KeyCode::W,                            KeyCode::VK_NONE, KeyCode::KEY_6, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::E,     ModifierFlag::NONE, KeyCode::E,                            KeyCode::VK_NONE, KeyCode::KEY_7, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::R,     ModifierFlag::NONE, KeyCode::R,                            KeyCode::VK_NONE, KeyCode::KEY_8, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::A,     ModifierFlag::NONE, KeyCode::A,                            KeyCode::VK_NONE, KeyCode::KEY_9, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::S,     ModifierFlag::NONE, KeyCode::S,                            KeyCode::VK_NONE, KeyCode::KEY_0, VK_MOD_CCS_L,  Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::D,     ModifierFlag::NONE, KeyCode::D,                            KeyCode::VK_NONE, KeyCode::KEY_1, VK_MOD_CCOS_L, Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::F,     ModifierFlag::NONE, KeyCode::F,                            KeyCode::VK_NONE, KeyCode::KEY_2, VK_MOD_CCOS_L, Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::Z,     ModifierFlag::NONE, KeyCode::Z,                            KeyCode::VK_NONE, KeyCode::KEY_3, VK_MOD_CCOS_L, Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::X,     ModifierFlag::NONE, KeyCode::X,                            KeyCode::VK_NONE, KeyCode::KEY_4, VK_MOD_CCOS_L, Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::C,     ModifierFlag::NONE, KeyCode::C,                            KeyCode::VK_NONE, KeyCode::KEY_5, VK_MOD_CCOS_L, Option::NOREPEAT</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::V,     ModifierFlag::NONE, KeyCode::V,                            KeyCode::VK_NONE, KeyCode::KEY_6, VK_MOD_CCOS_L, Option::NOREPEAT</autogen>
        <!-- KEY_1 - KEY_4 is already defined in above. -->
        <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::NONE, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::NONE, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::NONE, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::NONE, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::NONE, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_1, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_4, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_5, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_6, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_7, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_8, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_9, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_0, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0</autogen>
      </item>

      <item>
        <name>Use Command_R+[ASD FGH JKL] for Spaces</name>
        <appendix>(Command+Control+Option+Shift+[123 456 789])</appendix>
        <identifier>remap.spaces_special</identifier>
        <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
      </item>
      <item>
        <name>Use Command_R+[123 QWE ASD] for Spaces (3x3)</name>
        <appendix>(Command+Control+Option+Shift+[123 456 789])</appendix>
        <identifier>remap.spaces_special_123qweasd</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::Q,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::W,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::E,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::A,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::S,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::D,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
      </item>
      <item>
        <name>Use Command_R+[123 QWE ASD] for Spaces (4x4)</name>
        <appendix>(Cmd+Ctrl+Shift+[123 567 90], Cmd+Ctrl+Option+Shift[1])</appendix>
        <identifier>remap.spaces_special_123qweasd_4x4</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::Q,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::W,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::E,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::A,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::S,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_0, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::D,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
      </item>
      <item>
        <name>Use Command_R+[QWE ASD ZXC] for Spaces (3x3)</name>
        <appendix>(Command+Control+Option+Shift+[123 456 789])</appendix>
        <identifier>remap.spaces_special_qweasdzxc</identifier>
        <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
      </item>
      <item>
        <name>Use Command_R+[QWE ASD ZXC] for Spaces (3x3)</name>
        <appendix>(Command+Control+Option+[123 456 789])</appendix>
        <identifier>remap.spaces_special_qweasdzxc_without_shift</identifier>
        <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCO_L</autogen>
        <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCO_L</autogen>
        <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCO_L</autogen>
        <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCO_L</autogen>
        <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCO_L</autogen>
        <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCO_L</autogen>
        <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCO_L</autogen>
        <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCO_L</autogen>
        <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCO_L</autogen>
      </item>
      <item>
        <name>Use Fn+[123456789] for Spaces</name>
        <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
        <identifier>remap.spaces_special_fn</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
      </item>
      <item>
        <name>Use FN+[WER SDF XCV] for Spaces (3x3)</name>
        <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
        <identifier>remap.spaces_special_fn_wersdfxcv</identifier>
        <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
      </item>
      <item>
        <name>Use Fn+[1234 QWER ASDF ZXCV] for Spaces (4x4)</name>
        <appendix>(Cmd+Ctrl+Shift+[1234 5678 90], Cmd+Ctrl+Option+Shift[12 3456])</appendix>
        <identifier>remap.spaces_special_1234qwerasdfzxcv</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::Q,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::W,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::E,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::R,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::A,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::S,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_0, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::D,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::F,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::Z,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::X,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::C,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::V,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
      </item>
      <item>
        <name>Use Fn+[7890 UIOP JKL; M,./] for Spaces (4x4)</name>
        <appendix>(Cmd+Ctrl+Shift+[1234 5678 90], Cmd+Ctrl+Option+Shift[12 3456])</appendix>
        <identifier>remap.spaces_special_7890uiopjklm</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_7,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_8,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_9,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_0,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::U,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::I,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::O,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::P,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_0, VK_MOD_CCS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::M,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::COMMA,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::DOT,       ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::SLASH,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
      </item>
      <item>
        <name>Use Option_R+[WER SDF XCV] for Spaces (3x3)</name>
        <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
        <identifier>remap.spaces_special_optionr_wersdfxcv</identifier>
        <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
      </item>
      <item>
        <name>Use KeyPad numbers for Spaces(3x3)</name>
        <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
        <identifier>remap.spaces_special_keypad</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_1, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_2, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_3, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_4, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_5, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_6, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_7, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_8, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_9, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
      </item>
      <item>
        <name>Use Command+KeyPad numbers for Spaces(3x3)</name>
        <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
        <identifier>option.keypad2spaces_modifier_command</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_1, VK_COMMAND, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_2, VK_COMMAND, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_3, VK_COMMAND, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_4, VK_COMMAND, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_5, VK_COMMAND, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_6, VK_COMMAND, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_7, VK_COMMAND, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_8, VK_COMMAND, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_9, VK_COMMAND, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
      </item>
      <item>
        <name>Use Control+KeyPad numbers for Spaces(3x3)</name>
        <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
        <identifier>option.keypad2spaces_modifier_control</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_1, VK_CONTROL, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_2, VK_CONTROL, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_3, VK_CONTROL, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_4, VK_CONTROL, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_5, VK_CONTROL, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_6, VK_CONTROL, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_7, VK_CONTROL, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_8, VK_CONTROL, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_9, VK_CONTROL, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
      </item>
      <item>
        <name>Use Option+KeyPad numbers for Spaces(3x3)</name>
        <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
        <identifier>option.keypad2spaces_modifier_option</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_1, VK_OPTION, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_2, VK_OPTION, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_3, VK_OPTION, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_4, VK_OPTION, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_5, VK_OPTION, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_6, VK_OPTION, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_7, VK_OPTION, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_8, VK_OPTION, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_9, VK_OPTION, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
      </item>
    </item>
  </item>

  <item>
    <name>For Applications</name>
    <item>
      <name>Enable at only VMware Fusion, Parallels Desktop, VirtualBox</name>
      <item>
        <name>Eject to Forward Delete</name>
        <appendix>(Fn+Eject to Eject)</appendix>
        <appendix>*** We recommend you to use "NoEjectDelay" together when you change eject key.</appendix>
        <appendix>*** &#8594; http://pqrs.org/macosx/keyremap4macbook/extra.html</appendix>
        <identifier>remap.app_vm_eject2forwarddelete</identifier>
        <only>VIRTUALMACHINE</only>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::EJECT, ModifierFlag::FN, ConsumerKeyCode::EJECT</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, KeyCode::FORWARD_DELETE</autogen>
      </item>
      <item>
        <name>Change Enter to Control_L</name>
        <identifier>remap.app_vm_enter2controlL</identifier>
        <only>VIRTUALMACHINE</only>
        <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::CONTROL_L</autogen>
      </item>
      <item>
        <name>Change Fn+Return to Insert</name>
        <identifier>remap.app_vm_fnReturn2insert</identifier>
        <only>VIRTUALMACHINE</only>
        <autogen>__KeyToKey__ KeyCode::RETURN, ModifierFlag::FN, KeyCode::HELP</autogen>
      </item>
      <item>
        <name>Change Option_R to Control_R</name>
        <identifier>remap.app_vm_optionR2controlR</identifier>
        <only>VIRTUALMACHINE</only>
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CONTROL_R</autogen>
      </item>
      <item>
        <name>Change Ctrl+Q to Alt+F4</name>
        <only>VIRTUALMACHINE</only>
        <identifier>remap.Ctrl_Q_to_Alt_F4</identifier>
        <autogen>__KeyToKey__ KeyCode::Q, VK_CONTROL, KeyCode::F4, ModifierFlag::OPTION_L</autogen>
      </item>
      <item>
        <name>Change Command+Space to Option+Backquote(`)</name>
        <identifier>remap.app_vm_commandspace2optionbackquote</identifier>
        <only>VIRTUALMACHINE</only>
        <autogen>__KeyToKey__ KeyCode::SPACE, VK_COMMAND, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L</autogen>
      </item>
      <item>
        <name>Change Command+Space to Option_L+Shift_L</name>
        <identifier>remap.app_vm_commandspace2optionLshiftL</identifier>
        <only>VIRTUALMACHINE</only>
        <autogen>__KeyToKey__ KeyCode::SPACE, VK_COMMAND, KeyCode::SHIFT_L, ModifierFlag::OPTION_L</autogen>
      </item>
      <item>
        <name>Change Command_L Keys</name>
        <appendix>(To support Emacs on Fusion. This allows controlling individual key translations)</appendix>
        <item>
          <name>Change Command_L to Option_L</name>
          <identifier>remap.app_vm_commandL2optionL</identifier>
          <appendix>(Option_L is translated to Alt_L by Fusion)</appendix>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Change Command_L+A to Control+A</name>
          <identifier>remap.app_vm_commandLA</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::COMMAND_L, KeyCode::A, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change Command_L+C to Control+C</name>
          <identifier>remap.app_vm_commandLC</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::COMMAND_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change Command_L+F to Control+F</name>
          <identifier>remap.app_vm_commandLF</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::COMMAND_L, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change Command_L+P to Control+P</name>
          <identifier>remap.app_vm_commandLP</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::COMMAND_L, KeyCode::P, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change Command_L+V to Control+V</name>
          <identifier>remap.app_vm_commandLV</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::COMMAND_L, KeyCode::V, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change Command_L+X to Control+X</name>
          <identifier>remap.app_vm_commandLX</identifier>
          <appendix>(Leave it unchecked for using left Meta+X in Emacs on Fusion)</appendix>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::COMMAND_L, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change Command_L+Z to Control+Z</name>
          <identifier>remap.app_vm_commandLZ</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::COMMAND_L, KeyCode::Z, ModifierFlag::CONTROL_L</autogen>
        </item>
      </item>
      <item>
        <name>Change Command_R Keys</name>
        <appendix>(To support Emacs on Fusion. This allows controlling individual key translations)</appendix>
        <item>
          <name>Change Command_R to Option_R</name>
          <appendix>(This allows controlling individual key translations)</appendix>
          <identifier>remap.app_vm_commandR2optionR</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
        </item>
        <item>
          <name>Change Command_R+A to Control+A</name>
          <identifier>remap.app_vm_commandRA</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::COMMAND_R, KeyCode::A, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change Command_R+C to Control+C</name>
          <identifier>remap.app_vm_commandRC</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::COMMAND_R, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change Command_R+F to Control+F</name>
          <identifier>remap.app_vm_commandRF</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::COMMAND_R, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change Command_R+P to Control+P</name>
          <identifier>remap.app_vm_commandRP</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::COMMAND_R, KeyCode::P, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change Command_R+V to Control+V</name>
          <identifier>remap.app_vm_commandRV</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::COMMAND_R, KeyCode::V, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change Command_R+X to Control+X</name>
          <appendix>(Leave it unchecked for using right Meta+X in Emacs on Fusion)</appendix>
          <identifier>remap.app_vm_commandRX</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::COMMAND_R, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change Command_R+Z to Control+Z </name>
          <identifier>remap.app_vm_commandRZ</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::COMMAND_R, KeyCode::Z, ModifierFlag::CONTROL_L</autogen>
        </item>
      </item>
    </item>
    <item>
      <name>Enable at only Finder</name>
      <item>
        <name>Windows Explorer Navigation for Finder</name>
        <item>
          <name>Use Command+R as Rename</name>
          <appendix>(Change Command+R to Return)</appendix>
          <identifier>remap.app_finder_command_R_to_return</identifier>
          <only>FINDER</only>
          <autogen>__KeyToKey__ KeyCode::R, VK_COMMAND, KeyCode::RETURN</autogen>
        </item>
        <item><name>F2 key____________________________________________________________</name></item>
        <item>
          <name>Use Brightness Up to Rename (Use Tab to complete Rename)</name>
          <appendix>(Change Brightness Up to Return)</appendix>
          <identifier>remap.app_finder_brightness_up_to_return</identifier>
          <only>FINDER</only>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_UP, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Use F2 to Rename (Use Tab to complete Rename)</name>
          <appendix>(Change F2 to Return)</appendix>
          <identifier>remap.app_finder_f2_to_return</identifier>
          <only>FINDER</only>
          <autogen>__KeyToKey__ KeyCode::F2, KeyCode::RETURN</autogen>
        </item>
        <item><name>__________________________________________________________________</name></item>
        <item>
          <name>Use Forward Delete as Delete Files</name>
          <appendix>(Change Forward Delete to Command_L+Delete)</appendix>
          <identifier>remap.app_finder_forwarddelete2commandLdelete</identifier>
          <only>FINDER</only>
          <autogen>__KeyToKey__ FROMKEYCODE_FORWARD_DELETE, KeyCode::DELETE, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Return Key Opens a file</name>
          <appendix>(use F2 to rename but caution not to use Return when done typing name or file opens)</appendix>
          <only>FINDER</only>
          <identifier>remap.KPReturn_to_Ctrl_O</identifier>
          <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::O, ModifierFlag::COMMAND_L, Option::NOREPEAT</autogen>
        </item>
        <item>
          <name>Use Return as Open</name>
          <appendix>(+ Use Fn+Return as Rename)</appendix>
          <appendix>(Change Return to Command+O)</appendix>
          <appendix>(Change Fn+Return to Return)</appendix>
          <identifier>remap.app_finder_return2commandO</identifier>
          <only>FINDER</only>
          <autogen>__KeyToKey__ KeyCode::RETURN, ModifierFlag::FN, KeyCode::RETURN</autogen>
          <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::O, ModifierFlag::COMMAND_L, Option::NOREPEAT</autogen>
        </item>
        <item>
          <name>Use Enter (Fn+Return) as Open</name>
          <appendix>(Change Enter to Command+O)</appendix>
          <identifier>remap.app_finder_enter2commandO</identifier>
          <only>FINDER</only>
          <autogen>__KeyToKey__ KeyCode::ENTER,
            KeyCode::O, ModifierFlag::COMMAND_L, Option::NOREPEAT</autogen>
          <autogen>__KeyToKey__ KeyCode::RETURN, ModifierFlag::FN,
            KeyCode::O, ModifierFlag::COMMAND_L, Option::NOREPEAT</autogen>
        </item>
        <item>
          <name>Use Quote (') to go UP a directory (' to Ctrl+Up)</name>
          <only>FINDER</only>
          <identifier>remap.Quote_to_Ctrl_UpArrow</identifier>
          <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::CURSOR_UP, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Use Semicolon to go Back in history (; to Ctrl+[)</name>
          <only>FINDER</only>
          <identifier>remap.Semicolon_to_Ctrl_LeftBrckt</identifier>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Use { to select next file (i.e. up arrow key) ({ to Up-Arrow)</name>
          <only>FINDER</only>
          <identifier>remap.CurlyLBracket_to_UpArrow</identifier>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_SHIFT, KeyCode::CURSOR_UP</autogen>
        </item>
        <item>
          <name>Use } to select previous file (i.e. down arrow key) (} to Down-Arrow)</name>
          <only>FINDER</only>
          <identifier>remap.CurlyRBracket_to_DArrow</identifier>
          <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, VK_SHIFT, KeyCode::CURSOR_DOWN</autogen>
        </item>
        <item>
          <name>Use [ to collapse folder (i.e. left key) ([ to Left-Arrow)</name>
          <only>FINDER</only>
          <identifier>remap.LBracket_to_LArrow</identifier>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::CURSOR_LEFT</autogen>
        </item>
        <item>
          <name>Use ] to expand folder (i.e. left key) (] to Left-Arrow)</name>
          <only>FINDER</only>
          <identifier>remap.RBracket_to_RArrow</identifier>
          <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name></name>
          <identifier vk_config="true">notsave.app_finder_return_accepts_rename</identifier>
          <only>FINDER</only>
          <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::RETURN, KeyCode::VK_CONFIG_TOGGLE_notsave_app_finder_return_accepts_rename</autogen>
        </item>
        <item>
          <name>Cmd+N to new folder | Cmd+Shift+N to new window</name>
          <identifier>remap.app_finder_switch_new_folder_window</identifier>
          <only>FINDER</only>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::N, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_R, KeyCode::N, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::COMMAND_R | ModifierFlag::SHIFT_R, KeyCode::N, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::COMMAND_R | ModifierFlag::SHIFT_L, KeyCode::N, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::COMMAND_L, KeyCode::N, ModifierFlag::COMMAND_L |  ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_TOGGLE_notsave_app_finder_return_accepts_rename</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::COMMAND_R, KeyCode::N, ModifierFlag::COMMAND_R |  ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_TOGGLE_notsave_app_finder_return_accepts_rename</autogen>
        </item>
        <item>
          <name>Cmd+R to Rename | Return to Open</name>
          <appendix>+ if you press Return while renaming (via Cmd+R) it accepts new name</appendix>
          <appendix>  instead of opening.</appendix>
          <identifier>remap.app_finder_switch_open_rename</identifier>
          <only>FINDER</only>
          <autogen>__KeyToKey__ KeyCode::R, VK_COMMAND, KeyCode::RETURN, KeyCode::VK_CONFIG_TOGGLE_notsave_app_finder_return_accepts_rename</autogen>
          <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::O, ModifierFlag::COMMAND_L, Option::NOREPEAT</autogen>
          <autogen>__KeyToKey__ KeyCode::N,  ModifierFlag::COMMAND_L |  ModifierFlag::SHIFT_L, KeyCode::N, ModifierFlag::COMMAND_L |  ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_TOGGLE_notsave_app_finder_return_accepts_rename</autogen>
          <autogen>__KeyToKey__ KeyCode::N,  ModifierFlag::COMMAND_L |  ModifierFlag::SHIFT_R, KeyCode::N, ModifierFlag::COMMAND_L |  ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_TOGGLE_notsave_app_finder_return_accepts_rename</autogen>
          <autogen>__KeyToKey__ KeyCode::N,  ModifierFlag::COMMAND_R |  ModifierFlag::SHIFT_L, KeyCode::N, ModifierFlag::COMMAND_L |  ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_TOGGLE_notsave_app_finder_return_accepts_rename</autogen>
          <autogen>__KeyToKey__ KeyCode::N,  ModifierFlag::COMMAND_R |  ModifierFlag::SHIFT_R, KeyCode::N, ModifierFlag::COMMAND_L |  ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_TOGGLE_notsave_app_finder_return_accepts_rename</autogen>
        </item>
      </item>
      <item>
        <name>Disable Command+D (Duplicate)</name>
        <identifier>remap.app_finder_disable_command_d</identifier>
        <only>FINDER</only>
        <autogen>__KeyToKey__ KeyCode::D, VK_COMMAND | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
      </item>
      <item>
        <name>Disable Command+L (Make Alias)</name>
        <identifier>remap.app_finder_disable_command_l</identifier>
        <only>FINDER</only>
        <autogen>__KeyToKey__ KeyCode::L, VK_COMMAND | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
      </item>
      <item>
        <name>Disable Command+T (Add To Sidebar)</name>
        <identifier>remap.app_finder_disable_command_t</identifier>
        <only>FINDER</only>
        <autogen>__KeyToKey__ KeyCode::T, VK_COMMAND | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
      </item>
    </item>
    <item>
      <name>Enable at only Terminal</name>
      <item>
        <name>Swap Command_L with Control_L</name>
        <identifier>remap.app_term_commandL2controlL</identifier>
        <only>TERMINAL</only>
        <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
      </item>
      <item>
        <name>Change Command_L to Option_L</name>
        <identifier>remap.app_term_commandL2optionL</identifier>
        <only>TERMINAL</only>
        <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
      </item>
      <item>
        <name>Change Command_L to Option_L</name>
        <appendix>(Pass-Through Tab and Backquote)</appendix>
        <appendix></appendix>
        <appendix>*** We recommend using following settings together. ***</appendix>
        <appendix>General &gt; Don't restore modifiers in the mouse event</appendix>
        <appendix>Change Shift_L &gt; Shift_L to Lazy_Shift_L</appendix>
        <appendix>Change Shift_R &gt; Shift_R to Lazy_Shift_R</appendix>
        <identifier>remap.app_term_commandL2optionL_except_tab</identifier>
        <only>TERMINAL</only>
        <autogen>__KeyToKey__ KeyCode::TAB, ModifierFlag::OPTION_L, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
      </item>
      <item>
        <name>Change Delete Key</name>
        <item>
          <name>Delete to Control_L+H</name>
          <identifier>remap.app_term_delete2controlLh</identifier>
          <only>TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::H, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Control+Delete to Control_L+H</name>
          <identifier>remap.app_term_controldelete2controlLh</identifier>
          <only>TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::DELETE, VK_CONTROL, KeyCode::H, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Option+Delete to Control_L+H</name>
          <identifier>remap.app_term_optiondelete2controlLh</identifier>
          <only>TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::DELETE, VK_OPTION, KeyCode::H, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Shift+Delete to Control_L+H</name>
          <identifier>remap.app_term_shiftdelete2controlLh</identifier>
          <only>TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::DELETE, VK_SHIFT, KeyCode::H, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Control+Delete to Delete</name>
          <identifier>remap.app_term_controldelete2delete</identifier>
          <only>TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::DELETE, VK_CONTROL, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Option+Delete to Delete</name>
          <identifier>remap.app_term_optiondelete2delete</identifier>
          <only>TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::DELETE, VK_OPTION, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Shift+Delete to Delete</name>
          <identifier>remap.app_term_shiftdelete2delete</identifier>
          <only>TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::DELETE, VK_SHIFT, KeyCode::DELETE</autogen>
        </item>
      </item>
      <item>
        <name>Change Option_L to Command_L</name>
        <identifier>remap.app_term_optionL2commandL</identifier>
        <only>TERMINAL</only>
        <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
      </item>
      <item>
        <name>Change Option_R to Control_R</name>
        <identifier>remap.app_term_optionR2controlR</identifier>
        <only>TERMINAL</only>
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CONTROL_R</autogen>
      </item>
      <item>
        <name>Change Slash(/) Key</name>
        <item>
          <name>Control+Shift+Slash(/) to Delete</name>
          <identifier>remap.app_term_controlshiftslash2delete</identifier>
          <only>TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::SLASH, VK_CONTROL | VK_SHIFT, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Control+Slash(/) to Control+Underscore(_)</name>
          <identifier>remap.app_term_controlslash2controlshiftunderscore</identifier>
          <only>TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::CONTROL_L, KeyCode::MINUS, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
        </item>
      </item>
      <item>
        <name>Change Functional Keys to F1...F12</name>
        <appendix>(For keyboards of F10 == Volume Mute)</appendix>
        <identifier>remap.app_term_functional2function</identifier>
        <only>TERMINAL</only>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_DOWN, KeyCode::F1</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_UP, KeyCode::F2</autogen>
        <autogen>__KeyToKey__ KeyCode::BRIGHTNESS_DOWN, KeyCode::F1</autogen>
        <autogen>__KeyToKey__ KeyCode::BRIGHTNESS_UP, KeyCode::F2</autogen>
        <autogen>__KeyToKey__ KeyCode::EXPOSE_ALL, KeyCode::F3</autogen>
        <autogen>__KeyToKey__ KeyCode::DASHBOARD, KeyCode::F4</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_LOW, KeyCode::F5</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::KEYBOARDLIGHT_HIGH, KeyCode::F6</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PREV, KeyCode::F7</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PLAY, KeyCode::F8</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_NEXT, KeyCode::F9</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, KeyCode::F10</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN, KeyCode::F11</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP, KeyCode::F12</autogen>
      </item>
      <item>
        <name>Change Option+y to F18</name>
        <only>TERMINAL</only>
        <identifier>remap.app_term_optionY2f18</identifier>
        <autogen>__KeyToKey__ KeyCode::Y, VK_OPTION, KeyCode::F18</autogen>
      </item>
      <item>
        <name>Switch next and prev tab in terminal with shift and arrows (like Gnome term)</name>
        <appendix>(Shift+left|right to Command+{|})</appendix>
        <identifier>remap.app_term_shift_arrow_terminal_tab_change</identifier>
        <only>TERMINAL</only>
        <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, VK_SHIFT | ModifierFlag::NONE, KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L | VK_SHIFT</autogen>
        <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT,  VK_SHIFT | ModifierFlag::NONE, KeyCode::BRACKET_LEFT,  ModifierFlag::COMMAND_L | VK_SHIFT</autogen>
      </item>
      <item>
        <name>Enable meta keys movement (command/option + left,right,delete,backspace)</name>
        <appendix>- cmd+left to ctrl+a (move to beginning of line)</appendix>
        <appendix>- cmd+right to ctrl+e (move to end of line)</appendix>
        <appendix>- option+left to esc+b (move backward one word)</appendix>
        <appendix>- option+right to esc+f (move forward one word)</appendix>
        <appendix>- cmd+backspace to ctrl+u (delete to the beginning of the line)</appendix>
        <appendix>- cmd+delete to ctrl+k (delete to the end of the line)</appendix>
        <appendix>- option+backspace to ctrl+w (delete to the beginning of the word)</appendix>
        <appendix>- option+delete to esc+d (delete to the end of the word)</appendix>
        <appendix>- delete to ctrl+d (delete forwards)</appendix>
        <identifier>remap.app_term_meta_movement</identifier>
        <only>TERMINAL</only>
        <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::A, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L, KeyCode::E, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L, KeyCode::ESCAPE, KeyCode::B</autogen>
        <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::ESCAPE, KeyCode::F</autogen>
        <autogen>__KeyToKey__ KeyCode::DELETE, ModifierFlag::COMMAND_L, KeyCode::U, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::FORWARD_DELETE, ModifierFlag::COMMAND_L, KeyCode::K, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::DELETE, ModifierFlag::OPTION_L, KeyCode::W, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::FORWARD_DELETE, ModifierFlag::OPTION_L, KeyCode::ESCAPE, KeyCode::D</autogen>
        <autogen>__KeyToKey__ KeyCode::FORWARD_DELETE, KeyCode::D, ModifierFlag::CONTROL_L</autogen>
      </item>
      <item>
        <name>Extra settings</name>
        <item>
          <name>Change Control_L to Option_L in Terminal</name>
          <appendix>(Change Option_L+Tab to Command+Tab)</appendix>
          <appendix>(Change Option_L+Backquote to Command+Backquote)</appendix>
          <appendix>(Change Option_L+Arrow to Control+Arrow)</appendix>
          <appendix></appendix>
          <appendix>This setting is useful when you exchange Control+Tab and Command+Tab.</appendix>
          <appendix></appendix>
          <appendix>*** We recommend using following settings together. ***</appendix>
          <appendix>General &gt; Don't restore modifiers in the mouse event</appendix>
          <appendix>Change Shift_L &gt; Shift_L to Lazy_Shift_L</appendix>
          <appendix>Change Shift_R &gt; Shift_R to Lazy_Shift_R</appendix>
          <identifier>remap.app_term_controlL2optionL_except_tab</identifier>
          <only>TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::OPTION_L</autogen>

          <autogen>__KeyToKey__
            KeyCode::TAB,          ModifierFlag::OPTION_L,
            KeyCode::TAB,          ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__
            KeyCode::BACKQUOTE,    ModifierFlag::OPTION_L,
            KeyCode::BACKQUOTE,    ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__
            KeyCode::CURSOR_LEFT,  ModifierFlag::OPTION_L,
            KeyCode::CURSOR_LEFT,  ModifierFlag::CONTROL_L</autogen>
          <autogen>__KeyToKey__
            KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L,
            KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L</autogen>
          <autogen>__KeyToKey__
            KeyCode::CURSOR_UP,    ModifierFlag::OPTION_L,
            KeyCode::CURSOR_UP,    ModifierFlag::CONTROL_L</autogen>
          <autogen>__KeyToKey__
            KeyCode::CURSOR_DOWN,  ModifierFlag::OPTION_L,
            KeyCode::CURSOR_DOWN,  ModifierFlag::CONTROL_L</autogen>
        </item>
      </item>
    </item>
    <item>
      <name>Enable at only Adobe Softwares</name>
      <item>
        <name>Change Command+Tab to Control_L+Tab</name>
        <identifier>remap.app_adobe_commandTab2controlLTab</identifier>
        <only>ADOBE, PHOTOSHOP, ILLUSTRATOR</only>
        <autogen>__KeyToKey__ KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
      </item>
    </item>
    <item>
      <name>Enable at only Safari</name>
      <item>
        <name>Firefox-like hotkey (Control+PgUp/PgDown) to switch tabs in Safari</name>
        <identifier>remap.firefox_style_tab_switching_in_safari</identifier>
        <only>SAFARI</only>
        <autogen>__KeyToKey__ FROMKEYCODE_PAGEDOWN, VK_CONTROL | ModifierFlag::NONE,
          KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_PAGEUP,   VK_CONTROL | ModifierFlag::NONE,
          KeyCode::TAB, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
      </item>
    </item>
    <item>
      <name>Enable at only Firefox</name>
      <item>
        <name>Control+K to Command+K</name>
        <identifier>remap.app_firefox_controlK2commandK</identifier>
        <autogen>__KeyToKey__ KeyCode::K, VK_CONTROL, KeyCode::K, ModifierFlag::COMMAND_L</autogen>
        <only>FIREFOX</only>
      </item>
      <item>
        <name>Control+L to Command+L</name>
        <identifier>remap.app_firefox_controlL2commandL</identifier>
        <autogen>__KeyToKey__ KeyCode::L, VK_CONTROL, KeyCode::L, ModifierFlag::COMMAND_L</autogen>
        <only>FIREFOX</only>
      </item>
      <item>
        <name>Control+T to Command+T</name>
        <identifier>remap.app_firefox_controlT2commandT</identifier>
        <autogen>__KeyToKey__ KeyCode::T, VK_CONTROL, KeyCode::T, ModifierFlag::COMMAND_L</autogen>
        <only>FIREFOX</only>
      </item>
    </item>
    <item>
      <name>Enable at only Firefox/Thunderbird</name>
      <item>
        <name>Fix Home/End</name>
        <appendix>(Home/End move to beg/end of line, Ctl/Cmd+Home/End move to beg/end of page)</appendix>
        <identifier>remap.app_firefox_fix_home_end</identifier>
        <only>FIREFOX, THUNDERBIRD</only>
        <autogen>__KeyToKey__ FROMKEYCODE_HOME, VK_COMMAND, KeyCode::CURSOR_UP,   ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_HOME, VK_CONTROL, KeyCode::CURSOR_UP,   ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_END,  VK_COMMAND, KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_END,  VK_CONTROL, KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L</autogen>

        <autogen>__KeyToKey__ FROMKEYCODE_HOME, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_END, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>Change Control+R to Command+R</name>
        <identifier>remap.app_firefox_commandR2controlR</identifier>
        <only>FIREFOX, THUNDERBIRD</only>
        <autogen>__KeyToKey__ KeyCode::R, VK_CONTROL, KeyCode::R, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>Change Control+T to Command+T</name>
        <identifier>remap.app_firefox_commandT2controlT</identifier>
        <only>FIREFOX, THUNDERBIRD</only>
        <autogen>__KeyToKey__ KeyCode::T, VK_CONTROL, KeyCode::T, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>Change Control+W to Command+W</name>
        <identifier>remap.app_firefox_commandW2controlW</identifier>
        <only>FIREFOX, THUNDERBIRD</only>
        <autogen>__KeyToKey__ KeyCode::W, VK_CONTROL, KeyCode::W, ModifierFlag::COMMAND_L</autogen>
      </item>
    </item>
    <item>
      <name>Enable at only Excel</name>
      <item>
        <name>Emacs bindings for Excel</name>
        <identifier>remap.app_excel_emacs_bindings</identifier>
        <only>EXCEL</only>
        <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
        <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
        <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
        <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::HOME</autogen>
        <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::END</autogen>
        <autogen>__KeyToKey__ KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
        <autogen>__KeyToKey__ KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
        <autogen>__KeyToKey__ KeyCode::K, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L, KeyCode::FORWARD_DELETE</autogen>
        <autogen>__KeyToKey__ KeyCode::J, VK_CONTROL, KeyCode::RETURN, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
        <autogen>__KeyToKey__ KeyCode::RETURN, VK_COMMAND, KeyCode::RETURN, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L</autogen>
      </item>
      <item>
        <name>Windows-like operation</name>
        <item><name>F2 key to Edit a cell ____________________________________________</name></item>
        <item>
          <name>Change Brightness Up to Ctrl+U</name>
          <identifier>remap.app_excel_brightnessup_to_ctrlu</identifier>
          <only>EXCEL</only>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_UP, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::U, ModifierFlag::CONTROL_L</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::BRIGHTNESS_UP,                    ModifierFlag::NONE, KeyCode::U, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change F2 to Ctrl+U</name>
          <identifier>remap.app_excel_f2_to_ctrlu</identifier>
          <only>EXCEL</only>
          <autogen>__KeyToKey__ KeyCode::F2, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::U, ModifierFlag::CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F2,                    ModifierFlag::NONE, KeyCode::U, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item><name>F4 key to Repeat ________________________________________________-</name></item>
        <item>
          <name>Change Launchpad to Command+Y</name>
          <appendix>(+ Change Dashboard to Command+Y)</appendix>
          <identifier>remap.app_excel_launchpad_to_commandLt</identifier>
          <only>EXCEL</only>
          <autogen>__KeyToKey__ KeyCode::LAUNCHPAD, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::Y, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::LAUNCHPAD,                    ModifierFlag::NONE, KeyCode::Y, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::DASHBOARD, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::Y, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::DASHBOARD,                    ModifierFlag::NONE, KeyCode::Y, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Change F4 to Command+Y</name>
          <identifier>remap.app_excel_f4_to_commandLt</identifier>
          <only>EXCEL</only>
          <autogen>__KeyToKey__ KeyCode::F4, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::Y, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F4,                    ModifierFlag::NONE, KeyCode::Y, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item><name>Others____________________________________________________________</name></item>
        <item>
          <name>Control+Shift+Plus (Insert Row)</name>
          <appendix>(Change Control+Shift+Plus to Control+i)</appendix>
          <identifier>remap.app_excel_control_shift_plus</identifier>
          <only>EXCEL</only>
          <autogen>__KeyToKey__ KeyCode::EQUAL, VK_CONTROL | VK_SHIFT | ModifierFlag::NONE, KeyCode::I, VK_CONTROL</autogen>
        </item>
      </item>
    </item>
    <item>
      <name>Enable at only Entourage</name>
      <item>
        <name>Change PageUp/PageDown to Option+Up/Down</name>
        <identifier>remap.app_entourage_pageupdown_to_optionupdown</identifier>
        <only>ENTOURAGE</only>
        <autogen>__KeyToKey__ FROMKEYCODE_PAGEUP, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_PAGEDOWN, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L</autogen>
      </item>
    </item>
    <item>
      <name>Enable at only MacSOUP</name>
      <item>
        <name>Change Option_R to Enter</name>
        <identifier>remap.app_macsoup_optionR2enter</identifier>
        <only>MACSOUP</only>
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::ENTER</autogen>
      </item>
    </item>
    <item>
      <name>Enable at only Vienna</name>
      <item>
        <name>Change Option_R to Enter</name>
        <identifier>remap.app_vienna_optionR2enter</identifier>
        <only>VIENNA</only>
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::ENTER</autogen>
      </item>
    </item>
    <item>
      <name>Enable at only Gruml</name>
      <item>
        <name>Change Option_R to Return</name>
        <identifier>remap.app_gruml_optionR2return</identifier>
        <only>GRUML</only>
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::RETURN</autogen>
      </item>
    </item>
    <item>
      <name>Enable at only Launchbar</name>
      <item>
        <name>Change Semicolon(;) to Return</name>
        <identifier>remap.app_launchbar_semicolon_to_return</identifier>
        <only>LAUNCHBAR</only>
        <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::RETURN</autogen>
      </item>
      <item>
        <name>Change Right to Cmd+Right</name>
        <identifier>remap.app_launchbar_right_to_command_right</identifier>
        <only>LAUNCHBAR</only>
        <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>Change Cmd+D to Cmd+Shift+D</name>
        <identifier>remap.app_launchbar_cmd_d_to_cmd_shif_d</identifier>
        <only>LAUNCHBAR</only>
        <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::COMMAND_L, KeyCode::D, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::COMMAND_R, KeyCode::D, ModifierFlag::COMMAND_R | ModifierFlag::SHIFT_R</autogen>
      </item>
      <item>
        <name>Change Cmd+R to Cmd+Shift+R</name>
        <identifier>remap.app_launchbar_cmd_r_to_cmd_shif_r</identifier>
        <only>LAUNCHBAR</only>
        <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::COMMAND_L, KeyCode::R, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::COMMAND_R, KeyCode::R, ModifierFlag::COMMAND_R | ModifierFlag::SHIFT_R</autogen>
      </item>
      <item>
        <name>Change Cmd+N to Cmd+Shift+N</name>
        <identifier>remap.app_launchbar_cmd_n_to_cmd_shif_n</identifier>
        <only>LAUNCHBAR</only>
        <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::COMMAND_L, KeyCode::N, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::COMMAND_R, KeyCode::N, ModifierFlag::COMMAND_R | ModifierFlag::SHIFT_R</autogen>
      </item>
    </item>
    <item>
      <name>Enable at only Remote Desktop Connection Client</name>
      <item>
        <name>Command+Tab to Option+Tab</name>
        <appendix>(only in RDC)</appendix>
        <identifier>remap.app_rdc_commandTab2optionTab</identifier>
        <only>REMOTEDESKTOPCONNECTION</only>
        <autogen>__KeyToKey__ KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
      </item>
      <item>
        <name>Command+XCVSZWF to Ctrl+XCVSZWF</name>
        <appendix>(only in RDC)</appendix>
        <identifier>remap.app_rdc_commandXCVSZWF2controlXCVSZWF</identifier>
        <only>REMOTEDESKTOPCONNECTION</only>
        <autogen>__KeyToKey__ KeyCode::X, VK_COMMAND, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::C, VK_COMMAND, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::V, VK_COMMAND, KeyCode::V, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::S, VK_COMMAND, KeyCode::S, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::Z, VK_COMMAND, KeyCode::Z, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::Y, VK_COMMAND, KeyCode::Y, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::W, VK_COMMAND, KeyCode::W, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::F, VK_COMMAND, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
      </item>
      <item>
        <name>Command+SPACE to Ctrl+SPACE</name>
        <appendix>(only in RDC)</appendix>
        <identifier>remap.app_rdc_commandSpace2controlSpace</identifier>
        <only>REMOTEDESKTOPCONNECTION</only>
        <autogen>__KeyToKey__ KeyCode::SPACE, VK_COMMAND, KeyCode::SPACE, ModifierFlag::CONTROL_L</autogen>
      </item>
    </item>
    <item>
      <name>Enable at only World of Warcraft</name>
      <item>
        <name>Swap Command and Option for Alt Bindings</name>
        <appendix>Command_L to Option_L</appendix>
        <appendix>Option_L to Command_L</appendix>
        <identifier>remap.app_world_of_warcraft_option_command_swap</identifier>
        <block>
          <only>WORLD_OF_WARCRAFT</only>
          <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
        </block>
      </item>
    </item>
    <item>
      <name>Enable at only StarCraft II</name>
      <item>
        <name>Swap Space and Shift_L</name>
        <only>STARCRAFT2</only>
        <identifier>remap.app_starcraft2_swap_SPACE_SHIFT_L</identifier>
        <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::SHIFT_L</autogen>
      </item>
      <item>
        <name>Swap Command_L and Control_L</name>
        <only>STARCRAFT2</only>
        <identifier>remap.app_starcraft2_COMMAND_L_CONTROL_L</identifier>
        <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
      </item>
    </item>
    <item>
      <name>Enable at only Skype</name>
      <item>
        <name>Prevent accidental close of chat windows</name>
        <appendix>(Ignore Command+W and require Command+Shift+W to send Command+W)</appendix>
        <identifier>remap.app_skype_command_shift_w_to_close</identifier>
        <only>SKYPE</only>
        <autogen>__KeyToKey__ KeyCode::W, VK_COMMAND | VK_SHIFT, KeyCode::W, VK_COMMAND</autogen>
        <autogen>__KeyToKey__ KeyCode::W, VK_COMMAND | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
      </item>
      <item>
        <name>Hold Command+W to Close Conversation</name>
        <appendix>(You can adjust the threshold time of holding by</appendix>
        <appendix>"[Holding Key to Key] Holding Threshold" in Key Repeat tab.)</appendix>
        <only>SKYPE</only>
        <identifier>remap.app_skype_holdcommandW</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::W, VK_COMMAND | ModifierFlag::NONE, KeyCode::VK_NONE, KeyCode::W, VK_COMMAND, Option::NOREPEAT</autogen>
      </item>
    </item>
    <item>
      <name>Enable at only Dictionary</name>
      <item>
        <name>Do not let Dictionary.app quit on Command+W</name>
        <identifier>remap.app_dictionary_command_w_to_unfocus</identifier>
        <only>DICTIONARY</only>
        <autogen>__KeyToKey__ KeyCode::W, VK_COMMAND | ModifierFlag::NONE, KeyCode::TAB, VK_COMMAND, KeyCode::RETURN, Option::NOREPEAT</autogen>
      </item>
    </item>
    <item>
      <name>Enable at only TweetDeck</name>
      <item>
        <name>Emacs bindings for TweetDeck</name>
        <identifier>remap.app_tweetdeck_emacs_bindings</identifier>
        <only>TWEETDECK</only>
        <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
        <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
        <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
        <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::HOME</autogen>
        <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::END</autogen>
        <autogen>__KeyToKey__ KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
        <autogen>__KeyToKey__ KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
        <autogen>__KeyToKey__ KeyCode::K, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L, KeyCode::FORWARD_DELETE</autogen>
        <autogen>__KeyToKey__ KeyCode::J, VK_CONTROL, KeyCode::ENTER</autogen>
        <autogen>__KeyToKey__ KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
        <autogen>__KeyToKey__ KeyCode::Y, VK_CONTROL, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
      </item>
    </item>
    <item>
      <name>Quicksilver Mode</name>
      <item>
        <name>What's Quicksilver Mode?</name>
        <appendix>This mode is designed for Quicksilver.app.</appendix>
        <appendix>- Control+M to Return (&amp; exit mode)</appendix>
        <appendix>- Control+I to Tab</appendix>
        <appendix>- Control+[ to Escape (&amp; exit mode)</appendix>
        <appendix>- Escape to Escape (&amp; exit mode)</appendix>
        <appendix>- Return to Return (&amp; exit mode)</appendix>
        <appendix></appendix>
        <identifier vk_config="true">notsave.quicksilver_mode</identifier>
        <autogen>__ShowStatusMessage__ Quicksilver</autogen>
        <autogen>__KeyToKey__ KeyCode::M,            VK_CONTROL, KeyCode::RETURN, KeyCode::VK_CONFIG_FORCE_OFF_notsave_quicksilver_mode</autogen>
        <autogen>__KeyToKey__ KeyCode::I,            VK_CONTROL, KeyCode::TAB</autogen>
        <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_quicksilver_mode</autogen>
        <autogen>__KeyToKey__ KeyCode::ESCAPE,                   KeyCode::ESCAPE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_quicksilver_mode</autogen>
        <autogen>__KeyToKey__ KeyCode::RETURN,                   KeyCode::RETURN, KeyCode::VK_CONFIG_FORCE_OFF_notsave_quicksilver_mode</autogen>
        <block>
          <config_only>remap.doublecommand_to_quicksilver_mode</config_only>
          <autogen>__DoublePressModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_quicksilver_mode</autogen>
          <autogen>__DoublePressModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_CONFIG_FORCE_OFF_notsave_quicksilver_mode</autogen>
        </block>
        <block>
          <config_only>remap.doublecontrol_to_quicksilver_mode</config_only>
          <autogen>__DoublePressModifier__ KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_quicksilver_mode</autogen>
          <autogen>__DoublePressModifier__ KeyCode::CONTROL_R, KeyCode::CONTROL_R, KeyCode::VK_CONFIG_FORCE_OFF_notsave_quicksilver_mode</autogen>
        </block>
        <block>
          <config_only>remap.commandspace_to_quicksilver_mode</config_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, VK_COMMAND | ModifierFlag::NONE, KeyCode::SPACE, VK_COMMAND, KeyCode::VK_CONFIG_FORCE_OFF_notsave_quicksilver_mode</autogen>
        </block>
      </item>
      <item>
        <name>Double Command to Quicksilver Mode</name>
        <appendix>(It is useful to set the double press recognition threshold to 200ms.</appendix>
        <appendix>"[Double Press Modifier] Recognition Threshold" in "Key Repeat" tab.)</appendix>
        <identifier>remap.doublecommand_to_quicksilver_mode</identifier>
        <autogen>__DoublePressModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_CONFIG_FORCE_ON_notsave_quicksilver_mode</autogen>
        <autogen>__DoublePressModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_CONFIG_FORCE_ON_notsave_quicksilver_mode</autogen>
      </item>
      <item>
        <name>Double Control to Quicksilver Mode</name>
        <appendix>(It is useful to set the double press recognition threshold to 200ms.</appendix>
        <appendix>"[Double Press Modifier] Recognition Threshold" in "Key Repeat" tab.)</appendix>
        <identifier>remap.doublecontrol_to_quicksilver_mode</identifier>
        <autogen>__DoublePressModifier__ KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::VK_CONFIG_FORCE_ON_notsave_quicksilver_mode</autogen>
        <autogen>__DoublePressModifier__ KeyCode::CONTROL_R, KeyCode::CONTROL_R, KeyCode::VK_CONFIG_FORCE_ON_notsave_quicksilver_mode</autogen>
      </item>
      <item>
        <name>Command+Space to Quicksilver Mode</name>
        <identifier>remap.commandspace_to_quicksilver_mode</identifier>
        <autogen>__KeyToKey__ KeyCode::SPACE, VK_COMMAND | ModifierFlag::NONE, KeyCode::SPACE, VK_COMMAND, KeyCode::VK_CONFIG_FORCE_ON_notsave_quicksilver_mode</autogen>
      </item>
    </item>
  </item>

  <item>
    <name>Change Keyboard Layout</name>
    <item>
      <name>Use Colemak Keyboard Layout</name>
      <identifier>remap.qwerty2colemak</identifier>
      <!-- number -->
      <autogen>__KeyToKey__ KeyCode::M,         ModifierFlag::FN, KeyCode::KEYPAD_0</autogen>
      <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::FN, KeyCode::KEYPAD_1</autogen>
      <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::FN, KeyCode::KEYPAD_2</autogen>
      <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::FN, KeyCode::KEYPAD_3</autogen>
      <autogen>__KeyToKey__ KeyCode::U,         ModifierFlag::FN, KeyCode::KEYPAD_4</autogen>
      <autogen>__KeyToKey__ KeyCode::I,         ModifierFlag::FN, KeyCode::KEYPAD_5</autogen>
      <autogen>__KeyToKey__ KeyCode::O,         ModifierFlag::FN, KeyCode::KEYPAD_6</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7,     ModifierFlag::FN, KeyCode::KEYPAD_7</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8,     ModifierFlag::FN, KeyCode::KEYPAD_8</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9,     ModifierFlag::FN, KeyCode::KEYPAD_9</autogen>

      <!-- symbol -->
      <autogen>__KeyToKey__ KeyCode::KEY_6,     ModifierFlag::FN, KeyCode::KEYPAD_CLEAR</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH,     ModifierFlag::FN, KeyCode::KEYPAD_PLUS</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::FN, KeyCode::KEYPAD_MINUS</autogen>
      <autogen>__KeyToKey__ KeyCode::P,         ModifierFlag::FN, KeyCode::KEYPAD_MULTIPLY</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0,     ModifierFlag::FN, KeyCode::KEYPAD_SLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS,     ModifierFlag::FN, KeyCode::KEYPAD_EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT,       ModifierFlag::FN, KeyCode::KEYPAD_DOT</autogen>
      <autogen>__KeyToKey__ KeyCode::E, KeyCode::F</autogen>
      <autogen>__KeyToKey__ KeyCode::R, KeyCode::P</autogen>
      <autogen>__KeyToKey__ KeyCode::T, KeyCode::G</autogen>
      <autogen>__KeyToKey__ KeyCode::Y, KeyCode::J</autogen>
      <autogen>__KeyToKey__ KeyCode::U, KeyCode::L</autogen>
      <autogen>__KeyToKey__ KeyCode::I, KeyCode::U</autogen>
      <autogen>__KeyToKey__ KeyCode::O, KeyCode::Y</autogen>
      <autogen>__KeyToKey__ KeyCode::P, KeyCode::SEMICOLON</autogen>
      <autogen>__KeyToKey__ KeyCode::S, KeyCode::R</autogen>
      <autogen>__KeyToKey__ KeyCode::D, KeyCode::S</autogen>
      <autogen>__KeyToKey__ KeyCode::F, KeyCode::T</autogen>
      <autogen>__KeyToKey__ KeyCode::G, KeyCode::D</autogen>
      <autogen>__KeyToKey__ KeyCode::J, KeyCode::N</autogen>
      <autogen>__KeyToKey__ KeyCode::K, KeyCode::E</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::I</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::O</autogen>
      <autogen>__KeyToKey__ KeyCode::N, KeyCode::K</autogen>
    </item>
    <item>
      <name>Use QWERF Keyboard Layout</name>
      <identifier>remap.qwerty2qwerf</identifier>
      <!-- number -->
      <autogen>__KeyToKey__ KeyCode::M,         ModifierFlag::FN, KeyCode::KEYPAD_0</autogen>
      <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::FN, KeyCode::KEYPAD_1</autogen>
      <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::FN, KeyCode::KEYPAD_2</autogen>
      <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::FN, KeyCode::KEYPAD_3</autogen>
      <autogen>__KeyToKey__ KeyCode::U,         ModifierFlag::FN, KeyCode::KEYPAD_4</autogen>
      <autogen>__KeyToKey__ KeyCode::I,         ModifierFlag::FN, KeyCode::KEYPAD_5</autogen>
      <autogen>__KeyToKey__ KeyCode::O,         ModifierFlag::FN, KeyCode::KEYPAD_6</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7,     ModifierFlag::FN, KeyCode::KEYPAD_7</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8,     ModifierFlag::FN, KeyCode::KEYPAD_8</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9,     ModifierFlag::FN, KeyCode::KEYPAD_9</autogen>

      <!-- symbol -->
      <autogen>__KeyToKey__ KeyCode::KEY_6,     ModifierFlag::FN, KeyCode::KEYPAD_CLEAR</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH,     ModifierFlag::FN, KeyCode::KEYPAD_PLUS</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::FN, KeyCode::KEYPAD_MINUS</autogen>
      <autogen>__KeyToKey__ KeyCode::P,         ModifierFlag::FN, KeyCode::KEYPAD_MULTIPLY</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0,     ModifierFlag::FN, KeyCode::KEYPAD_SLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS,     ModifierFlag::FN, KeyCode::KEYPAD_EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT,       ModifierFlag::FN, KeyCode::KEYPAD_DOT</autogen>
      <autogen>__KeyToKey__ KeyCode::T, KeyCode::F</autogen>
      <autogen>__KeyToKey__ KeyCode::Y, KeyCode::J</autogen>
      <autogen>__KeyToKey__ KeyCode::U, KeyCode::Y</autogen>
      <autogen>__KeyToKey__ KeyCode::I, KeyCode::K</autogen>
      <autogen>__KeyToKey__ KeyCode::O, KeyCode::L</autogen>
      <autogen>__KeyToKey__ KeyCode::P, KeyCode::SEMICOLON</autogen>
      <autogen>__KeyToKey__ KeyCode::F, KeyCode::T</autogen>
      <autogen>__KeyToKey__ KeyCode::J, KeyCode::U</autogen>
      <autogen>__KeyToKey__ KeyCode::K, KeyCode::I</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::O</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::P</autogen>
    </item>
    <item>
      <name>Use Workman Keyboard Layout</name>
      <identifier>remap.qwerty2workman</identifier>
      <!-- number -->
      <autogen>__KeyToKey__ KeyCode::M,         ModifierFlag::FN, KeyCode::KEYPAD_0</autogen>
      <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::FN, KeyCode::KEYPAD_1</autogen>
      <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::FN, KeyCode::KEYPAD_2</autogen>
      <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::FN, KeyCode::KEYPAD_3</autogen>
      <autogen>__KeyToKey__ KeyCode::U,         ModifierFlag::FN, KeyCode::KEYPAD_4</autogen>
      <autogen>__KeyToKey__ KeyCode::I,         ModifierFlag::FN, KeyCode::KEYPAD_5</autogen>
      <autogen>__KeyToKey__ KeyCode::O,         ModifierFlag::FN, KeyCode::KEYPAD_6</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7,     ModifierFlag::FN, KeyCode::KEYPAD_7</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8,     ModifierFlag::FN, KeyCode::KEYPAD_8</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9,     ModifierFlag::FN, KeyCode::KEYPAD_9</autogen>

      <!-- symbol -->
      <autogen>__KeyToKey__ KeyCode::KEY_6,     ModifierFlag::FN, KeyCode::KEYPAD_CLEAR</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH,     ModifierFlag::FN, KeyCode::KEYPAD_PLUS</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::FN, KeyCode::KEYPAD_MINUS</autogen>
      <autogen>__KeyToKey__ KeyCode::P,         ModifierFlag::FN, KeyCode::KEYPAD_MULTIPLY</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0,     ModifierFlag::FN, KeyCode::KEYPAD_SLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS,     ModifierFlag::FN, KeyCode::KEYPAD_EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT,       ModifierFlag::FN, KeyCode::KEYPAD_DOT</autogen>
      <autogen>__KeyToKey__ KeyCode::W, KeyCode::D</autogen>
      <autogen>__KeyToKey__ KeyCode::E, KeyCode::R</autogen>
      <autogen>__KeyToKey__ KeyCode::R, KeyCode::W</autogen>
      <autogen>__KeyToKey__ KeyCode::T, KeyCode::B</autogen>
      <autogen>__KeyToKey__ KeyCode::Y, KeyCode::J</autogen>
      <autogen>__KeyToKey__ KeyCode::U, KeyCode::F</autogen>
      <autogen>__KeyToKey__ KeyCode::I, KeyCode::U</autogen>
      <autogen>__KeyToKey__ KeyCode::O, KeyCode::P</autogen>
      <autogen>__KeyToKey__ KeyCode::P, KeyCode::SEMICOLON</autogen>
      <autogen>__KeyToKey__ KeyCode::D, KeyCode::H</autogen>
      <autogen>__KeyToKey__ KeyCode::F, KeyCode::T</autogen>
      <autogen>__KeyToKey__ KeyCode::H, KeyCode::Y</autogen>
      <autogen>__KeyToKey__ KeyCode::J, KeyCode::N</autogen>
      <autogen>__KeyToKey__ KeyCode::K, KeyCode::E</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::O</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::I</autogen>
      <autogen>__KeyToKey__ KeyCode::C, KeyCode::M</autogen>
      <autogen>__KeyToKey__ KeyCode::V, KeyCode::C</autogen>
      <autogen>__KeyToKey__ KeyCode::B, KeyCode::V</autogen>
      <autogen>__KeyToKey__ KeyCode::N, KeyCode::K</autogen>
      <autogen>__KeyToKey__ KeyCode::M, KeyCode::L</autogen>
    </item>
    <item>
      <name>Use ABCDEF Keyboard Layout</name>
      <appendix>qwertyuiop &#8594; abcdefghij</appendix>
      <appendix>asdfghjkl &#8594; klmnopqrs</appendix>
      <appendix>zxcvbnm &#8594; tuvwxyz</appendix>
      <identifier>remap.qwerty2abcdef</identifier>
      <!-- number -->
      <autogen>__KeyToKey__ KeyCode::M,         ModifierFlag::FN, KeyCode::KEYPAD_0</autogen>
      <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::FN, KeyCode::KEYPAD_1</autogen>
      <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::FN, KeyCode::KEYPAD_2</autogen>
      <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::FN, KeyCode::KEYPAD_3</autogen>
      <autogen>__KeyToKey__ KeyCode::U,         ModifierFlag::FN, KeyCode::KEYPAD_4</autogen>
      <autogen>__KeyToKey__ KeyCode::I,         ModifierFlag::FN, KeyCode::KEYPAD_5</autogen>
      <autogen>__KeyToKey__ KeyCode::O,         ModifierFlag::FN, KeyCode::KEYPAD_6</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7,     ModifierFlag::FN, KeyCode::KEYPAD_7</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8,     ModifierFlag::FN, KeyCode::KEYPAD_8</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9,     ModifierFlag::FN, KeyCode::KEYPAD_9</autogen>

      <!-- symbol -->
      <autogen>__KeyToKey__ KeyCode::KEY_6,     ModifierFlag::FN, KeyCode::KEYPAD_CLEAR</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH,     ModifierFlag::FN, KeyCode::KEYPAD_PLUS</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::FN, KeyCode::KEYPAD_MINUS</autogen>
      <autogen>__KeyToKey__ KeyCode::P,         ModifierFlag::FN, KeyCode::KEYPAD_MULTIPLY</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0,     ModifierFlag::FN, KeyCode::KEYPAD_SLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS,     ModifierFlag::FN, KeyCode::KEYPAD_EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT,       ModifierFlag::FN, KeyCode::KEYPAD_DOT</autogen>
      <autogen>__KeyToKey__ KeyCode::Q, KeyCode::A</autogen>
      <autogen>__KeyToKey__ KeyCode::W, KeyCode::B</autogen>
      <autogen>__KeyToKey__ KeyCode::E, KeyCode::C</autogen>
      <autogen>__KeyToKey__ KeyCode::R, KeyCode::D</autogen>
      <autogen>__KeyToKey__ KeyCode::T, KeyCode::E</autogen>
      <autogen>__KeyToKey__ KeyCode::Y, KeyCode::F</autogen>
      <autogen>__KeyToKey__ KeyCode::U, KeyCode::G</autogen>
      <autogen>__KeyToKey__ KeyCode::I, KeyCode::H</autogen>
      <autogen>__KeyToKey__ KeyCode::O, KeyCode::I</autogen>
      <autogen>__KeyToKey__ KeyCode::P, KeyCode::J</autogen>

      <autogen>__KeyToKey__ KeyCode::A, KeyCode::K</autogen>
      <autogen>__KeyToKey__ KeyCode::S, KeyCode::L</autogen>
      <autogen>__KeyToKey__ KeyCode::D, KeyCode::M</autogen>
      <autogen>__KeyToKey__ KeyCode::F, KeyCode::N</autogen>
      <autogen>__KeyToKey__ KeyCode::G, KeyCode::O</autogen>
      <autogen>__KeyToKey__ KeyCode::H, KeyCode::P</autogen>
      <autogen>__KeyToKey__ KeyCode::J, KeyCode::Q</autogen>
      <autogen>__KeyToKey__ KeyCode::K, KeyCode::R</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::S</autogen>

      <autogen>__KeyToKey__ KeyCode::Z, KeyCode::T</autogen>
      <autogen>__KeyToKey__ KeyCode::X, KeyCode::U</autogen>
      <autogen>__KeyToKey__ KeyCode::C, KeyCode::V</autogen>
      <autogen>__KeyToKey__ KeyCode::V, KeyCode::W</autogen>
      <autogen>__KeyToKey__ KeyCode::B, KeyCode::X</autogen>
      <autogen>__KeyToKey__ KeyCode::N, KeyCode::Y</autogen>
      <autogen>__KeyToKey__ KeyCode::M, KeyCode::Z</autogen>
    </item>
    <item>
      <name>Use US Keyboard Layout</name>
      <identifier>remap.layout2us</identifier>
      <autogen>__SetKeyboardType__ KeyboardType::MACBOOK</autogen>
    </item>
  </item>

  <item>
    <name>For PC Users</name>
    <item>
      <name>Change PC Application Key</name>
      <item>
        <name>Application Key to CapsLock</name>
        <identifier>remap.pc_application2capslock</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::CAPSLOCK</autogen>
      </item>
      <item>
        <name>Application Key to Command_L</name>
        <identifier>remap.pc_application2commandL</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::COMMAND_L</autogen>
      </item>
      <item>
        <name>Application Key to Command_L</name>
        <appendix>(+ Application Key to Control_L in Terminal, Screen Sharing, MacVim,</appendix>
        <appendix>RDC, Emacs, X11, VNC)</appendix>
        <identifier>remap.pc_application2commandL_controlL</identifier>
        <block>
          <only>TERMINAL,SCREEN_SHARING, VI, REMOTEDESKTOPCONNECTION, EMACS, X11, VNC</only>
          <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::CONTROL_L</autogen>
        </block>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::COMMAND_L</autogen>
      </item>
      <item>
        <name>Application Key to Command_R</name>
        <identifier>remap.pc_application2commandR_comamndLspace</identifier>
        <appendix>(+ When you type Application only, send Command_L+Space)</appendix>
        <autogen>__KeyOverlaidModifier__ KeyCode::PC_APPLICATION, KeyCode::COMMAND_R, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>Application Key to Control_L</name>
        <identifier>remap.pc_application2controlL</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::CONTROL_L</autogen>
      </item>
      <item>
        <name>Application Key to Control_L</name>
        <appendix>(+ When you type Application Key only, send CapsLock)</appendix>
        <!-- Note: identifier has "jis_" prefix for compatibility. -->
        <identifier>remap.jis_pc_application2controlL_capslock</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::PC_APPLICATION, KeyCode::CONTROL_L, KeyCode::CAPSLOCK</autogen>
      </item>
      <item>
        <name>Application Key to Fn</name>
        <identifier>remap.pc_application2fn</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::FN</autogen>
      </item>
      <item>
        <name>Application Key to Fn</name>
        <appendix>(+ When you type Application only, send Fn_Lock)</appendix>
        <identifier>remap.pc_application2fn_fnlock</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::PC_APPLICATION, KeyCode::FN, KeyCode::VK_LOCK_FN</autogen>
      </item>
      <item>
        <name>Application Key to Option_L</name>
        <identifier>remap.pc_application2optionL</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::OPTION_L</autogen>
      </item>
      <item>
        <name>Application Key to Shift_L</name>
        <identifier>remap.pc_application2shiftL</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::SHIFT_L</autogen>
      </item>
      <item>
        <name>Application Key to Command_L+Backquote</name>
        <identifier>remap.pc_application2commandLbackquote</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>Application Key to Delete</name>
        <identifier>remap.pc_application2delete</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::DELETE</autogen>
      </item>
      <item>
        <name>Application Key to Delete</name>
        <appendix>(+ Command+Application Key to CapsLock)</appendix>
        <identifier>remap.pc_application2delete_capslock</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, VK_COMMAND, KeyCode::CAPSLOCK</autogen>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::DELETE</autogen>
      </item>
      <item>
        <name>Application Key to Escape</name>
        <identifier>remap.pc_application2escape</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::ESCAPE</autogen>
      </item>
      <item>
        <name>Application Key to Escape</name>
        <appendix>(+ Shift+Application Key to CapsLock)</appendix>
        <identifier>remap.pc_application2escape_capslock</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, VK_SHIFT, KeyCode::CAPSLOCK</autogen>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::ESCAPE</autogen>
      </item>
      <item>
        <name>Application Key to Eject</name>
        <identifier>remap.pc_application2eject</identifier>
        <autogen>__KeyToConsumer__ KeyCode::PC_APPLICATION, ConsumerKeyCode::EJECT</autogen>
      </item>
      <item>
        <name>Application Key to Expose All</name>
        <identifier>remap.pc_application2exposeALL</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::EXPOSE_ALL</autogen>
      </item>
      <item>
        <name>Application Key to F9</name>
        <identifier>remap.pc_application2f9</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::F9</autogen>
      </item>
      <item>
        <name>Application Key to F11</name>
        <identifier>remap.pc_application2f11</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::F11</autogen>
      </item>
      <item>
        <name>Application Key to Command_L+Space</name>
        <identifier>remap.pc_application2commandLspace</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
      </item>
      <item>
        <name>Application Key to Option_L+Space</name>
        <identifier>remap.pc_application2optionLspace</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::SPACE, ModifierFlag::OPTION_L</autogen>
      </item>
      <item>
        <name>Application Key to Underscore(Shift_L+Minus)</name>
        <identifier>remap.pc_application2underscore</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::MINUS, ModifierFlag::SHIFT_L</autogen>
      </item>
      <item>
        <name>Application Key to LeftClick</name>
        <identifier>remap.pc_application2leftclick</identifier>
        <autogen>__KeyToPointingButton__ KeyCode::PC_APPLICATION, PointingButton::LEFT</autogen>
      </item>
      <item>
        <name>Application Key to RightClick</name>
        <identifier>remap.pc_application2rightclick</identifier>
        <autogen>__KeyToPointingButton__ KeyCode::PC_APPLICATION, PointingButton::RIGHT</autogen>
      </item>
    </item>
    <item>
      <name>Change PC Insert Key</name>
      <item>
        <name>Insert Key to Control_R</name>
        <identifier>remap.pc_insert2controlR</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_INSERT, KeyCode::CONTROL_R</autogen>
      </item>
      <item>
        <name>Insert Key to Option_L+Insert</name>
        <identifier>remap.pc_insert2optionLinsert</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_INSERT, KeyCode::PC_INSERT, ModifierFlag::OPTION_L</autogen>
      </item>
      <item>
        <name>Insert Key to PageDown</name>
        <identifier>remap.pc_insert2pagedown</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_INSERT, KeyCode::PAGEDOWN</autogen>
      </item>
      <item>
        <name>Insert Key to Tab</name>
        <identifier>remap.pc_insert2tab</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_INSERT, KeyCode::TAB</autogen>
      </item>
    </item>
    <item>
      <name>Change PC NumLock Key</name>
      <item>
        <name>NumLock Key to F11</name>
        <identifier>remap.pc_numlock2f11</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_KEYPAD_NUMLOCK, KeyCode::F11</autogen>
      </item>
      <item>
        <name>Disable NumLock Key</name>
        <identifier>remap.drop_numlock</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_KEYPAD_NUMLOCK, KeyCode::VK_NONE</autogen>
      </item>
      <item>
        <name>Disable NumLock Key (except in TeamViewer.app)</name>
        <not>TEAMVIEWER</not>
        <identifier>remap.drop_numlock_ex_teamviewer</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_KEYPAD_NUMLOCK, KeyCode::VK_NONE</autogen>
      </item>
    </item>
    <item>
      <name>Change PC PrintScreen Key, ScrollLock Key, Pause/Break Key</name>
      <item>
        <name>Right-hand function key block to system volume controls</name>
        <appendix>* PrintScreen to Volume Down</appendix>
        <appendix>* ScrollLock to Volume Up</appendix>
        <appendix>* Pause/Break to Volume Mute</appendix>
        <identifier>remap.pc_printscreen_scrolllock_pause_to_volume_controls</identifier>
        <autogen>__KeyToConsumer__ KeyCode::PC_PRINTSCREEN, ConsumerKeyCode::VOLUME_DOWN</autogen>
        <autogen>__KeyToConsumer__ KeyCode::PC_SCROLLLOCK,  ConsumerKeyCode::VOLUME_UP</autogen>
        <autogen>__KeyToConsumer__ KeyCode::PC_PAUSE,       ConsumerKeyCode::VOLUME_MUTE</autogen>
      </item>
      <item>
        <name>PrintScreen Key to Eject</name>
        <identifier>remap.pc_printscreen2eject</identifier>
        <autogen>__KeyToConsumer__ KeyCode::PC_PRINTSCREEN, ConsumerKeyCode::EJECT</autogen>
      </item>
      <item>
        <name>PrintScreen Key to F12</name>
        <identifier>remap.pc_printscreen2f12</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_PRINTSCREEN, KeyCode::F12</autogen>
      </item>
      <item>
        <name>ScrollLock Key to F13</name>
        <identifier>remap.pc_scrolllock2f13</identifier>
        <autogen>__KeyToKey__ KeyCode::PC_SCROLLLOCK, KeyCode::F13</autogen>
      </item>
      <item>
        <name>Pause/Break Key to Eject</name>
        <identifier>remap.pc_pause2eject</identifier>
        <autogen>__KeyToConsumer__ KeyCode::PC_PAUSE, ConsumerKeyCode::EJECT</autogen>
      </item>
      <item>
        <name>Pause/Break Key to Power</name>
        <identifier>remap.pc_pause2power</identifier>
        <autogen>__KeyToConsumer__ KeyCode::PC_PAUSE, ConsumerKeyCode::POWER</autogen>
      </item>
    </item>
    <item>
      <name>Use KeyPad as Arrow (PC Style NumLock)</name>
      <item>
        <name>Enable KeyPad as Arrow</name>
        <appendix>(except virtual machine, RDC)</appendix>
        <identifier vk_config="true">remap.keypadnumlock</identifier>
        <block>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_0, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_5, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_COMMA, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_2, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_4, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_6, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_8, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_1, KeyCode::END</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_3, KeyCode::PAGEDOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_7, KeyCode::HOME</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_9, KeyCode::PAGEUP</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, KeyCode::FORWARD_DELETE</autogen>
        </block>
        <block>
          <config_only>option.keypadnumlock_vm</config_only>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_0, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_5, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_COMMA, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_2, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_4, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_6, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_8, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_1, KeyCode::END</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_3, KeyCode::PAGEDOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_7, KeyCode::HOME</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_9, KeyCode::PAGEUP</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, KeyCode::FORWARD_DELETE</autogen>
        </block>
      </item>
      <item>
        <name>Use Clear Key to toggle "KeyPad as Arrow"</name>
        <appendix>(except virtual machine, RDC)</appendix>
        <identifier>option.keypadnumlock_togglekey_clear</identifier>
        <block>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_CLEAR, KeyCode::VK_CONFIG_TOGGLE_remap_keypadnumlock</autogen>
        </block>
        <block>
          <config_only>option.keypadnumlock_vm</config_only>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_CLEAR, KeyCode::VK_CONFIG_TOGGLE_remap_keypadnumlock</autogen>
        </block>
      </item>
      <item>
        <name>Enable KeyPad as Arrow</name>
        <appendix>(With PC Style Home/End/PageUp/PageDown)</appendix>
        <appendix>(- KeyPad_7 to Command_L+Left-Arrow)</appendix>
        <appendix>(- KeyPad_1 to Command_L+Right-Arrow)</appendix>
        <appendix>(- KeyPad_9 to Option_L+PageUp)</appendix>
        <appendix>(- KeyPad_3 to Option_L+PageDown)</appendix>
        <appendix>(except virtual machine, RDC)</appendix>
        <identifier vk_config="true">remap.keypadnumlock_pclikehomeend</identifier>
        <block>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_0, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_5, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_COMMA, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_2, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_4, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_6, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_8, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_1, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_3, KeyCode::PAGEDOWN, ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_7, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_9, KeyCode::PAGEUP, ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, KeyCode::FORWARD_DELETE</autogen>
        </block>
        <block>
          <config_only>option.keypadnumlock_vm</config_only>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <!-- We use normal Home/End/PageUp/PageDown in VM -->
          <autogen>__KeyToKey__ KeyCode::KEYPAD_0, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_5, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_COMMA, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_2, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_4, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_6, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_8, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_1, KeyCode::END</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_3, KeyCode::PAGEDOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_7, KeyCode::HOME</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_9, KeyCode::PAGEUP</autogen>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, KeyCode::FORWARD_DELETE</autogen>
        </block>
      </item>
      <item>
        <name>Use Clear Key to toggle "KeyPad as Arrow (PC Style Home/End/PageUp/PageDown)"</name>
        <appendix>(except virtual machine, RDC)</appendix>
        <identifier>option.keypadnumlock_pclikehomeend_togglekey_clear</identifier>
        <block>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_CLEAR, KeyCode::VK_CONFIG_TOGGLE_remap_keypadnumlock_pclikehomeend</autogen>
        </block>
        <block>
          <config_only>option.keypadnumlock_vm</config_only>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::KEYPAD_CLEAR, KeyCode::VK_CONFIG_TOGGLE_remap_keypadnumlock_pclikehomeend</autogen>
        </block>
      </item>
      <item>
        <name>[Option] Use "KeyPad as Arrow" in virtual machine, RDC</name>
        <identifier>option.keypadnumlock_vm</identifier>
      </item>
    </item>
    <item>
      <name>Use PC Style Home/End (except in Virtual Machine,RDC)</name>
      <appendix>(Change Home to Control+A)</appendix>
      <appendix>(Change End to Control+E)</appendix>
      <identifier>remap.pclikehomeend_emacs</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <block>
        <only>DREAMWEAVER</only>
        <autogen>__KeyToKey__ FROMKEYCODE_HOME, KeyCode::HOME, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_END,  KeyCode::END,  ModifierFlag::SHIFT_L</autogen>
      </block>
      <block>
        <only>BLUEFISH,WORD,EXCEL,POWERPOINT</only>
        <autogen>__KeyToKey__ FROMKEYCODE_HOME, KeyCode::HOME</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_END,  KeyCode::END</autogen>
      </block>
      <autogen>__KeyToKey__ FROMKEYCODE_HOME, VK_COMMAND, KeyCode::CURSOR_UP,    ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ FROMKEYCODE_HOME, VK_CONTROL, KeyCode::CURSOR_UP,    ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ FROMKEYCODE_END,  VK_COMMAND, KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ FROMKEYCODE_END,  VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_L</autogen>
      <block>
        <!-- Control+Shift+A/E do not work in springpadit.com. -->
        <!-- Therefore we need to change Shift+Home/End to Command+Shift+Left/Right. -->
        <only>SAFARI,FIREFOX,THUNDERBIRD,GOOGLE_CHROME,OPERA</only>
        <autogen>__KeyToKey__ FROMKEYCODE_HOME, VK_SHIFT | ModifierFlag::NONE,
          KeyCode::CURSOR_LEFT,   ModifierFlag::COMMAND_L | VK_SHIFT</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_END,  VK_SHIFT | ModifierFlag::NONE,
          KeyCode::CURSOR_RIGHT,  ModifierFlag::COMMAND_L | VK_SHIFT</autogen>
      </block>
      <autogen>__KeyToKey__ FROMKEYCODE_HOME,             KeyCode::A, ModifierFlag::CONTROL_L</autogen>
      <autogen>__KeyToKey__ FROMKEYCODE_END,              KeyCode::E, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Use PC Style Home/End (except in Virtual Machine,RDC)</name>
      <appendix>(Change Home to Command+Left)</appendix>
      <appendix>(Change End to Command+Right)</appendix>
      <appendix>(+ Change Home to Control+A in Emacs,Terminal,X11,Eclipse)</appendix>
      <appendix>(+ Change End to Control+E in Emacs,Terminal,X11,Eclipse)</appendix>
      <identifier>remap.pclikehomeend</identifier>
      <block>
        <only>DREAMWEAVER</only>
        <autogen>__KeyToKey__ FROMKEYCODE_HOME, KeyCode::HOME, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_END,  KeyCode::END,  ModifierFlag::SHIFT_L</autogen>
      </block>
      <block>
        <only>BLUEFISH,WORD,EXCEL,POWERPOINT</only>
        <autogen>__KeyToKey__ FROMKEYCODE_HOME, KeyCode::HOME</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_END,  KeyCode::END</autogen>
      </block>
      <block>
        <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
        <autogen>__KeyToKey__ FROMKEYCODE_HOME, VK_COMMAND, KeyCode::CURSOR_UP,    ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_HOME, VK_CONTROL, KeyCode::CURSOR_UP,    ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_END,  VK_COMMAND, KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_END,  VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_HOME,             KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_END,              KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
      </block>
      <block>
        <only>EMACS, TERMINAL, X11, ECLIPSE</only>
        <autogen>__KeyToKey__ FROMKEYCODE_HOME, KeyCode::A, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ FROMKEYCODE_END,  KeyCode::E, ModifierFlag::CONTROL_L</autogen>
      </block>
    </item>
    <item>
      <name>Use PC Style PageUp/PageDown</name>
      <appendix>(behave like Option+PageUp/PageDown)</appendix>
      <identifier>remap.pclikepageupdown</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ FROMKEYCODE_PAGEUP,   ModifierFlag::NONE, KeyCode::PAGEUP,   ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ FROMKEYCODE_PAGEDOWN, ModifierFlag::NONE, KeyCode::PAGEDOWN, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Use PC Style PageUp/PageDown (except in Emacs,Virtual Machine,RDC)</name>
      <appendix>(behave like Option+PageUp/PageDown)</appendix>
      <identifier>remap.pclikepageupdown_except_emacs</identifier>
      <not>EMACS, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ FROMKEYCODE_PAGEUP,   ModifierFlag::NONE, KeyCode::PAGEUP, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ FROMKEYCODE_PAGEDOWN, ModifierFlag::NONE, KeyCode::PAGEDOWN, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Use PC Style Control+Up/Down/Left/Right</name>
      <appendix>(Change Control+Arrow to Option+Arrow)</appendix>
      <appendix>(except in Virtual Machine,RDC)</appendix>
      <identifier>remap.pclikecontrolarrow_except_vm</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::CURSOR_UP,     VK_CONTROL, KeyCode::CURSOR_UP,    ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN,   VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT,   VK_CONTROL, KeyCode::CURSOR_LEFT,  ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT,  VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Use PC Style Copy/Paste</name>
      <appendix>(Control+C to Command_L+C)</appendix>
      <appendix>(Control+V to Command_L+V)</appendix>
      <appendix>(Control+X to Command_L+X)</appendix>
      <identifier>remap.copy_paste_winstyle</identifier>
      <autogen>__KeyToKey__ KeyCode::C, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::V, VK_CONTROL, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::X, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Use PC Style Copy/Paste</name>
      <appendix>(Control+C to Command_L+C)</appendix>
      <appendix>(Control+V to Command_L+V)</appendix>
      <appendix>(Control+X to Command_L+X)</appendix>
      <appendix>(Except in Terminal, VM, RDC, Emacs, X11, Eclipse)</appendix>
      <identifier>remap.copy_paste_winstyle_no_term</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::C, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::V, VK_CONTROL, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::X, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Use PC Style Copy/Paste #2</name>
      <appendix>(Swap Control+C and Command_L+C)</appendix>
      <appendix>(Control+V to Command_L+V)</appendix>
      <appendix>(Control+X to Command_L+X)</appendix>
      <identifier>remap.copy_paste_winstyle2</identifier>
      <autogen>__KeyToKey__ KeyCode::C, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::V, VK_CONTROL, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::X, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::COMMAND_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Use PC Style Copy/Paste #3</name>
      <appendix>(Control+Insert to Command_L+C)</appendix>
      <appendix>(Shift+Insert to Command_L+V)</appendix>
      <appendix>(Shift+Delete to Command_L+X) (Note: "Delete" is Mac's Forward Delete)</appendix>
      <!-- Note: identifier name (*_2) is valid for compatibility. -->
      <identifier>remap.copy_paste_winstyle_2</identifier>
      <autogen>__KeyToKey__ KeyCode::PC_INSERT, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::PC_INSERT, VK_SHIFT, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::FORWARD_DELETE, VK_SHIFT, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Use PC Style Copy-Paste #4</name>
      <appendix>Change Command+Insert to Command+C</appendix>
      <identifier>remap.copy_paste_winstyle_4</identifier>
      <autogen>__KeyToKey__ KeyCode::PC_INSERT, VK_COMMAND, KeyCode::C, VK_COMMAND</autogen>
    </item>
    <item>
      <name>Use PC Style Undo</name>
      <appendix>(Control+Z to Command_L+Z)</appendix>
      <appendix>(Except in Terminal, VM, RDC, Emacs, X11, Eclipse)</appendix>
      <identifier>remap.undo_winstyle_no_term</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::Z, VK_CONTROL, KeyCode::Z, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Use PC Style Select All</name>
      <appendix>(Control+A to Command_L+A)</appendix>
      <appendix>(Except in Terminal, VM, RDC, Emacs, X11, Eclipse)</appendix>
      <identifier>remap.select_all_winstyle_no_term</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::A, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Use PC Style Save</name>
      <appendix>(Control+S to Command_L+S)</appendix>
      <appendix>(Except in Terminal, VM, RDC, Emacs, X11, Eclipse)</appendix>
      <identifier>remap.save_winstyle_no_term</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::S, VK_CONTROL, KeyCode::S, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Use PC Style New</name>
      <appendix>(Control+N to Command_L+N)</appendix>
      <appendix>(Except in Terminal, VM, RDC, Emacs, X11, Eclipse)</appendix>
      <identifier>remap.new_winstyle_no_term</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::N, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Use PC Style New Tab In Browser</name>
      <appendix>(Control+T to Command_L+T)</appendix>
      <appendix>(only in Firefox, Google Chrome, Opera, Safari)</appendix>
      <identifier>remap.copy_paste_winstyle_new_browser_tab</identifier>
      <only>FIREFOX, GOOGLE_CHROME, OPERA, SAFARI</only>
      <autogen>__KeyToKey__ KeyCode::T, VK_CONTROL, KeyCode::T, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Use PC Style New Tab</name>
      <appendix>(Control+T to Command_L+T)</appendix>
      <appendix>(Except in VM, RDC, Emacs, X11, Eclipse)</appendix>
      <identifier>remap.copy_paste_winstyle_new_tab</identifier>
      <not>EMACS, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::T, VK_CONTROL, KeyCode::T, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Use PC Style Find</name>
      <appendix>(Control+F to Command_L+F)</appendix>
      <appendix>(Control+G to Command_L+G)</appendix>
      <appendix>(F3 to Command_L+G)</appendix>
      <appendix>(Control+F3 to Shift+Command_L+G)</appendix>
      <appendix>(Except in Terminal, VM, RDC, Emacs, X11, Eclipse)</appendix>
      <identifier>remap.find_winstyle_no_term</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::F, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::G, VK_CONTROL, KeyCode::G, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::F3, VK_CONTROL, KeyCode::G, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::F3, KeyCode::G, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Use PC Style Delete-Last-Word</name>
      <name>(Control+Delete to Option+Delete)</name>
      <identifier>remap.control_delete_to_option_delete_winstyle</identifier>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
      <autogen>__KeyToKey__ KeyCode::DELETE, VK_CONTROL, KeyCode::DELETE, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Use PC Style "Change Input Method" #1</name>
      <appendix>Flip between input modes</appendix>
      <appendix>(Option_L+Shift_L to Command+Space)</appendix>
      <appendix>If you want to use Option_L+Shift_L as modifier, press Shift_L first. (then press Option_L.)</appendix>
      <identifier>remap.pcstyle_changeinputmethod1</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, ModifierFlag::OPTION_L, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Use PC Style "Change Input Method" #2</name>
      <appendix>Flip between input modes</appendix>
      <appendix>(Option+Shift_L to Command+Space)</appendix>
      <appendix>(Option+Shift_R to Command+Shift+Space)</appendix>
      <appendix>If you want to use Option+Shift as modifier, press Shift first. (then press Option.)</appendix>
      <identifier>remap.pcstyle_changeinputmethod2</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_L, VK_OPTION, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, VK_OPTION, KeyCode::SPACE, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Use PC Style Alt+F4</name>
      <appendix>Disable Cmd+Q, remap Alt/Cmd+F4 to Cmd+Q</appendix>
      <identifier>remap.pcstyle_altf4</identifier>
      <autogen>__KeyToKey__ KeyCode::F4, VK_COMMAND, KeyCode::Q, VK_COMMAND</autogen>
      <autogen>__KeyToKey__ KeyCode::F4, VK_OPTION,  KeyCode::Q, VK_COMMAND</autogen>
      <autogen>__KeyToKey__ KeyCode::Q,  VK_COMMAND, KeyCode::VK_NONE</autogen>
    </item>
  </item>

  <item>
    <name>For Dvorak Users</name>
    <item>
      <name>____________________________________________________________</name>
      <appendix>For Dvorak Input Source</appendix>
    </item>
    <item>
      <name>Dvorak's Control+PNBF to Up/Down/Left/Right</name>
      <appendix>(except Emacs, Terminal, Virtual, RDC, X11, Eclipse)</appendix>
      <identifier>option.dvorak_emacsmode_controlPNBF</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::R, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::Y, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
      <autogen>__KeyToKey__ KeyCode::L, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
    </item>
    <item>
      <name>Dvorak's Control+H to Delete</name>
      <identifier>remap.dvorak_controlJ</identifier>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Dvorak's Control+D to Forward Delete</name>
      <identifier>remap.dvorak_controlH</identifier>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Dvorak's Control+W to Option+Delete</name>
      <appendix>(except Emacs, Terminal, X11, virtual machine, RDC, Eclipse)</appendix>
      <identifier>option.dvorak_emacsmode_ex_controlW</identifier>
      <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
      <autogen>__KeyToKey__ KeyCode::COMMA, VK_CONTROL, KeyCode::DELETE, ModifierFlag::OPTION_L</autogen>
    </item>

    <item>
      <name>Swap U and I (== Swap Qwerty::F and Qwerty::G)</name>
      <identifier>remap.dvorak_u2i</identifier>
      <!-- Dvorak:U == Qwerty:F, Dvorak:I == Qwerty:G -->
      <autogen>__KeyToKey__ KeyCode::F, KeyCode::G</autogen>
      <autogen>__KeyToKey__ KeyCode::G, KeyCode::F</autogen>
    </item>

    <item>
      <name>Make Cut, Quit work on Mac OS X using Dvorak layout in the same position as on QWERTY</name>
      <appendix>Change Command_L+Q to Command_L+X (X in DV - i.e. Cut) </appendix>
      <appendix>Change Command_L+' to Command_L+Q (Q in DV - i.e. Quit) </appendix>
      <identifier>remap.cut_quit_dvorak_as_QWERTY</identifier>

      <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::COMMAND_L, KeyCode::B, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::COMMAND_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
    </item>

    <item>
      <name>Make Undo work on Mac OS X using Dvorak layout in the same position as on QWERTY (;)</name>
      <appendix>Change Command_L+; to Command_L+Z (Z in DV - i.e. Undo) </appendix>
      <identifier>remap.undo_dvorak_as_QWERTY</identifier>
      <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::COMMAND_L, KeyCode::SLASH, ModifierFlag::COMMAND_L</autogen>
    </item>

    <item>
      <name>Make Cut, Copy, Paste, Quit and Undo work on Mac OS X using Dvorak layout</name>
      <appendix>in the same position as on QWERTY</appendix>
      <appendix></appendix>
      <appendix>Change Command_L+Q to Command_L+X (X in DV - i.e. Cut) </appendix>
      <appendix>Change Command_L+J to Command_L+C (C in DV - i.e. Copy) </appendix>
      <appendix>Change Command_L+K to Command_L+V (V in DV - i.e. Paste) </appendix>
      <appendix>Change Command_L+; to Command_L+Z (Z in DV - i.e. Undo) </appendix>
      <appendix>Change Command_L+' to Command_L+Q (Q in DV - i.e. Quit) </appendix>

      <identifier>remap.cut_copy_paste_quit_undo_dvorak_as_QWERTY</identifier>

      <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::COMMAND_L, KeyCode::B, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::COMMAND_L, KeyCode::I, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::COMMAND_L, KeyCode::DOT, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::COMMAND_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::COMMAND_L, KeyCode::SLASH, ModifierFlag::COMMAND_L</autogen>
    </item>

    <item>
      <name>____________________________________________________________</name>
      <appendix>For U.S. Input Source</appendix>
    </item>

    <!-- ============================================================ -->
    <!-- We must put "Use Dvorak Keyboard Layout" in the tail of Dvorak settings. -->
    <item>
      <name>Use Dvorak Keyboard Layout</name>
      <appendix>(QWERTY to Dvorak)</appendix>
      <identifier>remap.qwerty2dvorak</identifier>
      <!-- If ModifierFlag::FN is pressed, retain keys to convert Fn+jkl to 123 (numpad) -->
      <modifier_not>ModifierFlag::FN</modifier_not>

      <autogen>__KeyToKey__ KeyCode::Q, KeyCode::QUOTE</autogen>
      <autogen>__KeyToKey__ KeyCode::W, KeyCode::COMMA</autogen>
      <autogen>__KeyToKey__ KeyCode::E, KeyCode::DOT</autogen>
      <autogen>__KeyToKey__ KeyCode::R, KeyCode::P</autogen>
      <autogen>__KeyToKey__ KeyCode::T, KeyCode::Y</autogen>
      <autogen>__KeyToKey__ KeyCode::Y, KeyCode::F</autogen>
      <autogen>__KeyToKey__ KeyCode::U, KeyCode::G</autogen>
      <autogen>__KeyToKey__ KeyCode::I, KeyCode::C</autogen>
      <autogen>__KeyToKey__ KeyCode::O, KeyCode::R</autogen>
      <autogen>__KeyToKey__ KeyCode::P, KeyCode::L</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::SLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, KeyCode::EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::S, KeyCode::O</autogen>
      <autogen>__KeyToKey__ KeyCode::D, KeyCode::E</autogen>
      <autogen>__KeyToKey__ KeyCode::F, KeyCode::U</autogen>
      <autogen>__KeyToKey__ KeyCode::G, KeyCode::I</autogen>
      <autogen>__KeyToKey__ KeyCode::H, KeyCode::D</autogen>
      <autogen>__KeyToKey__ KeyCode::J, KeyCode::H</autogen>
      <autogen>__KeyToKey__ KeyCode::K, KeyCode::T</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::N</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::S</autogen>
      <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::MINUS</autogen>
      <autogen>__KeyToKey__ KeyCode::Z, KeyCode::SEMICOLON</autogen>
      <autogen>__KeyToKey__ KeyCode::X, KeyCode::Q</autogen>
      <autogen>__KeyToKey__ KeyCode::C, KeyCode::J</autogen>
      <autogen>__KeyToKey__ KeyCode::V, KeyCode::K</autogen>
      <autogen>__KeyToKey__ KeyCode::B, KeyCode::X</autogen>
      <autogen>__KeyToKey__ KeyCode::N, KeyCode::B</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::W</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::V</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::Z</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS, KeyCode::BRACKET_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::EQUAL, KeyCode::BRACKET_RIGHT</autogen>
    </item>

    <item>
      <name>Use Dvorak-Qwerty⌘</name>
      <appendix>(QWERTY to Dvorak)</appendix>
      <appendix>(+ Command+Keys to Qwerty)</appendix>
      <identifier>remap.dvorak2qwerty_qwertycommand</identifier>
      <modifier_not>
        ModifierFlag::COMMAND_L,
        ModifierFlag::COMMAND_R
      </modifier_not>
      <!-- If ModifierFlag::FN is pressed, retain keys to convert Fn+jkl to 123 (numpad) -->
      <modifier_not>ModifierFlag::FN</modifier_not>

      <autogen>__KeyToKey__ KeyCode::Q, KeyCode::QUOTE</autogen>
      <autogen>__KeyToKey__ KeyCode::W, KeyCode::COMMA</autogen>
      <autogen>__KeyToKey__ KeyCode::E, KeyCode::DOT</autogen>
      <autogen>__KeyToKey__ KeyCode::R, KeyCode::P</autogen>
      <autogen>__KeyToKey__ KeyCode::T, KeyCode::Y</autogen>
      <autogen>__KeyToKey__ KeyCode::Y, KeyCode::F</autogen>
      <autogen>__KeyToKey__ KeyCode::U, KeyCode::G</autogen>
      <autogen>__KeyToKey__ KeyCode::I, KeyCode::C</autogen>
      <autogen>__KeyToKey__ KeyCode::O, KeyCode::R</autogen>
      <autogen>__KeyToKey__ KeyCode::P, KeyCode::L</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::SLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, KeyCode::EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::S, KeyCode::O</autogen>
      <autogen>__KeyToKey__ KeyCode::D, KeyCode::E</autogen>
      <autogen>__KeyToKey__ KeyCode::F, KeyCode::U</autogen>
      <autogen>__KeyToKey__ KeyCode::G, KeyCode::I</autogen>
      <autogen>__KeyToKey__ KeyCode::H, KeyCode::D</autogen>
      <autogen>__KeyToKey__ KeyCode::J, KeyCode::H</autogen>
      <autogen>__KeyToKey__ KeyCode::K, KeyCode::T</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::N</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::S</autogen>
      <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::MINUS</autogen>
      <autogen>__KeyToKey__ KeyCode::Z, KeyCode::SEMICOLON</autogen>
      <autogen>__KeyToKey__ KeyCode::X, KeyCode::Q</autogen>
      <autogen>__KeyToKey__ KeyCode::C, KeyCode::J</autogen>
      <autogen>__KeyToKey__ KeyCode::V, KeyCode::K</autogen>
      <autogen>__KeyToKey__ KeyCode::B, KeyCode::X</autogen>
      <autogen>__KeyToKey__ KeyCode::N, KeyCode::B</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::W</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::V</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::Z</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS, KeyCode::BRACKET_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::EQUAL, KeyCode::BRACKET_RIGHT</autogen>
    </item>

    <item>
      <name>Use Dvorak - Qwerty Keyboard Layout</name>
      <appendix>(QWERTY to Dvorak)</appendix>
      <appendix>(+ Command,Control,Option+Keys to Qwerty)</appendix>
      <identifier>remap.qwerty2dvorak_qwerty</identifier>
      <modifier_not>
        ModifierFlag::COMMAND_L,
        ModifierFlag::COMMAND_R,
        ModifierFlag::CONTROL_L,
        ModifierFlag::CONTROL_R,
        ModifierFlag::OPTION_L,
        ModifierFlag::OPTION_R
      </modifier_not>
      <!-- If ModifierFlag::FN is pressed, retain keys to convert Fn+jkl to 123 (numpad) -->
      <modifier_not>ModifierFlag::FN</modifier_not>

      <autogen>__KeyToKey__ KeyCode::Q, KeyCode::QUOTE</autogen>
      <autogen>__KeyToKey__ KeyCode::W, KeyCode::COMMA</autogen>
      <autogen>__KeyToKey__ KeyCode::E, KeyCode::DOT</autogen>
      <autogen>__KeyToKey__ KeyCode::R, KeyCode::P</autogen>
      <autogen>__KeyToKey__ KeyCode::T, KeyCode::Y</autogen>
      <autogen>__KeyToKey__ KeyCode::Y, KeyCode::F</autogen>
      <autogen>__KeyToKey__ KeyCode::U, KeyCode::G</autogen>
      <autogen>__KeyToKey__ KeyCode::I, KeyCode::C</autogen>
      <autogen>__KeyToKey__ KeyCode::O, KeyCode::R</autogen>
      <autogen>__KeyToKey__ KeyCode::P, KeyCode::L</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::SLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, KeyCode::EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::S, KeyCode::O</autogen>
      <autogen>__KeyToKey__ KeyCode::D, KeyCode::E</autogen>
      <autogen>__KeyToKey__ KeyCode::F, KeyCode::U</autogen>
      <autogen>__KeyToKey__ KeyCode::G, KeyCode::I</autogen>
      <autogen>__KeyToKey__ KeyCode::H, KeyCode::D</autogen>
      <autogen>__KeyToKey__ KeyCode::J, KeyCode::H</autogen>
      <autogen>__KeyToKey__ KeyCode::K, KeyCode::T</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::N</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::S</autogen>
      <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::MINUS</autogen>
      <autogen>__KeyToKey__ KeyCode::Z, KeyCode::SEMICOLON</autogen>
      <autogen>__KeyToKey__ KeyCode::X, KeyCode::Q</autogen>
      <autogen>__KeyToKey__ KeyCode::C, KeyCode::J</autogen>
      <autogen>__KeyToKey__ KeyCode::V, KeyCode::K</autogen>
      <autogen>__KeyToKey__ KeyCode::B, KeyCode::X</autogen>
      <autogen>__KeyToKey__ KeyCode::N, KeyCode::B</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::W</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::V</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::Z</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS, KeyCode::BRACKET_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::EQUAL, KeyCode::BRACKET_RIGHT</autogen>
    </item>

    <item>
      <name>Use Dvorak Keyboard Layout</name>
      <appendix>(QWERTY to Dvorak, except in password dialogue boxes)</appendix>
      <identifier>remap.qwerty2dvorak_ex_password</identifier>
      <not>PASSWORD</not>
      <!-- If ModifierFlag::FN is pressed, retain keys to convert Fn+jkl to 123 (numpad) -->
      <modifier_not>ModifierFlag::FN</modifier_not>

      <autogen>__KeyToKey__ KeyCode::Q, KeyCode::QUOTE</autogen>
      <autogen>__KeyToKey__ KeyCode::W, KeyCode::COMMA</autogen>
      <autogen>__KeyToKey__ KeyCode::E, KeyCode::DOT</autogen>
      <autogen>__KeyToKey__ KeyCode::R, KeyCode::P</autogen>
      <autogen>__KeyToKey__ KeyCode::T, KeyCode::Y</autogen>
      <autogen>__KeyToKey__ KeyCode::Y, KeyCode::F</autogen>
      <autogen>__KeyToKey__ KeyCode::U, KeyCode::G</autogen>
      <autogen>__KeyToKey__ KeyCode::I, KeyCode::C</autogen>
      <autogen>__KeyToKey__ KeyCode::O, KeyCode::R</autogen>
      <autogen>__KeyToKey__ KeyCode::P, KeyCode::L</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::SLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, KeyCode::EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::S, KeyCode::O</autogen>
      <autogen>__KeyToKey__ KeyCode::D, KeyCode::E</autogen>
      <autogen>__KeyToKey__ KeyCode::F, KeyCode::U</autogen>
      <autogen>__KeyToKey__ KeyCode::G, KeyCode::I</autogen>
      <autogen>__KeyToKey__ KeyCode::H, KeyCode::D</autogen>
      <autogen>__KeyToKey__ KeyCode::J, KeyCode::H</autogen>
      <autogen>__KeyToKey__ KeyCode::K, KeyCode::T</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::N</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::S</autogen>
      <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::MINUS</autogen>
      <autogen>__KeyToKey__ KeyCode::Z, KeyCode::SEMICOLON</autogen>
      <autogen>__KeyToKey__ KeyCode::X, KeyCode::Q</autogen>
      <autogen>__KeyToKey__ KeyCode::C, KeyCode::J</autogen>
      <autogen>__KeyToKey__ KeyCode::V, KeyCode::K</autogen>
      <autogen>__KeyToKey__ KeyCode::B, KeyCode::X</autogen>
      <autogen>__KeyToKey__ KeyCode::N, KeyCode::B</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::W</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::V</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::Z</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS, KeyCode::BRACKET_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::EQUAL, KeyCode::BRACKET_RIGHT</autogen>
    </item>

    <item>
      <name>Use Dvorak Keyboard Layout</name>
      <appendix>(QWERTY to Dvorak)</appendix>
      <appendix>(+ Swap U and I)</appendix>
      <identifier>remap.qwerty2dvorak_swap_ui</identifier>
      <autogen>__KeyToKey__ KeyCode::Q, KeyCode::QUOTE</autogen>
      <autogen>__KeyToKey__ KeyCode::W, KeyCode::COMMA</autogen>
      <autogen>__KeyToKey__ KeyCode::E, KeyCode::DOT</autogen>
      <autogen>__KeyToKey__ KeyCode::R, KeyCode::P</autogen>
      <autogen>__KeyToKey__ KeyCode::T, KeyCode::Y</autogen>
      <autogen>__KeyToKey__ KeyCode::Y, KeyCode::F</autogen>
      <autogen>__KeyToKey__ KeyCode::U, KeyCode::G</autogen>
      <autogen>__KeyToKey__ KeyCode::I, KeyCode::C</autogen>
      <autogen>__KeyToKey__ KeyCode::O, KeyCode::R</autogen>
      <autogen>__KeyToKey__ KeyCode::P, KeyCode::L</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::SLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, KeyCode::EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::S, KeyCode::O</autogen>
      <autogen>__KeyToKey__ KeyCode::D, KeyCode::E</autogen>
      <autogen>__KeyToKey__ KeyCode::F, KeyCode::I</autogen>
      <autogen>__KeyToKey__ KeyCode::G, KeyCode::U</autogen>
      <autogen>__KeyToKey__ KeyCode::H, KeyCode::D</autogen>
      <autogen>__KeyToKey__ KeyCode::J, KeyCode::H</autogen>
      <autogen>__KeyToKey__ KeyCode::K, KeyCode::T</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::N</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::S</autogen>
      <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::MINUS</autogen>
      <autogen>__KeyToKey__ KeyCode::Z, KeyCode::SEMICOLON</autogen>
      <autogen>__KeyToKey__ KeyCode::X, KeyCode::Q</autogen>
      <autogen>__KeyToKey__ KeyCode::C, KeyCode::J</autogen>
      <autogen>__KeyToKey__ KeyCode::V, KeyCode::K</autogen>
      <autogen>__KeyToKey__ KeyCode::B, KeyCode::X</autogen>
      <autogen>__KeyToKey__ KeyCode::N, KeyCode::B</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::W</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::V</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::Z</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS, KeyCode::BRACKET_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::EQUAL, KeyCode::BRACKET_RIGHT</autogen>
    </item>
  </item>

  <item>
    <name>Device Specific Mixed Settings</name>
    <item>
      <name>For MacBook series (vid/pid: 0x05ac,0x0236)</name>
      <item>
        <name>Swap Command_L and Option_L on MacBook pro (vid/pid: 0x05ac,0x0236)</name>
        <identifier>remap.swap_commandL_and_optionL_mac_book_pro_0x0236</identifier>
        <block>
          <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0236</device_only>
          <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
        </block>
      </item>
    </item>

    <item>
      <name>For MacBook series (vid/pid: 0x05ac,0x021a)</name>
      <item>
        <name>Backslash to R Bracket</name>
        <identifier>remap.backslash_to_bracket_r_0x05ac_0x021a</identifier>
        <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::BRACKET_RIGHT</autogen>
        <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a</device_only>
      </item>

      <item>
        <name>Fix Keyboard Upgrade!</name>
        <identifier>remap.fix_keyboard_upgrade_0x05ac_0x021a</identifier>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, KeyCode::EXPOSE_ALL</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN, KeyCode::DASHBOARD</autogen>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_UP, ConsumerKeyCode::KEYBOARDLIGHT_LOW</autogen>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::NUMLOCK, ConsumerKeyCode::KEYBOARDLIGHT_HIGH</autogen>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VIDEO_MIRROR, ConsumerKeyCode::MUSIC_PREV</autogen>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::KEYBOARDLIGHT_OFF, ConsumerKeyCode::MUSIC_PLAY</autogen>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::KEYBOARDLIGHT_LOW, ConsumerKeyCode::MUSIC_NEXT</autogen>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::KEYBOARDLIGHT_HIGH, ConsumerKeyCode::VOLUME_MUTE</autogen>
        <autogen>__KeyToConsumer__ KeyCode::F11, ConsumerKeyCode::VOLUME_DOWN</autogen>
        <autogen>__KeyToConsumer__ KeyCode::F12, ConsumerKeyCode::VOLUME_UP</autogen>
        <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a</device_only>
      </item>
    </item>

    <item>
      <name>For MacBook series (vid/pid: 0x05ac,0x0218)</name>
      <item>
        <name>Swap Shift_L and CapsLock on the Mac's internal kbd (vid/pid: 0x05ac,0x0218)</name>
        <appendix>(*Note: I have set PCKeyboardHack to remap CapsLock to ExposeAll on all kbds*)</appendix>
        <appendix>(ExposeAll to Shift_L and Shift_L to CapsLock on the MacBook's internal keyboard)</appendix>
        <appendix>(ExposeAll back to CapsLock on other devices)</appendix>
        <identifier>remap.swap_shiftLcapslock_MacBookOnly</identifier>
        <block>
          <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
          <autogen>__KeyToKey__ KeyCode::EXPOSE_ALL, KeyCode::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::CAPSLOCK</autogen>
        </block>
        <block>
          <device_not>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_not>
          <autogen>__KeyToKey__ KeyCode::EXPOSE_ALL, KeyCode::CAPSLOCK</autogen>
        </block>
      </item>
      <item>
        <name>Revert CapsLock to normal on every kbds</name>
        <appendix>(*Note: I have set PCKeyboardHack to remap CapsLock to ExposeAll on all kbds*)</appendix>
        <identifier>remap.restorecapslock_AllKeyboards</identifier>
        <autogen>__KeyToKey__ KeyCode::EXPOSE_ALL, KeyCode::CAPSLOCK</autogen>
      </item>

      <item>
        <name>Command_R to Option_R on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
        <identifier>remap.commandR2optionR_MacBookOnly</identifier>
        <block>
          <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
          <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
        </block>
      </item>
      <item>
        <name>Enter to Control_R on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
        <identifier>remap.enter2controlR_MacBookOnly</identifier>
        <block>
          <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
          <autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::CONTROL_R</autogen>
        </block>
      </item>
      <item>
        <name>Swap Shift_R and Backslash (\) on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
        <identifier>remap.swap_shiftRpipes_MacBookOnly</identifier>
        <block>
          <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
          <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::BACKSLASH</autogen>
          <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::SHIFT_R</autogen>
        </block>
      </item>
      <item>
        <name>‘last row left-shift’ on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
        <appendix>(Backquote,Z,X,C,V to Z,X,C,V,B)</appendix>
        <identifier>remap.backquote2z_zxcv2xcvb_MacBookOnly</identifier>
        <block>
          <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
          <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::Z</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, KeyCode::X</autogen>
          <autogen>__KeyToKey__ KeyCode::X, KeyCode::C</autogen>
          <autogen>__KeyToKey__ KeyCode::C, KeyCode::V</autogen>
          <autogen>__KeyToKey__ KeyCode::V, KeyCode::B</autogen>
        </block>
      </item>
      <item>
        <name>‘Central-Return’ (B to Return) on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
        <identifier>remap.b2return_MacBookOnly</identifier>
        <block>
          <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
          <autogen>__KeyToKey__ KeyCode::B, KeyCode::RETURN</autogen>
        </block>
      </item>
      <item>
        <name>‘first row right-shift’ on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
        <appendix>(7,8,9,0,-,=,delete to 6,7,8,9,0,-,=)</appendix>
        <identifier>remap.firstrowshift_MacBookOnly</identifier>
        <block>
          <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
          <autogen>__KeyToKey__ KeyCode::KEY_7, KeyCode::KEY_6</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, KeyCode::KEY_7</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, KeyCode::KEY_8</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, KeyCode::KEY_9</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, KeyCode::KEY_0</autogen>
          <autogen>__KeyToKey__ KeyCode::EQUAL, KeyCode::MINUS</autogen>
          <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::EQUAL</autogen>
        </block>
      </item>
      <item>
        <name>‘Central-Delete’ (6 to Delete) on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
        <identifier>remap.six2delete_MacBookOnly</identifier>
        <block>
          <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
          <autogen>__KeyToKey__ KeyCode::KEY_6, KeyCode::DELETE</autogen>
        </block>
      </item>
    </item>

    <item>
      <name>For Magic Mouse (vid/pid: 0x05ac,0x030d)</name>
      <item>
        <name>Disable ScrollWheel</name>
        <identifier>remap.dropscrollwheel_0x05ac_0x030d</identifier>
        <block>
          <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::MAGIC_MOUSE</device_only>
          <autogen>__DropScrollWheel__</autogen>
        </block>
      </item>
    </item>

    <item>
      <name>For Logitech Devices</name>
      <item>
        <name>Tilt Wheel to Back/Forward (Command+[, Command+]) on Logitech MX620</name>
        <identifier>remap.tilt_to_back_forward</identifier>
        <device_only>DeviceVendor::LOGITECH, DeviceProduct::LOGITECH_MX620</device_only>
        <autogen>__ScrollWheelToKey__ ScrollWheel::LEFT, ModifierFlag::NONE,
          KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L</autogen>
        <autogen>__ScrollWheelToKey__ ScrollWheel::RIGHT, ModifierFlag::NONE,
          KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L</autogen>
      </item>
    </item>

    <item>
      <name>For TypeMatrix 2030</name>
      <item>
        <name>Swap Command_L and Option_L on TypeMatrix 2030 kbd</name>
        <identifier>remap.swap_commandLoptionL_TypeMatrixOnly</identifier>
        <block>
          <device_only>DeviceVendor::TYPEMATRIX,DeviceProduct::TYPEMATRIX_KEYBOARD_0x2030</device_only>
          <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
        </block>
      </item>
      <item>
        <name>Option+Tab to Command+Tab on TypeMatrix 2030 kbd</name>
        <identifier>remap.optionTab2commandTab_TypeMatrixOnly</identifier>
        <block>
          <device_only>DeviceVendor::TYPEMATRIX,DeviceProduct::TYPEMATRIX_KEYBOARD_0x2030</device_only>
          <autogen>__KeyToKey__ KeyCode::TAB, VK_OPTION, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
        </block>
      </item>

      <item>
        <name>Application Key to Command_L+Backquote on TypeMatrix 2030 kbd</name>
        <identifier>remap.pc_application2commandLbackquote_TypeMatrixOnly</identifier>
        <block>
          <device_only>DeviceVendor::TYPEMATRIX,DeviceProduct::TYPEMATRIX_KEYBOARD_0x2030</device_only>
          <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
        </block>
      </item>

      <item>
        <name>Use PC Style Copy/Paste #3 on TypeMatrix 2030 kbd</name>
        <appendix>(Control+Insert to Command_L+C)</appendix>
        <appendix>(Shift+Insert to Command_L+V)</appendix>
        <appendix>(Shift+Delete to Command_L+X) (Note: "Delete" is Mac's Forward Delete)</appendix>
        <identifier>remap.copy_paste_winstyle3_TypeMatrixOnly</identifier>
        <block>
          <device_only>DeviceVendor::TYPEMATRIX,DeviceProduct::TYPEMATRIX_KEYBOARD_0x2030</device_only>
          <autogen>__KeyToKey__ KeyCode::PC_INSERT, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::PC_INSERT, VK_SHIFT, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::FORWARD_DELETE, VK_SHIFT, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        </block>
      </item>
      <item>
        <name>Use PC Style Copy/Paste #3bis (for bépo / french dvorak) on TypeMatrix 2030 kbd</name>
        <appendix>(Control+Insert to Command_L+C)</appendix>
        <appendix>(Shift+Insert to Command_L+V)</appendix>
        <appendix>(Shift+Delete to Command_L+X) (Note: "Delete" is Mac's Forward Delete)</appendix>
        <identifier>remap.copy_paste_winstyle3b_TypeMatrixOnly</identifier>
        <block>
          <device_only>DeviceVendor::TYPEMATRIX,DeviceProduct::TYPEMATRIX_KEYBOARD_0x2030</device_only>
          <autogen>__KeyToKey__ KeyCode::PC_INSERT, VK_CONTROL, KeyCode::H, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::PC_INSERT, VK_SHIFT, KeyCode::U, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::FORWARD_DELETE, VK_SHIFT, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
        </block>
      </item>

      <item>
        <name>Make Cut, Copy, Paste work on TypeMatrix 2030 using Dvorak layout in MacOS X</name>
        <appendix>Change Shift+Delete to Command_L+B (X in DV - i.e. Cut)</appendix>
        <appendix>Change Control+Insert to Command_L+I (C in DV - i.e. Copy) </appendix>
        <appendix>Change Shift+Insert to Command_L+. (V in DV - i.e. Paste) </appendix>
        <identifier>remap.typematrix_winstyle_zxc_dvorak</identifier>
        <block>
          <device_only>DeviceVendor::TYPEMATRIX,DeviceProduct::TYPEMATRIX_KEYBOARD_0x2030</device_only>
          <autogen>__KeyToKey__ KeyCode::FORWARD_DELETE, VK_SHIFT   | ModifierFlag::NONE, KeyCode::B,   ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::PC_INSERT,      VK_CONTROL | ModifierFlag::NONE, KeyCode::I,   ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::PC_INSERT,      VK_SHIFT   | ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::COMMAND_L</autogen>
        </block>
      </item>
    </item>

    <item>
      <name>For IBM Model M Keyboard</name>
      <item>
        <name>Change IBM Model M Keyboard</name>
        <appendix>(with PS2-to-USB adapters (Chesen Electronics Corp))</appendix>
        <appendix>Bottom row of Model M keyboard:</appendix>
        <appendix>   Original: Ctrl Alt [space bar] Alt Ctrl</appendix>
        <appendix>   Remapped: Ctrl Cmd [space bar] Cmd Alt</appendix>
        <identifier>remap.modelMkeyboard</identifier>
        <device_only>DeviceVendor::CHESEN,DeviceProduct::CHESEN_PS2_TO_USB</device_only>
        <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::COMMAND_R</autogen>
        <autogen>__KeyToKey__ KeyCode::CONTROL_R, KeyCode::OPTION_R</autogen>
      </item>
      <item>
        <name>Swap Start (aka Command) and Alt keys on Windows keyboard</name>
        <identifier>remap.windows4mac</identifier>
        <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::COMMAND_R</autogen>
        <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
      </item>
    </item>

    <item>
      <name>For Unicomp SpaceSaver M</name>
      <item>
        <name>Change Fn+F1..F12 keys to F1..F12 (only in Emacs)</name>
        <identifier>remap.SpaceSaverM.function_key_mapping_emacs</identifier>
        <only>EMACS</only>
        <device_only>DeviceVendor::Unicomp_Inc, DeviceProduct::Unicomp_SpaceSaver_M_Keyboard</device_only>
        <autogen>__KeyToKey__ KeyCode::F14, KeyCode::F1</autogen>
        <autogen>__KeyToKey__ KeyCode::F15, KeyCode::F2</autogen>
        <autogen>__KeyToKey__ KeyCode::F9,  KeyCode::F3</autogen>
        <autogen>__KeyToKey__ KeyCode::F12, KeyCode::F4</autogen>
        <!-- F5 and F6 are mapped correctly as-is: No remapping needed -->
        <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PREV_18, KeyCode::F7</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_PLAY, KeyCode::F8</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::MUSIC_NEXT_17, KeyCode::F9</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, KeyCode::F10</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN, KeyCode::F11</autogen>
      </item>
    </item>

    <item>
      <name>For HHK (Happy Hacking Keyboard) Users</name>
      <item>
        <name>Enable HHK compatible Arrow Key Mode</name>
        <identifier>remap.hhkmode</identifier>
        <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::FN, KeyCode::CURSOR_UP</autogen>
        <autogen>__KeyToKey__ KeyCode::SEMICOLON,    ModifierFlag::FN, KeyCode::CURSOR_LEFT</autogen>
        <autogen>__KeyToKey__ KeyCode::QUOTE,        ModifierFlag::FN, KeyCode::CURSOR_RIGHT</autogen>
        <autogen>__KeyToKey__ KeyCode::SLASH,        ModifierFlag::FN, KeyCode::CURSOR_DOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::L,            ModifierFlag::FN, KeyCode::PAGEUP</autogen>
        <autogen>__KeyToKey__ KeyCode::DOT,          ModifierFlag::FN, KeyCode::PAGEDOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::K,            ModifierFlag::FN, KeyCode::HOME</autogen>
        <autogen>__KeyToKey__ KeyCode::COMMA,        ModifierFlag::FN, KeyCode::END</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_1,        ModifierFlag::FN, KeyCode::F1</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2,        ModifierFlag::FN, KeyCode::F2</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3,        ModifierFlag::FN, KeyCode::F3</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_4,        ModifierFlag::FN, KeyCode::F4</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_5,        ModifierFlag::FN, KeyCode::F5</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_6,        ModifierFlag::FN, KeyCode::F6</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_7,        ModifierFlag::FN, KeyCode::F7</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_8,        ModifierFlag::FN, KeyCode::F8</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_9,        ModifierFlag::FN, KeyCode::F9</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_0,        ModifierFlag::FN, KeyCode::F10</autogen>
        <autogen>__KeyToKey__ KeyCode::MINUS,        ModifierFlag::FN, KeyCode::F11</autogen>
        <autogen>__KeyToKey__ KeyCode::EQUAL,        ModifierFlag::FN, KeyCode::F12</autogen>
      </item>
      <item>
        <name>Enable Fn+hjkl at HHK to Left/Down/Up/Right</name>
        <identifier>remap.hhkmode_vi_cursor</identifier>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_MULTIPLY, KeyCode::CURSOR_LEFT</autogen>
        <autogen>__KeyToKey__ KeyCode::KEYPAD_SLASH,    KeyCode::CURSOR_DOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::HOME,            KeyCode::CURSOR_UP</autogen>
        <autogen>__KeyToKey__ KeyCode::PAGEUP,          KeyCode::CURSOR_RIGHT</autogen>
      </item>
      <item>
        <name>Change Option_L+1...= to F1...F12 Keys</name>
        <identifier>remap.hhkmode_opt1_optEqual_to_f1_f12</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::OPTION_L,     KeyCode::F1</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::OPTION_L,     KeyCode::F2</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::OPTION_L,     KeyCode::F3</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::OPTION_L,     KeyCode::F4</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::OPTION_L,     KeyCode::F5</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::OPTION_L,     KeyCode::F6</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::OPTION_L,     KeyCode::F7</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::OPTION_L,     KeyCode::F8</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::OPTION_L,     KeyCode::F9</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::OPTION_L,     KeyCode::F10</autogen>
        <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::OPTION_L,     KeyCode::F11</autogen>
        <autogen>__KeyToKey__ KeyCode::EQUAL, ModifierFlag::OPTION_L,     KeyCode::F12</autogen>
      </item>
    </item>

    <item>
      <name>For Targus Bluetooth Presenter</name>
      <item>
        <name>Fix Targus Bluetooth Presenter</name>
        <appendix>Map shift-up to up and shift-down to down</appendix>
        <identifier>remap.targus_bluetooth_presenter_fix</identifier>
        <device_only>DeviceVendor::TARGUS,DeviceProduct::TARGUS_BLUETOOTH_PRESENTER</device_only>
        <autogen>__KeyToKey__ KeyCode::CURSOR_UP, VK_SHIFT, KeyCode::CURSOR_UP</autogen>
        <autogen>__KeyToKey__ KeyCode::CURSOR_DOWN, VK_SHIFT, KeyCode::CURSOR_DOWN</autogen>
      </item>
    </item>

    <item>
      <name>For FILCO FKBN91ML/NB</name>
      <item>
        <name>Swap CapsLock and Control on FILCO FKBN91ML/NB</name>
        <appendix>// We perform it through PC Application Key.</appendix>
        <appendix>// Set CapsLock key code to 110 by PCKeyboardHack.</appendix>
        <identifier>remap.swap_capslock_and_control_FKBN91ML</identifier>
        <block>
          <device_only>DeviceVendor::FILCO,DeviceProduct::FKBN91ML_NB</device_only>
          <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::CAPSLOCK</autogen>
        </block>
        <block>
          <device_not>DeviceVendor::FILCO,DeviceProduct::FKBN91ML_NB</device_not>
          <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::CAPSLOCK</autogen>
        </block>
      </item>
      <item>
        <name>Swap Command_L and Option_L on FILCO FKBN91ML/NB</name>
        <identifier>remap.swap_commandL_and_optionL_FKBN91ML</identifier>
        <block>
          <device_only>DeviceVendor::FILCO,DeviceProduct::FKBN91ML_NB</device_only>
          <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::OPTION_L,  KeyCode::COMMAND_L</autogen>
        </block>
      </item>
    </item>

    <item>
      <name>For Sun Type6 keyboard</name>
      <item>
        <name>Exchange ^ and greater key on Sun Type6 keyboard </name>
        <identifier>remap.sun.greaterkey</identifier>
        <device_only>DeviceVendor::FUJITSU, DeviceProduct::SUN_TYPE_6_KEYBOARD</device_only>
        <!-- The order is important -->
        <autogen>__KeyToKey__
          KeyCode::GERMAN_CIRCUMFLEX, ModifierFlag::OPTION_R | ModifierFlag::NONE,
          KeyCode::KEY_7, ModifierFlag::OPTION_R
        </autogen>
        <autogen>__KeyToKey__
          KeyCode::GERMAN_CIRCUMFLEX, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_7, ModifierFlag::OPTION_L
        </autogen>

        <autogen>__KeyToKey__ KeyCode::GERMAN_CIRCUMFLEX, KeyCode::GERMAN_LESS_THAN</autogen>
        <autogen>__KeyToKey__ KeyCode::GERMAN_LESS_THAN, KeyCode::GERMAN_CIRCUMFLEX</autogen>
      </item>
    </item>
  </item>

  <item>
    <name>For International English Keyboard and ISO Keyboard Users</name>
    <item>
      <name>Improve ISO Keyboard Layout</name>
      <appendix>( '\' to additional Enter, '§' to '`' and '`' to '\' )</appendix>
      <identifier>remap.uk_saneuklayout</identifier>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::BACKSLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Improve ISO Keyboard Layout (Option 2)</name>
      <appendix>( '§' to '`' and '`' to '\' )</appendix>
      <identifier>remap.uk_saneuklayout2</identifier>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::BACKSLASH</autogen>
    </item>
    <item>
      <name>Swap @ and double-quote(")</name>
      <identifier>remap.uk_swap_at_doublequote</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_2, VK_SHIFT, KeyCode::QUOTE, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::QUOTE, VK_SHIFT, KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Swap the Tilda(~) key with Section (§)</name>
      <identifier>remap.iso_swap_tilda_section</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE,  KeyCode::UK_SECTION</autogen>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
    </item>
    <item>
      <name>Make Shift_R the Backslash (\)  and Backslash (\) into an extra Enter</name>
      <identifier>remap.iso_better_enter</identifier>
      <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::BACKSLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Backquote(`) to Backslash(\)</name>
      <identifier>remap.uk_backquote2backslash</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::BACKSLASH</autogen>
    </item>
    <item>
      <name>Backquote(`) to Section(§)</name>
      <identifier>remap.uk_backquote2section</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::UK_SECTION</autogen>
    </item>
    <item>
      <name>Backquote(`) to Shift_L</name>
      <identifier>remap.uk_backquote2shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>Backslash(\) to Option_L+3 (Hash #), Shift+Backslash(\) to Tilde(~)</name>
      <identifier>remap.uk_backslash2hash</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, VK_SHIFT, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::KEY_3, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Forward Delete to Section(§)</name>
      <identifier>remap.uk_forwarddelete2section</identifier>
      <autogen>__KeyToKey__ FROMKEYCODE_FORWARD_DELETE, KeyCode::UK_SECTION</autogen>
    </item>
    <item>
      <name>Section(§) to Option_L+3 (Hash #), Shift+Section(§) to Tilde(~)</name>
      <identifier>remap.uk_section2hash</identifier>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, VK_SHIFT, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::KEY_3, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Section(§) to Command_L</name>
      <identifier>remap.section_to_command_l</identifier>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Section(§) to Control_L</name>
      <identifier>remap.section_to_control_l</identifier>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name>Section(§) to Option_L</name>
      <identifier>remap.section_to_option_l</identifier>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Section(§) to Shift_L</name>
      <identifier>remap.section_to_shift_l</identifier>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>Section(§) to Backquote(`)</name>
      <identifier>remap.uk_section2backquote</identifier>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
    </item>
    <item>
      <name>Section(§) to Backquote(`)</name>
      <appendix>(except virtual machine)</appendix>
      <identifier>remap.uk_section2backquote_ex_vm</identifier>
      <not>VIRTUALMACHINE</not>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
    </item>
    <item>
      <name>Section(§) to Backslash(\)</name>
      <identifier>remap.uk_section2backslash</identifier>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::BACKSLASH</autogen>
    </item>
    <item>
      <name>Section(§) to Forward Delete</name>
      <identifier>remap.uk_section2forwarddelete</identifier>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Section(§) to LeftClick</name>
      <identifier>remap.strangekey_to_leftclick</identifier>
      <autogen>__KeyToPointingButton__ KeyCode::UK_SECTION, PointingButton::LEFT</autogen>
    </item>
  </item>

  <item>
    <name>For Belgian</name>
    <item>
      <name>Change KeyPad Comma(,) to Dot(.)</name>
      <identifier>remap.belgian_keypad_comma_to_dot</identifier>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, KeyCode::KEYPAD_DOT, ModifierFlag::SHIFT_L</autogen>
    </item>
  </item>

  <item>
    <name>For Bulgarian</name>
    <item>
      <name>Change underscore(_) on Japanese keyboard to ч</name>
      <appendix>(For Bulgarian-Phonetic)</appendix>
      <identifier>remap.bulgarian_jis_underscore_to_backquote</identifier>
      <inputsource_only>BULGARIAN</inputsource_only>
      <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, KeyCode::BACKQUOTE</autogen>
    </item>
  </item>

  <item>
    <name>For Canadian</name>
    <item>
      <name>Space to Option_L (when inputsource == canadian)</name>
      <identifier>remap.canadian_space2optionL</identifier>
      <inputsource_only>CANADIAN</inputsource_only>
      <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Space to Option_L (when inputsource == canadian)</name>
      <appendix>(+ When you type Space only, send Space)</appendix>
      <identifier>remap.canadian_space2optionL_space</identifier>
      <inputsource_only>CANADIAN</inputsource_only>
      <autogen>__KeyOverlaidModifier__ KeyCode::SPACE, KeyCode::OPTION_L, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>Synchronize the sign of the keyboard and an input letter</name>
      <appendix>using "U.S. International - PC" as Input Source on Canadian French keyboard.</appendix>
      <appendix>(For example, change Shift+6 to ?)</appendix>
      <identifier>remap.use_us_international_on_canadian_french_keyboard</identifier>
      <!-- / -->
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, ModifierFlag::NONE,           KeyCode::SLASH</autogen>
      <!-- \ -->
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, ModifierFlag::NONE|VK_SHIFT,  KeyCode::BACKSLASH</autogen>
      <!-- | -->
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, ModifierFlag::NONE|VK_OPTION, KeyCode::BACKSLASH, ModifierFlag::SHIFT_L</autogen>

      <!-- ? -->
      <autogen>__KeyToKey__ KeyCode::KEY_6,      ModifierFlag::NONE|VK_SHIFT,  KeyCode::SLASH, VK_SHIFT</autogen>
      <!-- { -->
      <autogen>__KeyToKey__ KeyCode::KEY_7,      ModifierFlag::NONE|VK_OPTION, KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
      <!-- } -->
      <autogen>__KeyToKey__ KeyCode::KEY_8,      ModifierFlag::NONE|VK_OPTION, KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
      <!-- [ -->
      <autogen>__KeyToKey__ KeyCode::KEY_9,      ModifierFlag::NONE|VK_OPTION, KeyCode::BRACKET_LEFT</autogen>
      <!-- ] -->
      <autogen>__KeyToKey__ KeyCode::KEY_0,      ModifierFlag::NONE|VK_OPTION, KeyCode::BRACKET_RIGHT</autogen>
      <!-- ¬ -->
      <autogen>__KeyToKey__ KeyCode::EQUAL,      ModifierFlag::NONE|VK_OPTION, KeyCode::L, ModifierFlag::OPTION_L</autogen>

      <!-- ============================================================ -->

      <!-- ^ (accent) -->
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::NONE,           KeyCode::I, ModifierFlag::OPTION_L</autogen>
      <!-- " (accent) -->
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::NONE|VK_SHIFT,  KeyCode::U, ModifierFlag::OPTION_L</autogen>
      <!-- ` (accent) -->
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::NONE|VK_OPTION, KeyCode::BACKQUOTE, VK_OPTION</autogen>

      <!-- ============================================================ -->

      <!-- ° -->
      <autogen>__KeyToKey__ KeyCode::SEMICOLON,     ModifierFlag::NONE|VK_OPTION, KeyCode::KEY_8, VK_OPTION | ModifierFlag::SHIFT_L</autogen>

      <!-- ç -->
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, ModifierFlag::NONE,           KeyCode::C, ModifierFlag::OPTION_L</autogen>
      <!-- Ç -->
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, ModifierFlag::NONE|VK_SHIFT,  KeyCode::C, ModifierFlag::OPTION_L | VK_SHIFT</autogen>
      <!-- ~ -->
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, ModifierFlag::NONE|VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>

      <!-- è -->
      <autogen>__KeyToKey__ KeyCode::QUOTE,         ModifierFlag::NONE,          KeyCode::BACKQUOTE, KeyCode::E</autogen>
      <!-- È -->
      <autogen>__KeyToKey__ KeyCode::QUOTE,         ModifierFlag::NONE|VK_SHIFT, KeyCode::BACKQUOTE, KeyCode::E, VK_SHIFT</autogen>

      <!-- à -->
      <autogen>__KeyToKey__ KeyCode::BACKSLASH,     ModifierFlag::NONE, KeyCode::BACKQUOTE, KeyCode::A</autogen>
      <!-- à -->
      <autogen>__KeyToKey__ KeyCode::BACKSLASH,     ModifierFlag::NONE|VK_SHIFT, KeyCode::BACKQUOTE, KeyCode::A, VK_SHIFT</autogen>

      <!-- ============================================================ -->

      <!-- ù -->
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::NONE,          KeyCode::BACKQUOTE, KeyCode::U</autogen>
      <!-- Ù -->
      <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::NONE|VK_SHIFT, KeyCode::BACKQUOTE, KeyCode::U, VK_SHIFT</autogen>

      <!-- « -->
      <autogen>__KeyToKey__ KeyCode::Z,     ModifierFlag::NONE|VK_OPTION, KeyCode::BACKSLASH, VK_OPTION</autogen>

      <!-- » -->
      <autogen>__KeyToKey__ KeyCode::X,     ModifierFlag::NONE|VK_OPTION, KeyCode::BACKSLASH, VK_OPTION | ModifierFlag::SHIFT_L</autogen>

      <!-- ' -->
      <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE|VK_SHIFT, KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_L</autogen>
      <!-- < -->
      <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE|VK_OPTION, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>

      <!-- " -->
      <autogen>__KeyToKey__ KeyCode::DOT,   ModifierFlag::NONE|VK_SHIFT, KeyCode::QUOTE, ModifierFlag::SHIFT_L</autogen>

      <!-- > -->
      <autogen>__KeyToKey__ KeyCode::DOT,   ModifierFlag::NONE|VK_OPTION, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>

      <!-- é -->
      <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE,          KeyCode::QUOTE, KeyCode::E</autogen>
      <!-- é -->
      <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE|VK_SHIFT, KeyCode::QUOTE, KeyCode::E, VK_SHIFT</autogen>
    </item>
  </item>
  <item>
    <name>For Czech</name>
    <item>
      <name>Remap keyboard (symbol) shortcuts to standard Windows/Linux style</name>
      <appendix></appendix>
      <appendix>Remap keyboard shortcuts on czech keyboard layout to behave like in Windows with AltGr.</appendix>
      <appendix>Recommended: remap your modifier keys under System Preferences-Keyboard-Modifier Keys</appendix>
      <appendix>under Keyboard Tab</appendix>
      <appendix>Notice: Disabled for X11 - you have to use xmodmap (use xev to get kb codes) under</appendix>
      <appendix>xterm in X11</appendix>
      <appendix></appendix>
      <appendix>Control_R (AltGr) + V = @ ... Control_R (AltGr) + C = &amp;</appendix>
      <appendix>Control_R (AltGr) + W = | ... Control_R (AltGr) + E = €</appendix>
      <appendix>Control_R (AltGr) + B = { ... Control_R (AltGr) + N = }</appendix>
      <appendix>Control_R (AltGr) + F = [ ... Control_R (AltGr) + G = ]</appendix>
      <appendix>Control_R (AltGr) + ů = $ ... Control_R (AltGr) + X = #</appendix>
      <appendix>Control_R (AltGr) + A = ~ ... Control_R (AltGr) + Q = \</appendix>
      <appendix>Control_R (AltGr) + , = &lt; ... Control_R (AltGr) + . = &gt;</appendix>
      <appendix>Control_R (AltGr) + - = * ... "key under esc" to ;</appendix>
      <identifier>remap.czech_win_shortcuts</identifier>
      <not>X11</not>
      <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::CONTROL_R, KeyCode::DOT, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::CONTROL_R, KeyCode::COMMA, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::CONTROL_R, KeyCode::KEY_2, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::CONTROL_R, KeyCode::KEY_4, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::CONTROL_R, KeyCode::KEY_8, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::CONTROL_R, KeyCode::KEY_5, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::CONTROL_R, KeyCode::KEY_7, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::CONTROL_R, KeyCode::KEY_3, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::CONTROL_R, KeyCode::BRACKET_LEFT, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::CONTROL_R, KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::CONTROL_R, KeyCode::R, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::CONTROL_R, KeyCode::KEY_9, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::CONTROL_R, KeyCode::KEY_0, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::CONTROL_R, KeyCode::RUSSIAN_TILDE, ModifierFlag::SHIFT_R</autogen>
      <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::CONTROL_R, KeyCode::RUSSIAN_TILDE</autogen>
      <!-- only on Internal Apple keyboard -->
      <!-- because on Apple internal is swapped keycode with "key in front of Shift_L" and "key under escape" -->
      <block>
        <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0237</device_only>
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CONTROL_R</autogen>
        <autogen>__KeyToKey__ KeyCode::RUSSIAN_PARAGRAPH, KeyCode::SEMICOLON, ModifierFlag::OPTION_R</autogen>
      </block>
      <!-- only on external keyboard -->
      <block>
        <device_not>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0237</device_not>
        <autogen>__KeyToKey__ KeyCode::RUSSIAN_TILDE, KeyCode::SEMICOLON, ModifierFlag::OPTION_R</autogen>
        <autogen>__KeyToKey__ KeyCode::RUSSIAN_PARAGRAPH, KeyCode::RUSSIAN_TILDE</autogen>
      </block>
    </item>
  </item>
  <item>
    <name>For Finnish</name>
    <item>
      <name>Command_L+Shift_L to Command_L+Shift_L (when inputsource == finnish)</name>
      <appendix>(+ When you type Command_L+Shift_L only, change inputsource to english)</appendix>
      <inputsource_only>FINNISH</inputsource_only>
      <identifier>remap.finnish_shiftcommandL2shiftLcommandL_english</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, VK_COMMAND, KeyCode::SHIFT_L, ModifierFlag::COMMAND_L, KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH</autogen>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, VK_SHIFT, KeyCode::COMMAND_L, ModifierFlag::SHIFT_L, KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH</autogen>
    </item>
    <item>
      <name>Command_L+Shift_L to Command_L+Shift_L</name>
      <appendix>(+ When you type Command_L+Shift_L only, change inputsource to finnish)</appendix>
      <!-- <inputsource_only>ENGLISH</inputsource_only> -->
      <identifier>remap.finnish_shiftcommandL2shiftLcommandL_finnish</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, VK_COMMAND, KeyCode::SHIFT_L, ModifierFlag::COMMAND_L, KeyCode::VK_CHANGE_INPUTSOURCE_FINNISH</autogen>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, VK_SHIFT, KeyCode::COMMAND_L, ModifierFlag::SHIFT_L, KeyCode::VK_CHANGE_INPUTSOURCE_FINNISH</autogen>
    </item>
  </item>
  <item>
    <name>For French</name>
    <item>
      <name>Change KeyPad Comma(,) to Dot(.)</name>
      <identifier>remap.french_keypad_comma_to_dot</identifier>
      <inputsource_only>FRENCH</inputsource_only>
      <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, KeyCode::KEYPAD_DOT, ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Swap $ and € on French</name>
      <identifier>remap.french_swap_dollar_and_euro</identifier>
      <inputsource_only>FRENCH</inputsource_only>
      <autogen>__KeyToKey__ KeyCode::FRENCH_DOLLAR, ModifierFlag::NONE,
        KeyCode::FRENCH_DOLLAR, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::FRENCH_DOLLAR, VK_OPTION | ModifierFlag::NONE,
        KeyCode::FRENCH_DOLLAR</autogen>
    </item>
    <item>
      <name>Shift_L to Shift_L</name>
      <appendix>(+ When you type Shift_L only, send Backslash)</appendix>
      <identifier>remap.french_shiftL2shiftL_backslash</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::DOT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Shift_R to Shift_R</name>
      <appendix>(+ When you type Shift_R only, send Backslash)</appendix>
      <identifier>remap.french_shiftR2shiftR_backslash</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::DOT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Option+Shift+4 to Left Brace, Option+Shift+Minus to Right Brace</name>
      <appendix>Option+5 to Quote, Option+Right Paren to Minus</appendix>
      <identifier>remap.french_swap_brackets_and_braces</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_4,        VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::FRENCH_MINUS, VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::FRENCH_RIGHT_PAREN, ModifierFlag::OPTION_L</autogen>

      <autogen>__KeyToKey__ KeyCode::KEY_5,              VK_OPTION | ModifierFlag::NONE, KeyCode::KEY_4, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::FRENCH_RIGHT_PAREN, VK_OPTION | ModifierFlag::NONE, KeyCode::FRENCH_MINUS, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Make MacBook AZERTY closer to the standard latin-9 mapping</name>
      <appendix>(For "French - Numerical" users)</appendix>
      <identifier>remap.french_azerty_to_latin9</identifier>
      <!-- - the key -/_ (where you put the brace), I would like to be =/+, that is, = on normal and + on SHIFT; -->
      <autogen>__KeyToKey__ KeyCode::FRENCH_MINUS, ModifierFlag::NONE, KeyCode::FRENCH_EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::FRENCH_MINUS, VK_SHIFT | ModifierFlag::NONE, KeyCode::FRENCH_EQUAL, ModifierFlag::SHIFT_L</autogen>
      <!-- - the key 6, I would like to do -/6/|  (normal -, SHIFT 6, ALT+SHIFT |) -->
      <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::NONE, KeyCode::FRENCH_MINUS</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_6, VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
      <!-- - the key =/+ I would like to be §/! -->
      <autogen>__KeyToKey__ KeyCode::FRENCH_EQUAL, ModifierFlag::NONE, KeyCode::KEY_6</autogen>
      <autogen>__KeyToKey__ KeyCode::FRENCH_EQUAL, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8</autogen>
      <!-- - ALT+SHIFT+2 gives ~ -->
      <autogen>__KeyToKey__ KeyCode::KEY_2, VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::N, ModifierFlag::OPTION_L</autogen>
      <!-- - ALT+SHIFT+3 gives # -->
      <autogen>__KeyToKey__ KeyCode::KEY_3, VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::BACKSLASH, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Forgiving open brackets binding.</name>
      <appendix>Command+4 to Left Brace, Command+5 to Left Bracket</appendix>
      <identifier>remap.french_brackets_hack</identifier>
      <!-- command+4 to { -->
      <autogen>__KeyToKey__ KeyCode::KEY_4, VK_COMMAND | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::OPTION_L</autogen>
      <!-- command+5 to [ -->
      <autogen>__KeyToKey__ KeyCode::KEY_5, VK_COMMAND | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Command_L+Circonflexe(^) to ´(Option+Shift+1)</name>
      <identifier>remap.french_commandLhat2optionshift1</identifier>
      <autogen>__KeyToKey__ KeyCode::FRENCH_HAT, ModifierFlag::COMMAND_L | ModifierFlag::NONE, KeyCode::KEY_1, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Command_R+Circonflexe(^) to ´(Option+Shift+1)</name>
      <identifier>remap.french_commandRhat2optionshift1</identifier>
      <autogen>__KeyToKey__ KeyCode::FRENCH_HAT, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Dvorak and bépo: Command_R to Option_R</name>
      <identifier>remap.french_inputsource_dvorak_bepo_command_r_to_option_r</identifier>
      <inputsource_only>DVORAK,BEPO</inputsource_only>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
    </item>
  </item>
  <item>
    <name>For German</name>
    <item>
      <name>Adapt Option_R to PC's AltGr (1)</name>
      <identifier>remap.german_adapt_option_r_to_pcs_altgr_1</identifier>
      <appendix>______________________________________-</appendix>
      <appendix>Change Option_R+7 to {</appendix>
      <appendix>Change Option_R+8 to [</appendix>
      <appendix>Change Option_R+9 to ]</appendix>
      <appendix>Change Option_R+0 to }</appendix>
      <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::OPTION_R, KeyCode::KEY_5, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::OPTION_R, KeyCode::KEY_6, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::OPTION_R, KeyCode::KEY_8, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::OPTION_R, KeyCode::KEY_9, ModifierFlag::OPTION_R</autogen>
      <appendix>______________________________________-</appendix>
    </item>
    <item>
      <name>Adapt Option_R to PC's AltGr (2)</name>
      <identifier>remap.german_adapt_option_r_to_pcs_altgr_2</identifier>
      <appendix>Change Option_R+'Q' to Option_R+'L' ( '@' )</appendix>
      <appendix>Change Option_R+'+' to Option_R+'N' ( '~' )</appendix>
      <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::OPTION_R, KeyCode::L, ModifierFlag::OPTION_R</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_R, KeyCode::N, ModifierFlag::OPTION_R</autogen>
    </item>
    <item><name>____________________________________________________________</name></item>
    <item>
      <name>Option+7 to {</name>
      <identifier>remap.german_option7_to_left_brace</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_7, VK_OPTION, KeyCode::KEY_8, VK_OPTION</autogen>
    </item>
    <item>
      <name>Option+8 to [</name>
      <identifier>remap.german_option8_to_left_bracket</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_8, VK_OPTION, KeyCode::KEY_5, VK_OPTION</autogen>
    </item>
    <item>
      <name>Option+9 to ]</name>
      <identifier>remap.german_option9_to_right_bracket</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_9, VK_OPTION, KeyCode::KEY_6, VK_OPTION</autogen>
    </item>
    <item>
      <name>Option+0 to }</name>
      <identifier>remap.german_option0_to_right_brace</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_0, VK_OPTION, KeyCode::KEY_9, VK_OPTION</autogen>
    </item>
    <item><name>____________________________________________________________</name></item>
    <item>
      <name>Control+Ö to {</name>
      <identifier>remap.german_controlO_to_left_brace</identifier>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_CONTROL, KeyCode::KEY_8, VK_OPTION</autogen>
    </item>
    <item>
      <name>Command+Ö to [</name>
      <identifier>remap.german_commandO_to_left_bracket</identifier>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_COMMAND, KeyCode::KEY_5, VK_OPTION</autogen>
    </item>
    <item>
      <name>Command+Ä to ]</name>
      <identifier>remap.german_commandA_to_right_bracket</identifier>
      <autogen>__KeyToKey__ KeyCode::QUOTE, VK_COMMAND, KeyCode::KEY_6, VK_OPTION</autogen>
    </item>
    <item>
      <name>Control+Ä to }</name>
      <identifier>remap.german_controlA_to_left_brace</identifier>
      <autogen>__KeyToKey__ KeyCode::QUOTE, VK_CONTROL, KeyCode::KEY_9, VK_OPTION</autogen>
    </item>
    <item><name>____________________________________________________________</name></item>
    <item>
      <name>Control+PLUS to ~</name>
      <identifier>remap.german_controlPlus_to_tilde</identifier>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, VK_CONTROL, KeyCode::N, VK_OPTION</autogen>
    </item>
    <item>
      <name>Option+PLUS to ~</name>
      <identifier>remap.german_optionPlus_to_tilde</identifier>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, VK_OPTION, KeyCode::N, VK_OPTION</autogen>
    </item>
    <item>
      <name>Command+MINUS to Backslash(\)</name>
      <identifier>remap.german_commandMinus_to_backslash</identifier>
      <autogen>__KeyToKey__ KeyCode::SLASH, VK_COMMAND, KeyCode::KEY_7, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Control+MINUS to Slash(/)</name>
      <identifier>remap.german_controlMinus_to_slash</identifier>
      <autogen>__KeyToKey__ KeyCode::SLASH, VK_CONTROL, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Option+ß to Backslash(\)</name>
      <identifier>remap.german_optionbeta2backslash</identifier>
      <autogen>__KeyToKey__ KeyCode::MINUS, VK_OPTION, KeyCode::KEY_7, ModifierFlag::SHIFT_L | VK_OPTION</autogen>
    </item>
    <item>
      <name>Option+Q to @</name>
      <identifier>remap.german_optionQ2atmark</identifier>
      <autogen>__KeyToKey__ KeyCode::Q, VK_OPTION, KeyCode::L, VK_OPTION</autogen>
    </item>
    <item>
      <name>Quote(´) to Forward Delete</name>
      <identifier>remap.german_quote2forwarddelete</identifier>
      <autogen>__KeyToKey__ KeyCode::GERMAN_QUOTE, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Command+Ü to |</name>
      <identifier>remap.german_commandU2pipe</identifier>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_COMMAND, KeyCode::KEY_7, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Control+Ü to @</name>
      <identifier>remap.german_controlU2atmark</identifier>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::L, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Option+Less-Than(&lt;) to |</name>
      <identifier>remap.german_optionLessthan_to_pipe</identifier>
      <autogen>__KeyToKey__ KeyCode::GERMAN_LESS_THAN, VK_OPTION, KeyCode::KEY_7, VK_OPTION</autogen>
    </item>
    <item>
      <name>Swap Circumflex(^) and Less-Than(&lt;)</name>
      <identifier>remap.german_swap_circumflex_lessthan</identifier>
      <autogen>__KeyToKey__ KeyCode::GERMAN_CIRCUMFLEX, KeyCode::GERMAN_LESS_THAN</autogen>
      <autogen>__KeyToKey__ KeyCode::GERMAN_LESS_THAN, KeyCode::GERMAN_CIRCUMFLEX</autogen>
    </item>
    <item>
      <name>Swap Circumflex(^) and Less-Than(&lt;)</name>
      <appendix>(only in virtual machine)</appendix>
      <identifier>remap.german_swap_circumflex_lessthan_vm</identifier>
      <only>VIRTUALMACHINE</only>
      <autogen>__KeyToKey__ KeyCode::GERMAN_CIRCUMFLEX, KeyCode::GERMAN_LESS_THAN</autogen>
      <autogen>__KeyToKey__ KeyCode::GERMAN_LESS_THAN, KeyCode::GERMAN_CIRCUMFLEX</autogen>
    </item>
    <item>
      <name>Swap Circumflex(^) and Less-Than(&lt;) on PC Keyboard</name>
      <appendix>(+ Option+Less-Than(&lt;) to Pipe(|))</appendix>
      <identifier>remap.german_swap_circumflex_lessthan_pckeyboard</identifier>
      <not>VIRTUALMACHINE</not>
      <autogen>__KeyToKey__ KeyCode::GERMAN_PC_LESS_THAN, VK_OPTION | ModifierFlag::NONE,
        KeyCode::KEY_7, VK_OPTION</autogen>
      <autogen>__KeyToKey__ KeyCode::GERMAN_PC_LESS_THAN, KeyCode::GERMAN_LESS_THAN</autogen>
      <autogen>__KeyToKey__ KeyCode::GERMAN_LESS_THAN,    KeyCode::GERMAN_CIRCUMFLEX</autogen>
    </item>
    <item>
      <name>Change Command+Q to @ (Option_L+L)</name>
      <item>
        <name>Command_L+Q to @</name>
        <identifier>remap.german_commandLQ2optionLL</identifier>
        <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::COMMAND_L, KeyCode::L, ModifierFlag::OPTION_L</autogen>
      </item>
      <item>
        <name>Command_R+Q to @</name>
        <identifier>remap.german_commandRQ2optionLL</identifier>
        <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::COMMAND_R, KeyCode::L, ModifierFlag::OPTION_L</autogen>
      </item>
    </item>
    <item>
      <name>map Developer Keyboard Layout</name>
      <item>
        <name>map square bracket to PC Layout</name>
        <appendix>move Command_R + 8 to Option_L + 5</appendix>
        <appendix>move Command_R + 9 to Option_L + 6</appendix>
        <identifier>remap.german_map_square_bracket</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::COMMAND_R, KeyCode::KEY_5, ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::COMMAND_R, KeyCode::KEY_6, ModifierFlag::OPTION_L</autogen>
      </item>
    </item>
    <item>
      <name>NEO Keyboard Layout Fixes</name>
      <appendix>BACKSLASH (#) to OPTION_R</appendix>
      <appendix></appendix>
      <appendix>// To change CAPSLOCK to OPTION_L,</appendix>
      <appendix>// install PCKeyboardHack and change CapsLock keycode to 58.</appendix>
      <identifier>remap.german_neo</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::OPTION_R</autogen>
    </item>
    <item>
      <name>Umlaute 4 Programmierung umschreiben</name>
      <appendix>ä to ae</appendix>
      <appendix>ö to oe</appendix>
      <appendix>ü to ue</appendix>
      <identifier>remap.german_a_to_ae</identifier>
      <!-- ä to ae -->
      <autogen>__KeyToKey__ KeyCode::QUOTE,           KeyCode::A,           KeyCode::E</autogen>
      <!-- Ä to AE -->
      <autogen>__KeyToKey__ KeyCode::QUOTE, VK_SHIFT, KeyCode::A, VK_SHIFT, KeyCode::E, VK_SHIFT</autogen>
      <!-- ö to oe -->
      <autogen>__KeyToKey__ KeyCode::SEMICOLON,           KeyCode::O,           KeyCode::E</autogen>
      <!-- Ö to OE -->
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_SHIFT, KeyCode::O, VK_SHIFT, KeyCode::E, VK_SHIFT</autogen>
      <!-- ü to ue -->
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT,           KeyCode::U,           KeyCode::E</autogen>
      <!-- Ü to UE -->
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_SHIFT, KeyCode::U, VK_SHIFT, KeyCode::E, VK_SHIFT</autogen>
    </item>
    <item>
      <name>German Umlaute on US Keyboard Layout</name>
      <appendix>Change Option_R+; to ö</appendix>
      <appendix>Change Option_R+' to ä</appendix>
      <appendix>Change Option_R+[ to ü</appendix>
      <appendix>Change Option_R+- to ß</appendix>
      <identifier>remap.org.openhort.german_umlaute_on_en_US</identifier>

      <autogen>__KeyToKey__
        KeyCode::SEMICOLON, ModifierFlag::OPTION_R | VK_SHIFT | ModifierFlag::NONE,
        KeyCode::U, ModifierFlag::OPTION_R, KeyCode::O, VK_SHIFT
      </autogen>
      <autogen>__KeyToKey__
        KeyCode::SEMICOLON, ModifierFlag::OPTION_R | ModifierFlag::NONE,
        KeyCode::U, ModifierFlag::OPTION_R, KeyCode::O
      </autogen>

      <autogen>__KeyToKey__
        KeyCode::QUOTE, ModifierFlag::OPTION_R | VK_SHIFT | ModifierFlag::NONE,
        KeyCode::U, ModifierFlag::OPTION_R, KeyCode::A, VK_SHIFT
      </autogen>
      <autogen>__KeyToKey__
        KeyCode::QUOTE, ModifierFlag::OPTION_R | ModifierFlag::NONE,
        KeyCode::U, ModifierFlag::OPTION_R, KeyCode::A
      </autogen>

      <autogen>__KeyToKey__
        KeyCode::BRACKET_LEFT, ModifierFlag::OPTION_R | VK_SHIFT | ModifierFlag::NONE,
        KeyCode::U, ModifierFlag::OPTION_R, KeyCode::U, VK_SHIFT
      </autogen>
      <autogen>__KeyToKey__
        KeyCode::BRACKET_LEFT, ModifierFlag::OPTION_R | ModifierFlag::NONE,
        KeyCode::U, ModifierFlag::OPTION_R, KeyCode::U
      </autogen>

      <autogen>__KeyToKey__
        KeyCode::MINUS, ModifierFlag::OPTION_R | ModifierFlag::NONE,
        KeyCode::S, ModifierFlag::OPTION_R
      </autogen>
    </item>
  </item>
  <item>
    <name>For Italian</name>
    <item>
      <name>Exchange Backslash(\) and Less-Than(&lt;)</name>
      <identifier>remap.italian_exchange_backslash_less_than</identifier>
      <autogen>__KeyToKey__ KeyCode::ITALIAN_BACKSLASH, KeyCode::ITALIAN_LESS_THAN</autogen>
      <autogen>__KeyToKey__ KeyCode::ITALIAN_LESS_THAN, KeyCode::ITALIAN_BACKSLASH</autogen>
    </item>
    <item>
      <name>Option+AEIUO to àèìùò on "Italian Input Source"</name>
      <identifier>remap.italian_optionAEIUO_grave_italian</identifier>
      <autogen>__KeyToKey__ KeyCode::A, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::A</autogen>
      <autogen>__KeyToKey__ KeyCode::E, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::E</autogen>
      <autogen>__KeyToKey__ KeyCode::I, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::I</autogen>
      <autogen>__KeyToKey__ KeyCode::U, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::U</autogen>
      <autogen>__KeyToKey__ KeyCode::O, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::O</autogen>
    </item>
    <item>
      <name>Option+AEIUO to àèìùò on "U.S. Input Source"</name>
      <identifier>remap.italian_optionAEIUO_grave_us</identifier>
      <autogen>__KeyToKey__ KeyCode::A, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::A</autogen>
      <autogen>__KeyToKey__ KeyCode::E, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::E</autogen>
      <autogen>__KeyToKey__ KeyCode::I, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::I</autogen>
      <autogen>__KeyToKey__ KeyCode::U, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::U</autogen>
      <autogen>__KeyToKey__ KeyCode::O, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::O</autogen>
    </item>
    <item>
      <name>KeyPad Comma(,) to Dot(.) on "Italian Pro Input Source"</name>
      <identifier>remap.italian_keypadcomma2dot</identifier>
      <!-- ITALIAN_KEYPAD_COMMA is 0x41 (== KEYPAD_DOT) -->
      <autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, KeyCode::DOT</autogen>
    </item>
  </item>
  <item>
    <name>For Japanese</name>
    <item>
      <name>左右のコマンドキー（⌘）を「英数／かな」としても使う</name>
      <appendix>（左コマンドキーを英数キーにする）</appendix>
      <appendix>（右コマンドキーをかなキーにする）</appendix>
      <item>
        <name>コマンドキーの動作を優先モード</name>
        <appendix>（コマンドキーの空打ちで「英数／かな」）</appendix>
        <appendix>（コマンドキーを押している間に他のキーを打つと通常のコマンドキーとして動作）</appendix>
        <identifier>remap.jis_command2eisuukana_prefer_command</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>____________________________________________________________</name>
        <identifier vk_config="true">notsave.jis_command2eisuukana_prefer_eisuukana</identifier>
        <autogen>__ShowStatusMessage__ Command</autogen>
      </item>
      <item>
        <name>英数／かなキーの動作を優先モード</name>
        <appendix>（基本的に英数／かなキーとして動作させる）</appendix>
        <appendix>（コマンドキーとして動作させるにはコマンドキーを長押しする）</appendix>
        <appendix>（長押しの時間は Key Repeat タブの [Holding Key to Key] Holding Threshold で指定します）</appendix>
        <identifier>remap.jis_command2eisuukana_prefer_eisuukana</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::COMMAND_L, KeyCode::JIS_EISUU, KeyCode::VK_NONE, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_jis_command2eisuukana_prefer_eisuukana, ModifierFlag::COMMAND_L</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::COMMAND_R, KeyCode::JIS_KANA,  KeyCode::VK_NONE, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_jis_command2eisuukana_prefer_eisuukana, ModifierFlag::COMMAND_R</autogen>
      </item>
    </item>

    <item>
      <name>Change Backquote(`) Key</name>
      <item>
        <name>Backquote(`) to KANA/EISUU (toggle)</name>
        <identifier>remap.jis_backquote_kana_eisuu</identifier>
        <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
    </item>
    <item>
      <name>Change Command_L Key</name>
      <item>
        <name>Command_L to EISUU</name>
        <identifier>remap.jis_commandL2eisuu</identifier>
        <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Command_L to Command_L</name>
        <appendix>(+ When you type Command_L only, send EISUU)</appendix>
        <identifier>remap.jis_commandL2commandL_eisuu</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Command_L to Command_L</name>
        <appendix>(+ When you type Command_L only, send EISUU)</appendix>
        <appendix>(+ When you type Any modifiers+Command_L only, send EISUU)</appendix>
        <identifier>remap.jis_commandL2commandL_eisuu_ex</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, VK_MOD_ANY, KeyCode::COMMAND_L, VK_MOD_ANY, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Command_L to Command_L</name>
        <appendix>(+ When you type Command_L only, send EISUU)</appendix>
        <appendix>(+ When you type Command_R+Command_L only, toggle Complete Vi Mode)</appendix>
        <identifier>remap.jis_commandL2commandL_vimode_eisuu</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, ModifierFlag::COMMAND_R, KeyCode::COMMAND_L, ModifierFlag::COMMAND_R, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Command_L to Command_L (except Terminal)</name>
        <appendix>(+ When you type Command_L only, send EISUU)</appendix>
        <identifier>remap.jis_commandL2commandL_eisuu_ex_term</identifier>
        <not>TERMINAL</not>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Command_L to Command_L</name>
        <appendix>(+ When you type Command_L only, send KANA/EISUU (toggle))</appendix>
        <identifier>remap.jis_commandL2commandL_toggle_kana_eisuu</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
      <item>
        <name>Command_L to Control_L</name>
        <appendix>(+ When you type Command_L only, send EISUU)</appendix>
        <identifier>remap.jis_commandL2controlL_eisuu</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::CONTROL_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Command_L to Control_L</name>
        <appendix>(+ When you type Command_L only, send EISUU)</appendix>
        <appendix>(+ When you type Shift+Command_L only, send ESCAPE)</appendix>
        <identifier>remap.jis_commandL2controlL_eisuu_escape</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, VK_SHIFT, KeyCode::CONTROL_L, ModifierFlag::SHIFT_L, KeyCode::ESCAPE</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::CONTROL_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Command_L to Control_L</name>
        <appendix>(+ When you type Command_L only, send EISUU)</appendix>
        <appendix>(+ When you type Command_R+Command_L only, toggle Complete Vi Mode)</appendix>
        <appendix>(+ When you type Shift+Command_L only, send ESCAPE)</appendix>
        <identifier>remap.jis_commandL2controlL_eisuu_vimode_escape</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, VK_SHIFT, KeyCode::CONTROL_L, ModifierFlag::SHIFT_L, KeyCode::ESCAPE</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, ModifierFlag::COMMAND_R, KeyCode::CONTROL_L, ModifierFlag::COMMAND_R, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::CONTROL_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Command_L to Option_L</name>
        <appendix>(+ When you type Command_L only, send EISUU)</appendix>
        <identifier>remap.jis_commandL2optionL_eisuu</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::OPTION_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Command_L x2 to EISUU</name>
        <identifier>remap.jis_commandL_x2_to_eisuu</identifier>
        <autogen>__DoublePressModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Command_L x2 to EISUU x2 (for Kotoeri Users)</name>
        <identifier>remap.jis_commandL_x2_to_eisuu_x2</identifier>
        <autogen>__DoublePressModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::JIS_EISUU, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Use Command_L as KANA/EISUU (toggle)</name>
        <identifier>remap.jis_unify_kana_eisuu_to_commandL</identifier>
        <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
    </item>
    <item>
      <name>Change Command_R Key</name>
      <item>
        <name>Command_R to EISUU</name>
        <identifier>remap.jis_commandR2eisuu</identifier>
        <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Command_R to KANA</name>
        <identifier>remap.jis_commandR2kana</identifier>
        <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>Command_R to KANA</name>
        <appendix>(+ Any modifiers+Command_R to KANA)</appendix>
        <identifier>remap.jis_commandR2kana_ex</identifier>
        <autogen>__KeyToKey__ KeyCode::COMMAND_R, VK_MOD_ANY, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>Command_R to Shift_L+KANA</name>
        <identifier>remap.jis_commandR2shiftLkana</identifier>
        <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::JIS_KANA, ModifierFlag::SHIFT_L</autogen>
      </item>
      <item>
        <name>Command_R to Command_R</name>
        <appendix>(+ When you type Command_R only, send KANA)</appendix>
        <identifier>remap.jis_commandR2commandR_kana</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>Command_R to Command_R</name>
        <appendix>(+ When you type Command_R only, send KANA)</appendix>
        <appendix>(+ When you type Command_L+Command_R only, toggle Complete Vi Mode)</appendix>
        <identifier>remap.jis_commandR2commandR_vimode_kana</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, ModifierFlag::COMMAND_L, KeyCode::COMMAND_R, KeyCode::COMMAND_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>Command_R to Command_R</name>
        <appendix>(+ When you type Command_R only, send KANA/EISUU (toggle))</appendix>
        <identifier>remap.jis_commandR2commandR_toggle_kana_eisuu</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
      <item>
        <name>Command_R to Command_R</name>
        <appendix>(+ When you type Command_R only, send KANA)</appendix>
        <appendix>(+ When you type Shift+Command_R only, send Return)</appendix>
        <identifier>remap.jis_commandR2commandR_kana_return</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, VK_SHIFT, KeyCode::COMMAND_R, ModifierFlag::SHIFT_L, KeyCode::RETURN</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>Command_R to Command_R</name>
        <appendix>(+ When you type Command_R only, send KANA)</appendix>
        <appendix>(+ When you type Control+Command_R only, toggle Complete Vi Mode)</appendix>
        <appendix>(+ When you type Shift+Command_R only, send Return)</appendix>
        <identifier>remap.jis_commandR2commandR_kana_vimode_return</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, VK_SHIFT, KeyCode::COMMAND_R, ModifierFlag::SHIFT_L, KeyCode::RETURN</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, VK_CONTROL, KeyCode::COMMAND_R, ModifierFlag::CONTROL_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>Command_R to Control_L</name>
        <appendix>(+ When you type Command_R only, send KANA)</appendix>
        <identifier>remap.jis_commandR2controlL</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::CONTROL_L, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>Command_R to Option_R</name>
        <appendix>(+ When you type Command_R only, send KANA)</appendix>
        <appendix>(+ When you type Shift+Command_R only, send Return)</appendix>
        <identifier>remap.jis_commandR2optionR_kana_return</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, VK_SHIFT, KeyCode::OPTION_R, VK_SHIFT, KeyCode::RETURN</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::OPTION_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>Command_R x2 to KANA</name>
        <identifier>remap.jis_commandR_x2_to_kana</identifier>
        <autogen>__DoublePressModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>Command_R x2 to KANA x2 (for Kotoeri Users)</name>
        <identifier>remap.jis_commandR_x2_to_kana_x2</identifier>
        <autogen>__DoublePressModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::JIS_KANA, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>Use Command_R as KANA/EISUU (toggle)</name>
        <identifier>remap.jis_unify_kana_eisuu_to_commandR</identifier>
        <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
    </item>
    <item>
      <name>Change Delete Key</name>
      <item>
        <name>Delete to KANA</name>
        <identifier>remap.jis_delete2kana</identifier>
        <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::JIS_KANA</autogen>
      </item>
    </item>
    <item>
      <name>Change Eject Key</name>
      <appendix>*** We recommend you to use "NoEjectDelay" together when you change eject key.</appendix>
      <appendix>*** &#8594; http://pqrs.org/macosx/keyremap4macbook/extra.html</appendix>
      <item>
        <name>Eject to EISUU,F13 (if no modifiers pressed)</name>
        <identifier>remap.jis_eject2eisuuf13_withoutmodifiers</identifier>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::JIS_EISUU, KeyCode::F13</autogen>
      </item>
    </item>
    <item>
      <name>Change Escape Key</name>
      <item>
        <name>Escape to EISUU+Escape</name>
        <identifier>remap.jis_escape2eisuuAndEscape</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::ESCAPE, KeyCode::JIS_EISUU, KeyCode::ESCAPE</autogen>
      </item>
    </item>
    <item>
      <name>Change Option_L Key</name>
      <item>
        <name>Option_L to Option_L</name>
        <appendix>(+ When you type Option_L only, send EISUU)</appendix>
        <identifier>remap.jis_optionL2optionL_eisuu</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_L, KeyCode::OPTION_L, KeyCode::JIS_EISUU</autogen>
      </item>
    </item>
    <item>
      <name>Change Option_R Key</name>
      <item>
        <name>Option_R to Option_R</name>
        <appendix>(+ When you type Option_R only, send KANA)</appendix>
        <identifier>remap.jis_optionR2optionR_kana</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_R, KeyCode::OPTION_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>Option_R to EISUU</name>
        <identifier>remap.jis_optionR2eisuu</identifier>
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Option_R to KANA</name>
        <identifier>remap.jis_optionR2kana</identifier>
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>Use Option_R as KANA/EISUU (toggle)</name>
        <identifier>remap.jis_unify_kana_eisuu_to_optionR</identifier>
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
    </item>
    <item>
      <name>Change Return Key</name>
      <item>
        <name>Return to KANA</name>
        <identifier>remap.jis_return2kana</identifier>
        <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::JIS_KANA</autogen>
      </item>
    </item>
    <item>
      <name>Change Right Bracket(]) Key</name>
      <item>
        <name>Right Bracket(]) to Backquote(`)</name>
        <identifier>remap.jis_rightbracket2backquote</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, KeyCode::BACKQUOTE</autogen>
      </item>
    </item>
    <item>
      <name>Change Semicolon(;) Key</name>
      <item>
        <name>Semicolon to Sticky Shift_L</name>
        <appendix>(effective only when input source is Japanese)</appendix>
        <identifier>remap.jis_semicolon2stickyshiftL</identifier>
        <inputsource_only>JAPANESE</inputsource_only>
        <autogen>__KeyOverlaidModifier__ KeyCode::SEMICOLON, KeyCode::SHIFT_L, KeyCode::VK_STICKY_SHIFT_L</autogen>
      </item>
      <item>
        <name>セミコロン(;)は常に半角</name>
        <identifier>remap.jis_semicolon_roman</identifier>
        <inputsource_only>JAPANESE</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::SEMICOLON,
          Option::KEYTOKEY_BEFORE_KEYDOWN, KeyCode::JIS_EISUU,
          Option::KEYTOKEY_AFTER_KEYUP, KeyCode::JIS_KANA
        </autogen>
      </item>
    </item>
    <item>
      <name>Change Space Key</name>
      <item>
        <name>Command+Space to KANA/EISUU (toggle)</name>
        <identifier>remap.jis_commandSpace2toggle_kana_eisuu</identifier>
        <autogen>__KeyToKey__ KeyCode::SPACE, VK_COMMAND | ModifierFlag::NONE, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
      <item>
        <name>「左コマンド+スペース」を「英数」、「右コマンド+スペース」を「かな」</name>
        <appendix>(Command_L+Space to EISUU, Command_R+Space to KANA)</appendix>
        <identifier>remap.jis_commandLspace2eisuu_commandRspace2kana</identifier>
        <autogen>__KeyToKey__ KeyCode::SPACE, ModifierFlag::COMMAND_L, KeyCode::JIS_EISUU</autogen>
        <autogen>__KeyToKey__ KeyCode::SPACE, ModifierFlag::COMMAND_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>Shift+Space to KANA/EISUU (toggle)</name>
        <identifier>remap.jis_shiftSpace2toggle_kana_eisuu</identifier>
        <autogen>__KeyToKey__ KeyCode::SPACE, VK_SHIFT, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
      <item>
        <name>Shift+Space to KANA/EISUU (toggle) (except Emacs.app)</name>
        <identifier>remap.jis_shiftSpace2toggle_kana_eisuu_ex_emacs</identifier>
        <not>EMACS</not>
        <autogen>__KeyToKey__ KeyCode::SPACE, VK_SHIFT, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
      <item>
        <name>Shift+Space to Equal</name>
        <appendix>(Disable when KANA mode)</appendix>
        <identifier>remap.jis_shiftSpace2equal</identifier>
        <inputsource_only>ROMAN</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, VK_SHIFT, KeyCode::EQUAL</autogen>
      </item>
    </item>
    <item>
      <name>Change Tab Key</name>
      <item>
        <name>Tab to EISUU</name>
        <identifier>remap.jis_tab2eisuu</identifier>
        <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::JIS_EISUU</autogen>
      </item>
    </item>
    <item>
      <name>Change EISUU Key</name>
      <item>
        <name>EISUU to Command_L</name>
        <identifier>remap.jis_eisuu2commandL</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::COMMAND_L</autogen>
      </item>
      <item>
        <name>EISUU to Command_L</name>
        <appendix>(+ When you type EISUU only, send EISUU)</appendix>
        <identifier>remap.jis_eisuu2commandL_eisuu</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_EISUU, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>EISUU to Command_L (except Terminal)</name>
        <appendix>(+ When you type EISUU only, send EISUU)</appendix>
        <not>TERMINAL</not>
        <identifier>remap.jis_eisuu2commandL_eisuu_ex_term</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_EISUU, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>EISUU to Control_L</name>
        <identifier>remap.jis_eisuu2controlL</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::CONTROL_L</autogen>
      </item>
      <item>
        <name>EISUU to Control_L</name>
        <appendix>(+ When you type EISUU only, send EISUU)</appendix>
        <identifier>remap.jis_eisuu2controlL_eisuu</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_EISUU, KeyCode::CONTROL_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>EISUU to Control_L</name>
        <appendix>(+ When you type Shift+EISUU only, send Escape)</appendix>
        <appendix>(+ When you type EISUU only, send EISUU)</appendix>
        <identifier>remap.jis_eisuu2controlL_eisuu_escape</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_EISUU, VK_SHIFT, KeyCode::CONTROL_L, ModifierFlag::SHIFT_L, KeyCode::ESCAPE</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_EISUU, KeyCode::CONTROL_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>EISUU to Control_L</name>
        <appendix>(+ When you type Shift+EISUU only, send Escape)</appendix>
        <appendix>(+ When you type Command_R+EISUU only, toggle Complete Vi Mode)</appendix>
        <appendix>(+ When you type EISUU only, send EISUU)</appendix>
        <identifier>remap.jis_eisuu2controlL_eisuu_vimode_escape</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_EISUU, VK_SHIFT, KeyCode::CONTROL_L, ModifierFlag::SHIFT_L, KeyCode::ESCAPE</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_EISUU, ModifierFlag::COMMAND_R, KeyCode::CONTROL_L, ModifierFlag::COMMAND_R, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_EISUU, KeyCode::CONTROL_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>EISUU to Fn</name>
        <identifier>remap.jis_eisuu2fn</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::FN</autogen>
      </item>
      <item>
        <name>EISUU to Option_L</name>
        <identifier>remap.jis_eisuu2optionL</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::OPTION_L</autogen>
      </item>
      <item>
        <name>EISUU to Option_L (only in Terminal)</name>
        <appendix>(+ When you type EISUU only, send EISUU)</appendix>
        <only>TERMINAL</only>
        <identifier>remap.jis_eisuu2optionL_eisuu_term</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_EISUU, KeyCode::OPTION_L, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>EISUU to Shift_L</name>
        <identifier>remap.jis_eisuu2shiftL</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::SHIFT_L</autogen>
      </item>
      <item>
        <name>EISUU to ModifierFlag::EXTRA1</name>
        <identifier>remap.jis_eisuu2modextra1</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::VK_MODIFIER_EXTRA1</autogen>
      </item>
      <item>
        <name>EISUU to Delete</name>
        <identifier>remap.jis_eisuu2delete</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::DELETE</autogen>
      </item>
      <item>
        <name>Command+EISUU to EISUU</name>
        <identifier>remap.jis_commandEisuu2eisuu</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, VK_COMMAND, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>EISUU to Escape</name>
        <identifier>remap.jis_eisuu2escape</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::ESCAPE</autogen>
      </item>
      <item>
        <name>EISUU to Escape (only when inputsource == roman)</name>
        <identifier>remap.jis_eisuu2escape_onlyroman</identifier>
        <inputsource_only>ROMAN</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::ESCAPE</autogen>
      </item>
      <item>
        <name>EISUU to Control_L+F2 (= Move focus to the menu bar)</name>
        <identifier>remap.jis_eisuu2controlLf2</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::F2, ModifierFlag::CONTROL_L</autogen>
      </item>
      <item>
        <name>EISUU to Space</name>
        <identifier>remap.jis_eisuu2space</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::SPACE</autogen>
      </item>
      <item>
        <name>EISUU to Space</name>
        <appendix>(+ 英数キー長押しで通常の英数キーにする)</appendix>
        <identifier>remap.jis_eisuu2space_holdingeisuu2eisuu</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::JIS_EISUU, KeyCode::SPACE, KeyCode::VK_NONE, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>EISUU to Tab</name>
        <identifier>remap.jis_eisuu2tab</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>EISUU to MiddleClick</name>
        <identifier>remap.jis_eisuu2middleclick</identifier>
        <autogen>__KeyToPointingButton__ KeyCode::JIS_EISUU, PointingButton::MIDDLE</autogen>
      </item>
      <item>
        <name>EISUU to RightClick</name>
        <identifier>remap.jis_eisuu2rightclick</identifier>
        <autogen>__KeyToPointingButton__ KeyCode::JIS_EISUU, PointingButton::RIGHT</autogen>
      </item>
      <item>
        <name>Use EISUU as KANA/EISUU (toggle)</name>
        <identifier>remap.jis_unify_kana_to_eisuu</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
      <item>
        <name>Ignore the multiple press of EISUU</name>
        <identifier>remap.jis_ignore_multiple_eisuu</identifier>
        <autogen>__IgnoreMultipleSameKeyPress__ KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>EISUU symbol mode</name>
        <appendix>(+ When you type EISUU only, send EISUU)</appendix>
        <identifier>remap.eisuu_symbol</identifier>
        <appendix>EISUU + WER for Shift + 123</appendix>
        <appendix>EISUU + SDF for Shift + 456</appendix>
        <appendix>EISUU + XCV for Shift + 789</appendix>
        <autogen>__KeyOverlaidModifier__
          KeyCode::JIS_EISUU,
          KeyCode::VK_MODIFIER_EXTRA2, KeyCode::JIS_EISUU
        </autogen>
        <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::EXTRA2, KeyCode::KEY_1, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::EXTRA2, KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::EXTRA2, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA2, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::EXTRA2, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::EXTRA2, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::EXTRA2, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::EXTRA2, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::EXTRA2, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
      </item>
      <item>
        <name>EISUU symbol mode (For Dvorak right user)</name>
        <appendix>(+ When you type EISUU only, send EISUU)</appendix>
        <identifier>remap.eisuu_symbol_dvorak_right</identifier>
        <appendix>EISUU + WER for Shift + 123</appendix>
        <appendix>EISUU + SDF for Shift + 456</appendix>
        <appendix>EISUU + XCVB for Shift + 7890</appendix>
        <autogen>__KeyOverlaidModifier__
          KeyCode::JIS_EISUU,
          KeyCode::VK_MODIFIER_EXTRA2, KeyCode::JIS_EISUU
        </autogen>
        <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::EXTRA2, KeyCode::KEY_1, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::EXTRA2, KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::EXTRA2, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA2, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::EXTRA2, KeyCode::Q,     ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::EXTRA2, KeyCode::W,     ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::EXTRA2, KeyCode::A,     ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::EXTRA2, KeyCode::S,     ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::EXTRA2, KeyCode::Z,     ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::EXTRA2, KeyCode::X,     ModifierFlag::SHIFT_L</autogen>
      </item>
    </item>
    <item>
      <name>Change KANA Key</name>
      <item>
        <name>KANA to Command_L</name>
        <identifier>remap.jis_kana2commandL</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_KANA, KeyCode::COMMAND_L</autogen>
      </item>
      <item>
        <name>KANA to Command_R</name>
        <identifier>remap.jis_kana2commandR</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_KANA, KeyCode::COMMAND_R</autogen>
      </item>
      <item>
        <name>KANA to Command_R</name>
        <appendix>(+ When you type KANA only, send KANA)</appendix>
        <identifier>remap.jis_kana2commandR_kana</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_KANA, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>KANA to Command_R</name>
        <appendix>(+ When you type Shift+KANA only, send Return)</appendix>
        <appendix>(+ When you type KANA only, send KANA)</appendix>
        <identifier>remap.jis_kana2commandR_kana_return</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_KANA, VK_SHIFT, KeyCode::COMMAND_R, ModifierFlag::SHIFT_L, KeyCode::RETURN</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_KANA, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>KANA to Command_R</name>
        <appendix>(+ When you type Shift+KANA only, send Return)</appendix>
        <appendix>(+ When you type Control+KANA only, toggle Complete Vi Mode)</appendix>
        <appendix>(+ When you type KANA only, send KANA)</appendix>
        <identifier>remap.jis_kana2commandR_kana_vimode_return</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_KANA, VK_SHIFT, KeyCode::COMMAND_R, ModifierFlag::SHIFT_L, KeyCode::RETURN</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_KANA, VK_CONTROL, KeyCode::COMMAND_R, ModifierFlag::CONTROL_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_KANA, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>KANA to Control_L</name>
        <identifier>remap.jis_kana2controlL</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_KANA, KeyCode::CONTROL_L</autogen>
      </item>
      <item>
        <name>KANA to Control_L</name>
        <appendix>(+ When you type KANA only, send KANA)</appendix>
        <identifier>remap.jis_kana2controlL_kana</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_KANA, KeyCode::CONTROL_L, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>KANA to Fn</name>
        <identifier>remap.jis_kana2fn</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_KANA, KeyCode::FN</autogen>
      </item>
      <item>
        <name>KANA to Option_L</name>
        <identifier>remap.jis_kana2optionL</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_KANA, KeyCode::OPTION_L</autogen>
      </item>
      <item>
        <name>KANA to Option_L</name>
        <appendix>(+ When you type KANA only, send KANA)</appendix>
        <identifier>remap.jis_kana2optionL_kana</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_KANA, KeyCode::OPTION_L, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>KANA to Option_R</name>
        <appendix>(+ When you type KANA only, send KANA)</appendix>
        <identifier>remap.jis_kana2optionR_kana</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_KANA, KeyCode::OPTION_R, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>KANA to Shift_L</name>
        <identifier>remap.jis_kana2shiftL</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_KANA, KeyCode::SHIFT_L</autogen>
      </item>
      <item>
        <name>KANA to Shift_L</name>
        <appendix>(+ When you type KANA only, send KANA)</appendix>
        <identifier>remap.jis_kana2shiftL_kana</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_KANA, KeyCode::SHIFT_L, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>KANA to Control_L+F2 (= Move focus to the menu bar)</name>
        <identifier>remap.jis_kana2controlLf2</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_KANA, KeyCode::F2, ModifierFlag::CONTROL_L</autogen>
      </item>
      <item>
        <name>Command+KANA to KANA</name>
        <identifier>remap.jis_commandKana2kana</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_KANA, VK_COMMAND, KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>KANA to Return</name>
        <identifier>remap.jis_kana2return</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_KANA, KeyCode::RETURN</autogen>
      </item>
      <item>
        <name>KANA to Space</name>
        <identifier>remap.jis_kana2space</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_KANA, KeyCode::SPACE</autogen>
      </item>
      <item>
        <name>KANA to MiddleClick</name>
        <identifier>remap.jis_kana2middleclick</identifier>
        <autogen>__KeyToPointingButton__ KeyCode::JIS_KANA, PointingButton::MIDDLE</autogen>
      </item>
      <item>
        <name>KANA to RightClick</name>
        <identifier>remap.jis_kana2rightclick</identifier>
        <autogen>__KeyToPointingButton__ KeyCode::JIS_KANA, PointingButton::RIGHT</autogen>
      </item>
      <item>
        <name>Shift+KANA to EISUU</name>
        <identifier>remap.jis_shiftKana2eisuu</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_KANA, VK_SHIFT, KeyCode::JIS_EISUU</autogen>
      </item>
      <item>
        <name>Use KANA as KANA/EISUU (toggle)</name>
        <identifier>remap.jis_unify_eisuu_to_kana</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_KANA, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
      <item>
        <name>Ignore the multiple press of KANA</name>
        <identifier>remap.jis_ignore_multiple_kana</identifier>
        <autogen>__IgnoreMultipleSameKeyPress__ KeyCode::JIS_KANA</autogen>
      </item>
      <item>
        <name>KANA 10-key mode</name>
        <appendix>(+ When you type KANA only, send KANA)</appendix>
        <identifier>remap.kana_10key</identifier>
        <appendix>KANA + YUIOP for 0123=</appendix>
        <appendix>KANA + HJKL; for +456*</appendix>
        <appendix>KANA + NM,./ for -789/</appendix>
        <autogen>__KeyOverlaidModifier__
          KeyCode::JIS_KANA,
          KeyCode::VK_MODIFIER_EXTRA1, KeyCode::JIS_KANA
        </autogen>
        <autogen>__KeyToKey__ KeyCode::U,         ModifierFlag::EXTRA1, KeyCode::KEYPAD_1       </autogen>
        <autogen>__KeyToKey__ KeyCode::I,         ModifierFlag::EXTRA1, KeyCode::KEYPAD_2       </autogen>
        <autogen>__KeyToKey__ KeyCode::O,         ModifierFlag::EXTRA1, KeyCode::KEYPAD_3       </autogen>
        <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::EXTRA1, KeyCode::KEYPAD_4       </autogen>
        <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::EXTRA1, KeyCode::KEYPAD_5       </autogen>
        <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::EXTRA1, KeyCode::KEYPAD_6       </autogen>
        <autogen>__KeyToKey__ KeyCode::M,         ModifierFlag::EXTRA1, KeyCode::KEYPAD_7       </autogen>
        <autogen>__KeyToKey__ KeyCode::COMMA,     ModifierFlag::EXTRA1, KeyCode::KEYPAD_8       </autogen>
        <autogen>__KeyToKey__ KeyCode::DOT,       ModifierFlag::EXTRA1, KeyCode::KEYPAD_9       </autogen>
        <autogen>__KeyToKey__ KeyCode::Y,         ModifierFlag::EXTRA1, KeyCode::KEYPAD_0       </autogen>
        <autogen>__KeyToKey__ KeyCode::H,         ModifierFlag::EXTRA1, KeyCode::KEYPAD_PLUS    </autogen>
        <autogen>__KeyToKey__ KeyCode::N,         ModifierFlag::EXTRA1, KeyCode::KEYPAD_MINUS   </autogen>
        <autogen>__KeyToKey__ KeyCode::P,         ModifierFlag::EXTRA1, KeyCode::KEYPAD_EQUAL   </autogen>
        <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::EXTRA1, KeyCode::KEYPAD_MULTIPLY</autogen>
        <autogen>__KeyToKey__ KeyCode::SLASH,     ModifierFlag::EXTRA1, KeyCode::KEYPAD_SLASH   </autogen>
      </item>
    </item>
    <item>
      <name>Change Underscore(Ro) Key</name>
      <item>
        <name>Underscore(Ro) to Shift_R</name>
        <identifier>remap.jis_underscore2shiftR</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, KeyCode::SHIFT_R</autogen>
      </item>
      <item>
        <name>Underscore(Ro) to Backslash(\)</name>
        <identifier>remap.jis_underscore2backslash</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::VK_JIS_BACKSLASH</autogen>
      </item>
      <item>
        <name>Underscore(Ro) to Delete</name>
        <identifier>remap.jis_underscore2delete</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, KeyCode::DELETE</autogen>
      </item>
      <item>
        <name>Underscore(Ro) to JIS Yen(¥)</name>
        <identifier>remap.jis_underscore2jis_yen</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::JIS_YEN</autogen>
      </item>
      <item>
        <name>Underscore(Ro) to JIS Yen(¥) (if no modifiers pressed)</name>
        <identifier>remap.jis_underscore2jis_yen_nomods</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::JIS_YEN</autogen>
      </item>
    </item>
    <item>
      <name>Change Yen(¥) Key</name>
      <item>
        <name>JIS Yen(¥) to Backslash(\)</name>
        <appendix>(except virtual machine, X11, RDC)</appendix>
        <identifier>remap.jis_yen2backslash</identifier>
        <not>VIRTUALMACHINE, X11, REMOTEDESKTOPCONNECTION</not>
        <autogen>__KeyToKey__ KeyCode::JIS_YEN, KeyCode::VK_JIS_BACKSLASH</autogen>
      </item>
      <item>
        <name>JIS Yen(¥) to Forward Delete</name>
        <identifier>remap.jis_yen2forwarddelete</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_YEN, KeyCode::FORWARD_DELETE</autogen>
      </item>
      <item>
        <name>JIS Yen(¥) to Forward Delete</name>
        <appendix>(+ Shift+JIS Yen to Pipe(|))</appendix>
        <identifier>remap.jis_yen2forwarddelete_pipe</identifier>
        <autogen>__KeyToKey__ KeyCode::JIS_YEN, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_YEN, VK_SHIFT</autogen>
        <autogen>__KeyToKey__ KeyCode::JIS_YEN, KeyCode::FORWARD_DELETE</autogen>
      </item>
    </item>
    <item>
      <name>Change Zero(0) Key</name>
      <item>
        <name>Shift+0 to Backslash(\)</name>
        <identifier>remap.jis_shift0_to_backslash</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_0, VK_SHIFT, KeyCode::VK_JIS_BACKSLASH</autogen>
      </item>
      <item>
        <name>Shift+0 to JIS Yen(¥)</name>
        <identifier>remap.jis_shift0_to_yen</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_0, VK_SHIFT, KeyCode::JIS_YEN</autogen>
      </item>
      <item>
        <name>Shift+0 to Underscore(Ro)</name>
        <identifier>remap.jis_shift0_to_underscore</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_0, VK_SHIFT, KeyCode::JIS_UNDERSCORE</autogen>
      </item>
    </item>
    <item>
      <name>Emacs Mode</name>
      <item>
        <name>Control+[ to Escape at Japanese Keyboard</name>
        <identifier>option.jis_emacsmode_controlLeftbracket</identifier>
        <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11</not>
        <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
      </item>
      <item>
        <name>Behavior in Emacs, Terminal, X11, VMware, Parallels, RDC</name>
        <item>
          <name>Force change C-[ to Escape</name>
          <item>
            <name>In Emacs, Terminal</name>
            <identifier>option.jis_emacsmode_force_controlLeftbracket_term</identifier>
            <only>EMACS, TERMINAL</only>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
          </item>
          <item>
            <name>In X11</name>
            <identifier>option.jis_emacsmode_force_controlLeftbracket_x11</identifier>
            <only>X11</only>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
          </item>
          <item>
            <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
            <identifier>option.jis_emacsmode_force_controlLeftbracket_vm</identifier>
            <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
          </item>
        </item>
      </item>
    </item>
    <item>
      <name>enthumble (http://www.enthumble.com/)</name>
      <item>
        <name>enthumble</name>
        <appendix>・英数キーを左コマンドキーに変更。（英数キーの空打ちで英数キーとして動作）</appendix>
        <appendix>・英数キー（左コマンドキー）を押しながら「スペースキー」で「リターン」</appendix>
        <appendix>・英数キー（左コマンドキー）を押しながら「かなキー」で「エスケープ」</appendix>
        <appendix>・英数キー（左コマンドキー）を押しながら「右コマンドキー」で「エスケープ」</appendix>
        <identifier>remap.jis_enthumble</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_EISUU,
          KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
        <autogen>__KeyToKey__KeyCode::SPACE,ModifierFlag::COMMAND_L,
          KeyCode::RETURN</autogen>
        <autogen>__KeyToKey__KeyCode::JIS_KANA,ModifierFlag::COMMAND_L,
          KeyCode::ESCAPE</autogen>
        <autogen>__KeyToKey__KeyCode::COMMAND_R,ModifierFlag::COMMAND_L,
          KeyCode::ESCAPE</autogen>
      </item>
    </item>

    <item>
      <name>For Unix Users</name>
      <item>
        <name>Control+O to KANA/EISUU (toggle)</name>
        <appendix>(Except in Virtual Machine, RDC)</appendix>
        <identifier>remap.jis_controlO2kanaeisuu</identifier>
        <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
        <autogen>__KeyToKey__ KeyCode::O, VK_CONTROL | ModifierFlag::NONE, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
      <item>
        <name>Control+Backslash(\) to KANA/EISUU (toggle)</name>
        <appendix>(Except in Virtual Machine, RDC)</appendix>
        <identifier>remap.jis_controlbackslash2kanaeisuu</identifier>
        <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
        <autogen>__KeyToKey__ KeyCode::BACKSLASH, VK_CONTROL | ModifierFlag::NONE, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
      <item>
        <name>Control+JIS_YEN(¥) to KANA/EISUU (toggle)</name>
        <appendix>(Except in Virtual Machine, RDC)</appendix>
        <identifier>remap.jis_controljisyen2kanaeisuu</identifier>
        <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
        <autogen>__KeyToKey__ KeyCode::JIS_YEN, VK_CONTROL | ModifierFlag::NONE, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
    </item>
    <item>
      <name>For Applications</name>
      <item>
        <name>Enable at only Terminal</name>
        <item>
          <name>Command_L to Option_L</name>
          <appendix>(+ When you type Command_L only, send EISUU)</appendix>
          <only>TERMINAL</only>
          <identifier>remap.jis_app_commandL2optionL_eisuu</identifier>
          <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::OPTION_L, KeyCode::JIS_EISUU</autogen>
        </item>
        <item>
          <name>Command_L to Option_L</name>
          <appendix>(+ When you type Command_L only, send EISUU)</appendix>
          <appendix>(Pass-Through Tab and Backquote)</appendix>
          <only>TERMINAL</only>
          <identifier>remap.jis_app_commandL2optionL_eisuu_except_tab</identifier>
          <autogen>__KeyToKey__ KeyCode::TAB, ModifierFlag::OPTION_L, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::OPTION_L, KeyCode::JIS_EISUU</autogen>
        </item>
        <item>
          <name>JIS Yen(¥) to F18 (if no modifiers pressed)</name>
          <only>TERMINAL</only>
          <identifier>remap.jis_app_term_yen2f18</identifier>
          <autogen>__KeyToKey__ KeyCode::JIS_YEN, ModifierFlag::NONE, KeyCode::F18</autogen>
        </item>
        <item>
          <name>Underscore(Ro) to F18</name>
          <appendix>(+ Underscore to JIS Yen(¥) except Terminal)</appendix>
          <identifier>remap.jis_app_term_underscore2f18</identifier>
          <block>
            <only>TERMINAL</only>
            <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::F18</autogen>
          </block>
          <block>
            <not>TERMINAL</not>
            <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::JIS_YEN</autogen>
          </block>
        </item>
        <item>
          <name>Shift+0 to F18</name>
          <appendix>(+ Shift+0 to JIS Yen(¥) except Terminal)</appendix>
          <identifier>remap.jis_app_term_shift0_to_f18</identifier>
          <block>
            <only>TERMINAL</only>
            <autogen>__KeyToKey__ KeyCode::KEY_0, VK_SHIFT, KeyCode::F18</autogen>
          </block>
          <block>
            <not>TERMINAL</not>
            <autogen>__KeyToKey__ KeyCode::KEY_0, VK_SHIFT, KeyCode::JIS_YEN</autogen>
          </block>
        </item>
        <item>
          <name>For Screen Users</name>
          <item>
            <name>cmd+t to ctrl+a,c (create window)</name>
            <identifier>remap.app_term_screen_c</identifier>
            <only>TERMINAL</only>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::COMMAND_L, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::C</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::COMMAND_R, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::C</autogen>
          </item>
          <item>
            <name>cmd+w to ctrl+a,k (kill window)</name>
            <identifier>remap.app_term_screen_k</identifier>
            <only>TERMINAL</only>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::COMMAND_L, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::K</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::COMMAND_R, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::K</autogen>
          </item>
          <item>
            <name>cmd+w to ctrl+a,k,y (kill window without confirming)</name>
            <identifier>remap.app_term_screen_ky</identifier>
            <only>TERMINAL</only>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::COMMAND_L, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::K, KeyCode::Y</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::COMMAND_R, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::K, KeyCode::Y</autogen>
          </item>
          <item>
            <name>cmd+r to ctrl+a,A (rename window)</name>
            <identifier>remap.app_term_screen_a</identifier>
            <only>TERMINAL</only>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::COMMAND_L, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::A, ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::COMMAND_R, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::A, ModifierFlag::SHIFT_L</autogen>
          </item>
          <item>
            <name>cmd+alt+left/right to ctrl+a,n/p (switch windows)</name>
            <identifier>remap.app_term_screen_switch</identifier>
            <only>TERMINAL</only>
            <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::N</autogen>
            <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::P</autogen>
          </item>
        </item>
        <item>
          <name>cmd+left/right to begining/end</name>
          <item>
            <name>normal (ctrl+a / ctrl+e)</name>
            <identifier>remap.app_term_begend</identifier>
            <only>TERMINAL</only>
            <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L, KeyCode::E, ModifierFlag::CONTROL_L</autogen>
            <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::A, ModifierFlag::CONTROL_L</autogen>
          </item>
          <item>
            <name>using screen (ctrl+a,a / ctrl+e)</name>
            <identifier>remap.app_term_begend_screen</identifier>
            <only>TERMINAL</only>
            <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L, KeyCode::E, ModifierFlag::CONTROL_L</autogen>
            <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::A</autogen>
          </item>
        </item>
        <item>
          <name>cmd+delete/fwd_delete to ctrl+w/k</name>
          <identifier>remap.app_term_cmddel</identifier>
          <only>TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::DELETE, ModifierFlag::COMMAND_L, KeyCode::W, ModifierFlag::CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::FORWARD_DELETE, ModifierFlag::COMMAND_L, KeyCode::K, ModifierFlag::CONTROL_L</autogen>
        </item>
      </item>
      <item>
        <name>Enable at only Vim</name>
        <item>
          <name>Change EISUU to EISUU &amp; Escape</name>
          <only>VI</only>
          <identifier>remap.jis_app_vi_eisuu2eisuu_escape</identifier>
          <autogen>__KeyToKey__ KeyCode::JIS_EISUU, KeyCode::JIS_EISUU, KeyCode::ESCAPE</autogen>
        </item>
      </item>
      <item>
        <name>Quicksilver Mode for Japanese</name>
        <item>
          <name>What's Quicksilver Mode?</name>
          <appendix>This mode is designed for Quicksilver.app.</appendix>
          <appendix>- Control+M to Return (&amp; exit mode)</appendix>
          <appendix>- Control+I to Tab</appendix>
          <appendix>- Escape to Escape (&amp; exit mode)</appendix>
          <appendix>- Return to Return (&amp; exit mode)</appendix>
          <appendix></appendix>
          <identifier vk_config="true">notsave.jis_quicksilver_mode</identifier>
          <autogen>__ShowStatusMessage__ Quicksilver(J)</autogen>
          <block>
            <autogen>__KeyToKey__ KeyCode::I,            VK_CONTROL, KeyCode::TAB</autogen>
            <!-- ================================================== -->
            <block>
              <config_not>option.jis_quicksilver_mode_recovery_input_source</config_not>
              <autogen>__KeyToKey__ KeyCode::M,            VK_CONTROL, KeyCode::RETURN, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode</autogen>
              <autogen>__KeyToKey__ KeyCode::ESCAPE,                   KeyCode::ESCAPE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode</autogen>
              <autogen>__KeyToKey__ KeyCode::RETURN,                   KeyCode::RETURN, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode</autogen>
            </block>
            <block>
              <config_only>option.jis_quicksilver_mode_recovery_input_source</config_only>
              <block>
                <config_only>notsave.jis_quicksilver_mode_back_to_roman</config_only>
                <autogen>__KeyToKey__ KeyCode::M,            VK_CONTROL, KeyCode::RETURN, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode, KeyCode::JIS_EISUU</autogen>
                <autogen>__KeyToKey__ KeyCode::ESCAPE,                   KeyCode::ESCAPE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode, KeyCode::JIS_EISUU</autogen>
                <autogen>__KeyToKey__ KeyCode::RETURN,                   KeyCode::RETURN, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode, KeyCode::JIS_EISUU</autogen>
              </block>
              <block>
                <config_not>notsave.jis_quicksilver_mode_back_to_roman</config_not>
                <autogen>__KeyToKey__ KeyCode::M,            VK_CONTROL, KeyCode::RETURN, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode, KeyCode::JIS_KANA</autogen>
                <autogen>__KeyToKey__ KeyCode::ESCAPE,                   KeyCode::ESCAPE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode, KeyCode::JIS_KANA</autogen>
                <autogen>__KeyToKey__ KeyCode::RETURN,                   KeyCode::RETURN, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode, KeyCode::JIS_KANA</autogen>
              </block>
            </block>
            <!-- ================================================== -->
          </block>
          <block>
            <config_only>remap.jis_doublecontrol_to_quicksilver_mode_eisuu</config_only>
            <!-- ================================================== -->
            <block>
              <config_not>option.jis_quicksilver_mode_recovery_input_source</config_not>
              <autogen>__DoublePressModifier__ KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode</autogen>
              <autogen>__DoublePressModifier__ KeyCode::CONTROL_R, KeyCode::CONTROL_R, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode</autogen>
            </block>
            <block>
              <config_only>option.jis_quicksilver_mode_recovery_input_source</config_only>
              <block>
                <config_only>notsave.jis_quicksilver_mode_back_to_roman</config_only>
                <autogen>__DoublePressModifier__ KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode, KeyCode::JIS_EISUU</autogen>
                <autogen>__DoublePressModifier__ KeyCode::CONTROL_R, KeyCode::CONTROL_R, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode, KeyCode::JIS_EISUU</autogen>
              </block>
              <block>
                <config_not>notsave.jis_quicksilver_mode_back_to_roman</config_not>
                <autogen>__DoublePressModifier__ KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode, KeyCode::JIS_KANA</autogen>
                <autogen>__DoublePressModifier__ KeyCode::CONTROL_R, KeyCode::CONTROL_R, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode, KeyCode::JIS_KANA</autogen>
              </block>
            </block>
            <!-- ================================================== -->
          </block>
        </item>
        <item>
          <name>Double Control to Quicksilver Mode (&amp; 入力ソースを英字にする)</name>
          <appendix>(It is useful to set the double press recognition threshold to 200ms.</appendix>
          <appendix>"[Double Press Modifier] Recognition Threshold" in "Key Repeat" tab.)</appendix>
          <identifier>remap.jis_doublecontrol_to_quicksilver_mode_eisuu</identifier>
          <block>
            <inputsource_only>JAPANESE</inputsource_only>
            <autogen>__DoublePressModifier__ KeyCode::CONTROL_L, KeyCode::CONTROL_L,
              KeyCode::VK_CONFIG_FORCE_ON_notsave_jis_quicksilver_mode, KeyCode::JIS_EISUU, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode_back_to_roman</autogen>
            <autogen>__DoublePressModifier__ KeyCode::CONTROL_R, KeyCode::CONTROL_R,
              KeyCode::VK_CONFIG_FORCE_ON_notsave_jis_quicksilver_mode, KeyCode::JIS_EISUU, KeyCode::VK_CONFIG_FORCE_OFF_notsave_jis_quicksilver_mode_back_to_roman</autogen>
          </block>
          <block>
            <inputsource_not>JAPANESE</inputsource_not>
            <autogen>__DoublePressModifier__ KeyCode::CONTROL_L, KeyCode::CONTROL_L,
              KeyCode::VK_CONFIG_FORCE_ON_notsave_jis_quicksilver_mode, KeyCode::JIS_EISUU, KeyCode::VK_CONFIG_FORCE_ON_notsave_jis_quicksilver_mode_back_to_roman</autogen>
            <autogen>__DoublePressModifier__ KeyCode::CONTROL_R, KeyCode::CONTROL_R,
              KeyCode::VK_CONFIG_FORCE_ON_notsave_jis_quicksilver_mode, KeyCode::JIS_EISUU, KeyCode::VK_CONFIG_FORCE_ON_notsave_jis_quicksilver_mode_back_to_roman</autogen>
          </block>
        </item>
        <item>
          <name></name>
          <identifier vk_config="true">notsave.jis_quicksilver_mode_back_to_roman</identifier>
        </item>
        <item>
          <name>[Option] モードから抜けるときに入力ソースを元に戻す</name>
          <identifier>option.jis_quicksilver_mode_recovery_input_source</identifier>
        </item>
      </item>
    </item>
    <item>
      <name>Change Keyboard Layout</name>
      <item>
        <name>Use Dvorak Keyboard Layout on Japanese Keyboard</name>
        <item>
          <name>Use Dvorak Keyboard Layout on Japanese Keyboard</name>
          <identifier>remap.jis_qwerty2dvorak</identifier>
          <modifier_not>ModifierFlag::FN</modifier_not>

          <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT, KeyCode::JIS_ATMARK                 </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT, KeyCode::JIS_HAT                    </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT, KeyCode::KEY_6,            VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT, KeyCode::JIS_COLON,        VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT, KeyCode::KEY_8,            VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT, KeyCode::KEY_9,            VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS,             KeyCode::JIS_BRACKET_LEFT           </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_HAT,           KeyCode::JIS_BRACKET_RIGHT          </autogen>

          <!-- ============================================================ -->
          <!-- Q to ' " -->
          <autogen>__KeyToKey__ KeyCode::Q,                VK_SHIFT, KeyCode::KEY_2,     VK_SHIFT              </autogen>
          <autogen>__KeyToKey__ KeyCode::Q,                          KeyCode::KEY_7,     ModifierFlag::SHIFT_L </autogen>
          <autogen>__KeyToKey__ KeyCode::W,                          KeyCode::COMMA                            </autogen>
          <autogen>__KeyToKey__ KeyCode::E,                          KeyCode::DOT                              </autogen>
          <autogen>__KeyToKey__ KeyCode::R,                          KeyCode::P                                </autogen>
          <autogen>__KeyToKey__ KeyCode::T,                          KeyCode::Y                                </autogen>
          <autogen>__KeyToKey__ KeyCode::Y,                          KeyCode::F                                </autogen>
          <autogen>__KeyToKey__ KeyCode::U,                          KeyCode::G                                </autogen>
          <autogen>__KeyToKey__ KeyCode::I,                          KeyCode::C                                </autogen>
          <autogen>__KeyToKey__ KeyCode::O,                          KeyCode::R                                </autogen>
          <autogen>__KeyToKey__ KeyCode::P,                          KeyCode::L                                </autogen>
          <!-- @ to / ? -->
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK,                 KeyCode::SLASH                            </autogen>
          <!-- [ to = + -->
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_SHIFT, KeyCode::SEMICOLON, VK_SHIFT              </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT,           KeyCode::MINUS,     ModifierFlag::SHIFT_L </autogen>

          <!-- ============================================================ -->
          <autogen>__KeyToKey__ KeyCode::S,                           KeyCode::O                         </autogen>
          <autogen>__KeyToKey__ KeyCode::D,                           KeyCode::E                         </autogen>
          <autogen>__KeyToKey__ KeyCode::F,                           KeyCode::U                         </autogen>
          <autogen>__KeyToKey__ KeyCode::G,                           KeyCode::I                         </autogen>
          <autogen>__KeyToKey__ KeyCode::H,                           KeyCode::D                         </autogen>
          <autogen>__KeyToKey__ KeyCode::J,                           KeyCode::H                         </autogen>
          <autogen>__KeyToKey__ KeyCode::K,                           KeyCode::T                         </autogen>
          <autogen>__KeyToKey__ KeyCode::L,                           KeyCode::N                         </autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON,                   KeyCode::S                         </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON,         VK_SHIFT, KeyCode::JIS_UNDERSCORE            </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON,                   KeyCode::MINUS                     </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, VK_SHIFT, KeyCode::JIS_YEN,         VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT,           KeyCode::VK_JIS_BACKSLASH          </autogen>

          <!-- ============================================================ -->
          <!-- Z to ; : -->
          <autogen>__KeyToKey__ KeyCode::Z,              VK_SHIFT, KeyCode::JIS_COLON                         </autogen>
          <autogen>__KeyToKey__ KeyCode::Z,                        KeyCode::SEMICOLON                         </autogen>
          <autogen>__KeyToKey__ KeyCode::X,                        KeyCode::Q                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::C,                        KeyCode::J                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::V,                        KeyCode::K                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::B,                        KeyCode::X                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::N,                        KeyCode::B                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA,                    KeyCode::W                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::DOT,                      KeyCode::V                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH,                    KeyCode::Z                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, VK_SHIFT, KeyCode::JIS_HAT,    VK_SHIFT              </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE,           KeyCode::JIS_ATMARK, ModifierFlag::SHIFT_L </autogen>
        </item>
        <item>
          <name>Use Dvorak Keyboard Layout on Japanese Keyboard</name>
          <appendix>(英数入力のときだけDvorak配列にする)</appendix>
          <identifier>remap.jis_qwerty2dvorak_roman_only</identifier>
          <inputsource_only>ROMAN</inputsource_only>
          <modifier_not>ModifierFlag::FN</modifier_not>

          <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT, KeyCode::JIS_ATMARK                 </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT, KeyCode::JIS_HAT                    </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT, KeyCode::KEY_6,            VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT, KeyCode::JIS_COLON,        VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT, KeyCode::KEY_8,            VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT, KeyCode::KEY_9,            VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS,             KeyCode::JIS_BRACKET_LEFT           </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_HAT,           KeyCode::JIS_BRACKET_RIGHT          </autogen>

          <!-- ============================================================ -->
          <!-- Q to ' " -->
          <autogen>__KeyToKey__ KeyCode::Q,                VK_SHIFT, KeyCode::KEY_2,     VK_SHIFT              </autogen>
          <autogen>__KeyToKey__ KeyCode::Q,                          KeyCode::KEY_7,     ModifierFlag::SHIFT_L </autogen>
          <autogen>__KeyToKey__ KeyCode::W,                          KeyCode::COMMA                            </autogen>
          <autogen>__KeyToKey__ KeyCode::E,                          KeyCode::DOT                              </autogen>
          <autogen>__KeyToKey__ KeyCode::R,                          KeyCode::P                                </autogen>
          <autogen>__KeyToKey__ KeyCode::T,                          KeyCode::Y                                </autogen>
          <autogen>__KeyToKey__ KeyCode::Y,                          KeyCode::F                                </autogen>
          <autogen>__KeyToKey__ KeyCode::U,                          KeyCode::G                                </autogen>
          <autogen>__KeyToKey__ KeyCode::I,                          KeyCode::C                                </autogen>
          <autogen>__KeyToKey__ KeyCode::O,                          KeyCode::R                                </autogen>
          <autogen>__KeyToKey__ KeyCode::P,                          KeyCode::L                                </autogen>
          <!-- @ to / ? -->
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK,                 KeyCode::SLASH                            </autogen>
          <!-- [ to = + -->
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_SHIFT, KeyCode::SEMICOLON, VK_SHIFT              </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT,           KeyCode::MINUS,     ModifierFlag::SHIFT_L </autogen>

          <!-- ============================================================ -->
          <autogen>__KeyToKey__ KeyCode::S,                           KeyCode::O                         </autogen>
          <autogen>__KeyToKey__ KeyCode::D,                           KeyCode::E                         </autogen>
          <autogen>__KeyToKey__ KeyCode::F,                           KeyCode::U                         </autogen>
          <autogen>__KeyToKey__ KeyCode::G,                           KeyCode::I                         </autogen>
          <autogen>__KeyToKey__ KeyCode::H,                           KeyCode::D                         </autogen>
          <autogen>__KeyToKey__ KeyCode::J,                           KeyCode::H                         </autogen>
          <autogen>__KeyToKey__ KeyCode::K,                           KeyCode::T                         </autogen>
          <autogen>__KeyToKey__ KeyCode::L,                           KeyCode::N                         </autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON,                   KeyCode::S                         </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON,         VK_SHIFT, KeyCode::JIS_UNDERSCORE            </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON,                   KeyCode::MINUS                     </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, VK_SHIFT, KeyCode::JIS_YEN,         VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT,           KeyCode::VK_JIS_BACKSLASH          </autogen>

          <!-- ============================================================ -->
          <!-- Z to ; : -->
          <autogen>__KeyToKey__ KeyCode::Z,              VK_SHIFT, KeyCode::JIS_COLON                         </autogen>
          <autogen>__KeyToKey__ KeyCode::Z,                        KeyCode::SEMICOLON                         </autogen>
          <autogen>__KeyToKey__ KeyCode::X,                        KeyCode::Q                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::C,                        KeyCode::J                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::V,                        KeyCode::K                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::B,                        KeyCode::X                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::N,                        KeyCode::B                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA,                    KeyCode::W                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::DOT,                      KeyCode::V                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH,                    KeyCode::Z                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, VK_SHIFT, KeyCode::JIS_HAT,    VK_SHIFT              </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE,           KeyCode::JIS_ATMARK, ModifierFlag::SHIFT_L </autogen>
        </item>
        <item>
          <name>Use Dvorak Keyboard Layout on Japanese Keyboard</name>
          <appendix>(英数入力のときだけDvorak配列にする)</appendix>
          <appendix>(Command,Control,Optionを押したときはQwerty配列のまま)</appendix>
          <identifier>remap.jis_qwerty2dvorak_roman_only_qwerty</identifier>
          <inputsource_only>ROMAN</inputsource_only>
          <modifier_not>
            ModifierFlag::COMMAND_L,
            ModifierFlag::COMMAND_R,
            ModifierFlag::CONTROL_L,
            ModifierFlag::CONTROL_R,
            ModifierFlag::OPTION_L,
            ModifierFlag::OPTION_R
          </modifier_not>
          <modifier_not>ModifierFlag::FN</modifier_not>

          <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT, KeyCode::JIS_ATMARK                 </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT, KeyCode::JIS_HAT                    </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT, KeyCode::KEY_6,            VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT, KeyCode::JIS_COLON,        VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT, KeyCode::KEY_8,            VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT, KeyCode::KEY_9,            VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS,             KeyCode::JIS_BRACKET_LEFT           </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_HAT,           KeyCode::JIS_BRACKET_RIGHT          </autogen>

          <!-- ============================================================ -->
          <!-- Q to ' " -->
          <autogen>__KeyToKey__ KeyCode::Q,                VK_SHIFT, KeyCode::KEY_2,     VK_SHIFT              </autogen>
          <autogen>__KeyToKey__ KeyCode::Q,                          KeyCode::KEY_7,     ModifierFlag::SHIFT_L </autogen>
          <autogen>__KeyToKey__ KeyCode::W,                          KeyCode::COMMA                            </autogen>
          <autogen>__KeyToKey__ KeyCode::E,                          KeyCode::DOT                              </autogen>
          <autogen>__KeyToKey__ KeyCode::R,                          KeyCode::P                                </autogen>
          <autogen>__KeyToKey__ KeyCode::T,                          KeyCode::Y                                </autogen>
          <autogen>__KeyToKey__ KeyCode::Y,                          KeyCode::F                                </autogen>
          <autogen>__KeyToKey__ KeyCode::U,                          KeyCode::G                                </autogen>
          <autogen>__KeyToKey__ KeyCode::I,                          KeyCode::C                                </autogen>
          <autogen>__KeyToKey__ KeyCode::O,                          KeyCode::R                                </autogen>
          <autogen>__KeyToKey__ KeyCode::P,                          KeyCode::L                                </autogen>
          <!-- @ to / ? -->
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK,                 KeyCode::SLASH                            </autogen>
          <!-- [ to = + -->
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_SHIFT, KeyCode::SEMICOLON, VK_SHIFT              </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT,           KeyCode::MINUS,     ModifierFlag::SHIFT_L </autogen>

          <!-- ============================================================ -->
          <autogen>__KeyToKey__ KeyCode::S,                           KeyCode::O                         </autogen>
          <autogen>__KeyToKey__ KeyCode::D,                           KeyCode::E                         </autogen>
          <autogen>__KeyToKey__ KeyCode::F,                           KeyCode::U                         </autogen>
          <autogen>__KeyToKey__ KeyCode::G,                           KeyCode::I                         </autogen>
          <autogen>__KeyToKey__ KeyCode::H,                           KeyCode::D                         </autogen>
          <autogen>__KeyToKey__ KeyCode::J,                           KeyCode::H                         </autogen>
          <autogen>__KeyToKey__ KeyCode::K,                           KeyCode::T                         </autogen>
          <autogen>__KeyToKey__ KeyCode::L,                           KeyCode::N                         </autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON,                   KeyCode::S                         </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON,         VK_SHIFT, KeyCode::JIS_UNDERSCORE            </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON,                   KeyCode::MINUS                     </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, VK_SHIFT, KeyCode::JIS_YEN,         VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT,           KeyCode::VK_JIS_BACKSLASH          </autogen>

          <!-- ============================================================ -->
          <!-- Z to ; : -->
          <autogen>__KeyToKey__ KeyCode::Z,              VK_SHIFT, KeyCode::JIS_COLON                         </autogen>
          <autogen>__KeyToKey__ KeyCode::Z,                        KeyCode::SEMICOLON                         </autogen>
          <autogen>__KeyToKey__ KeyCode::X,                        KeyCode::Q                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::C,                        KeyCode::J                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::V,                        KeyCode::K                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::B,                        KeyCode::X                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::N,                        KeyCode::B                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA,                    KeyCode::W                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::DOT,                      KeyCode::V                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH,                    KeyCode::Z                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, VK_SHIFT, KeyCode::JIS_HAT,    VK_SHIFT              </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE,           KeyCode::JIS_ATMARK, ModifierFlag::SHIFT_L </autogen>
        </item>
      </item>
      <item>
        <name>Use Japanese Keyboard as US Keyboard</name>
        <identifier>remap.jis_jansi</identifier>
        <autogen>__SetKeyboardType__ KeyboardType::MACBOOK</autogen>
        <autogen>__KeyToKey__ KeyCode::JIS_YEN, KeyCode::BACKQUOTE</autogen>
        <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, KeyCode::BACKQUOTE</autogen>
      </item>
      <item>
        <name>Use US Keyboard as Japanese Keyboard</name>
        <item>
          <name>Use US Keyboard as Japanese Keyboard</name>
          <identifier>remap.jis_layout_us2japanese</identifier>
          <autogen>__SetKeyboardType__ KeyboardType::JIS_MACBOOK_2008</autogen>
        </item>
        <item>
          <name>Options</name>
          <item>
            <name>Backquote(`) to JIS Yen(¥)</name>
            <identifier>option.jis_layout_us2japanese_backquote2yen</identifier>
            <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::JIS_YEN</autogen>
          </item>
          <item>
            <name>Backquote(`) to Backslash</name>
            <identifier>option.jis_layout_us2japanese_backquote2backslash</identifier>
            <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::VK_JIS_BACKSLASH</autogen>
          </item>
          <item>
            <name>Shift+Delete to Pipe(|)</name>
            <identifier>option.jis_layout_us2japanese_shiftDelete2pipe</identifier>
            <autogen>__KeyToKey__ KeyCode::DELETE, VK_SHIFT | ModifierFlag::NONE, KeyCode::VK_JIS_BACKSLASH, VK_SHIFT</autogen>
          </item>
          <item>
            <name>Shift_R to Shift_R</name>
            <appendix>(+ When you type Shift_R only, send Underscore)</appendix>
            <identifier>option.jis_layout_us2japanese_shiftR2shiftR_underscore</identifier>
            <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::JIS_UNDERSCORE</autogen>
          </item>
          <item>
            <name>(Shift_L+Shift_R to Underscore)</name>
            <identifier>option.jis_layout_us2japanese_shiftR2shiftR_shiftLshiftR2underscore</identifier>
            <autogen>__KeyToKey__ KeyCode::SHIFT_R, ModifierFlag::SHIFT_L, KeyCode::JIS_UNDERSCORE</autogen>
          </item>
        </item>
      </item>
      <item>
        <name>Use Japanese Keyboard as Semi-US Keyboard</name>
        <appendix>Change Shift+semicolon(;) to colon(:)</appendix>
        <appendix>Change colon(:) to apostrophe(')</appendix>
        <appendix>Change Shift+colon(:) to double quote(")</appendix>
        <appendix>Change Shift+2 to plus(+)</appendix>
        <appendix>Change Shift+7 to asterisk(*)</appendix>
        <identifier>remap.jis_layout_semiascii</identifier>
        <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_SHIFT,           KeyCode::JIS_COLON</autogen>
        <!-- double quote(") == Shift+2 -->
        <autogen>__KeyToKey__ KeyCode::JIS_COLON, VK_SHIFT,           KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>
        <!-- apostrophe(') == Shift+7 -->
        <autogen>__KeyToKey__ KeyCode::JIS_COLON,                     KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
        <!-- plus(+) == Shift+; -->
        <autogen>__KeyToKey__ KeyCode::KEY_2,     VK_SHIFT,           KeyCode::SEMICOLON, ModifierFlag::SHIFT_L</autogen>
        <!-- asterisk(*) == Shift+: -->
        <autogen>__KeyToKey__ KeyCode::KEY_7,     VK_SHIFT,           KeyCode::JIS_COLON, ModifierFlag::SHIFT_L</autogen>
      </item>
      <item>
        <name>Use JIS X 6004</name>
        <identifier>remap.jis_layout_jisx6004</identifier>
        <inputsourcedetail_only>JAPANESE_HIRAGANA, JAPANESE, JAPANESE_KATAKANA, JAPANESE_HALFWIDTH_KANA</inputsourcedetail_only>

        <!-- ====================================================================== -->
        <!-- Shift+Q -> small A (Shift+3) -->
        <autogen>__KeyToKey__ KeyCode::Q, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+W -> p-sound ([) -->
        <autogen>__KeyToKey__ KeyCode::W, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_BRACKET_LEFT</autogen>
        <!-- Shift+E -> HO (minus) -->
        <autogen>__KeyToKey__ KeyCode::E, VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS</autogen>
        <!-- Shift+R -> FU (2) -->
        <autogen>__KeyToKey__ KeyCode::R, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2</autogen>
        <!-- Shift+T -> ME (/) -->
        <autogen>__KeyToKey__ KeyCode::T, VK_SHIFT | ModifierFlag::NONE, KeyCode::SLASH</autogen>
        <!-- Shift+Y -> HI (V) -->
        <autogen>__KeyToKey__ KeyCode::Y, VK_SHIFT | ModifierFlag::NONE, KeyCode::V</autogen>
        <!-- Shift+U -> E (5) -->
        <autogen>__KeyToKey__ KeyCode::U, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5</autogen>
        <!-- Shift+I -> MI (N) -->
        <autogen>__KeyToKey__ KeyCode::I, VK_SHIFT | ModifierFlag::NONE, KeyCode::N</autogen>
        <!-- Shift+O -> YA (7) -->
        <autogen>__KeyToKey__ KeyCode::O, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7</autogen>
        <!-- Shift+P -> NU (1) -->
        <autogen>__KeyToKey__ KeyCode::P, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1</autogen>
        <!-- Shift+[ -> [ (Shift+[) -->
        <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>

        <!-- Q -> SO (C) -->
        <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::C</autogen>
        <!-- W -> KE (:) -->
        <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::JIS_COLON</autogen>
        <!-- E -> SE (P) -->
        <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::P</autogen>
        <!-- R -> TE (W) -->
        <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::W</autogen>
        <!-- T -> small YO (Shift+9) -->
        <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
        <!-- Y -> TU (Z) -->
        <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::Z</autogen>
        <!-- U -> NN (Y) -->
        <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::Y</autogen>
        <!-- I -> NO (K) -->
        <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K</autogen>
        <!-- O -> WO (Shift+0) -->
        <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
        <!-- P -> RI (L) -->
        <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::L</autogen>
        <!-- [ -> TI (A) -->
        <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::A</autogen>

        <!-- ====================================================================== -->
        <!-- Shift+A -> small I (Shift+E) -->
        <autogen>__KeyToKey__ KeyCode::A, VK_SHIFT | ModifierFlag::NONE, KeyCode::E, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+S -> HE (^) -->
        <autogen>__KeyToKey__ KeyCode::S, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_HAT</autogen>
        <!-- Shift+D -> RA (O) -->
        <autogen>__KeyToKey__ KeyCode::D, VK_SHIFT | ModifierFlag::NONE, KeyCode::O</autogen>
        <!-- Shift+F -> small YU (Shift+8) -->
        <autogen>__KeyToKey__ KeyCode::F, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+G -> YO (9) -->
        <autogen>__KeyToKey__ KeyCode::G, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9</autogen>
        <!-- Shift+H -> MA (J) -->
        <autogen>__KeyToKey__ KeyCode::H, VK_SHIFT | ModifierFlag::NONE, KeyCode::J</autogen>
        <!-- Shift+J -> O (6) -->
        <autogen>__KeyToKey__ KeyCode::J, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6</autogen>
        <!-- Shift+K -> MO (M) -->
        <autogen>__KeyToKey__ KeyCode::K, VK_SHIFT | ModifierFlag::NONE, KeyCode::M</autogen>
        <!-- Shift+L -> WA (0) -->
        <autogen>__KeyToKey__ KeyCode::L, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0</autogen>
        <!-- Shift+; -> YU (8) -->
        <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8</autogen>
        <!-- Shift+: -> ] (Shift+]) -->
        <autogen>__KeyToKey__ KeyCode::JIS_COLON, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>

        <!-- A -> HA (F) -->
        <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::F</autogen>
        <!-- S -> KA (T) -->
        <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::T</autogen>
        <!-- D -> SI (D) -->
        <!-- don't change D -->
        <!-- F -> TO (S) -->
        <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::S</autogen>
        <!-- G -> TA (Q) -->
        <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::Q</autogen>
        <!-- H -> KU (H) -->
        <!-- don't change H -->
        <!-- J -> U (4) -->
        <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::KEY_4</autogen>
        <!-- K -> I (E) -->
        <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::E</autogen>
        <!-- L -> voiced-sound (@) -->
        <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::JIS_ATMARK</autogen>
        <!-- ; -> KI (G) -->
        <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::G</autogen>
        <!-- : -> NA (U) -->
        <autogen>__KeyToKey__ KeyCode::JIS_COLON, ModifierFlag::NONE, KeyCode::U</autogen>

        <!-- ====================================================================== -->
        <!-- Shift+Z -> small U (Shift+4) -->
        <autogen>__KeyToKey__ KeyCode::Z, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+X -> small E (Shift+5) -->
        <autogen>__KeyToKey__ KeyCode::X, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+C -> small O (Shift+6) -->
        <autogen>__KeyToKey__ KeyCode::C, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+V -> NE (,) -->
        <autogen>__KeyToKey__ KeyCode::V, VK_SHIFT | ModifierFlag::NONE, KeyCode::COMMA</autogen>
        <!-- Shift+B -> small YA (Shift+7) -->
        <autogen>__KeyToKey__ KeyCode::B, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+N -> MU (]) -->
        <autogen>__KeyToKey__ KeyCode::N, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_BRACKET_RIGHT</autogen>
        <!-- Shift+M -> RO (Underscore) -->
        <autogen>__KeyToKey__ KeyCode::M, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_UNDERSCORE</autogen>
        <!-- Shift+, -> dot (Shift+slash) -->
        <autogen>__KeyToKey__ KeyCode::COMMA, VK_SHIFT | ModifierFlag::NONE, KeyCode::SLASH, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+. -> minus (JIS_YEN) -->
        <autogen>__KeyToKey__ KeyCode::DOT, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_YEN</autogen>

        <!-- Z -> SU (R) -->
        <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::R</autogen>
        <!-- X -> KO (B) -->
        <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::B</autogen>
        <!-- C -> NI (I) -->
        <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::I</autogen>
        <!-- V -> SA (X) -->
        <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::X</autogen>
        <!-- B -> A (3) -->
        <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::KEY_3</autogen>
        <!-- N -> small TU (Shift+Z) -->
        <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::Z, ModifierFlag::SHIFT_L</autogen>
        <!-- M -> RU (dot) -->
        <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::DOT</autogen>
        <!-- , -> , (Shift+,) -->
        <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>
        <!-- . -> . (Shift+.) -->
        <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>
        <!-- / -> RE (;) -->
        <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::SEMICOLON</autogen>

        <!-- ====================================================================== -->
        <!-- An upper step -->
        <autogen>__KeyToKey__ KeyCode::KEY_1,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_4,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_5,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_6,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_7,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_8,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_9,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_0,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::MINUS,     VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::JIS_HAT,   VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_HAT,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::JIS_YEN,   VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_YEN,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>

        <autogen>__KeyToKey__ KeyCode::KEY_1,     ModifierFlag::NONE, KeyCode::KEY_1,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2,     ModifierFlag::NONE, KeyCode::KEY_2,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3,     ModifierFlag::NONE, KeyCode::KEY_3,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_4,     ModifierFlag::NONE, KeyCode::KEY_4,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_5,     ModifierFlag::NONE, KeyCode::KEY_5,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_6,     ModifierFlag::NONE, KeyCode::KEY_6,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_7,     ModifierFlag::NONE, KeyCode::KEY_7,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_8,     ModifierFlag::NONE, KeyCode::KEY_8,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_9,     ModifierFlag::NONE, KeyCode::KEY_9,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_0,     ModifierFlag::NONE, KeyCode::KEY_0,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::MINUS,     ModifierFlag::NONE, KeyCode::MINUS,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::JIS_HAT,   ModifierFlag::NONE, KeyCode::JIS_HAT,   ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::JIS_YEN,   ModifierFlag::NONE, KeyCode::JIS_YEN,   ModifierFlag::OPTION_L</autogen>
      </item>
      <item>
        <name>Use JIS X 6004 for US Keyboard</name>
        <identifier>remap.jis_layout_jisx6004_us</identifier>
        <inputsourcedetail_only>JAPANESE_HIRAGANA, JAPANESE, JAPANESE_KATAKANA, JAPANESE_HALFWIDTH_KANA</inputsourcedetail_only>

        <!-- ====================================================================== -->
        <!-- Shift+Q -> small A (Shift+3) -->
        <autogen>__KeyToKey__ KeyCode::Q, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+W -> p-sound (=) -->
        <autogen>__KeyToKey__ KeyCode::W, VK_SHIFT | ModifierFlag::NONE, KeyCode::EQUAL</autogen>
        <!-- Shift+E -> HO (minus) -->
        <autogen>__KeyToKey__ KeyCode::E, VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS</autogen>
        <!-- Shift+R -> FU (2) -->
        <autogen>__KeyToKey__ KeyCode::R, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2</autogen>
        <!-- Shift+T -> ME (/) -->
        <autogen>__KeyToKey__ KeyCode::T, VK_SHIFT | ModifierFlag::NONE, KeyCode::SLASH</autogen>
        <!-- Shift+Y -> HI (V) -->
        <autogen>__KeyToKey__ KeyCode::Y, VK_SHIFT | ModifierFlag::NONE, KeyCode::V</autogen>
        <!-- Shift+U -> E (5) -->
        <autogen>__KeyToKey__ KeyCode::U, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5</autogen>
        <!-- Shift+I -> MI (N) -->
        <autogen>__KeyToKey__ KeyCode::I, VK_SHIFT | ModifierFlag::NONE, KeyCode::N</autogen>
        <!-- Shift+O -> YA (7) -->
        <autogen>__KeyToKey__ KeyCode::O, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7</autogen>
        <!-- Shift+P -> NU (1) -->
        <autogen>__KeyToKey__ KeyCode::P, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1</autogen>
        <!-- Shift+[ -> [ (Shift+=) -->
        <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_SHIFT | ModifierFlag::NONE, KeyCode::EQUAL, ModifierFlag::SHIFT_L</autogen>

        <!-- Q -> SO (C) -->
        <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::C</autogen>
        <!-- W -> KE (') -->
        <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::QUOTE</autogen>
        <!-- E -> SE (P) -->
        <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::P</autogen>
        <!-- R -> TE (W) -->
        <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::W</autogen>
        <!-- T -> small YO (Shift+9) -->
        <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
        <!-- Y -> TU (Z) -->
        <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::Z</autogen>
        <!-- U -> NN (Y) -->
        <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::Y</autogen>
        <!-- I -> NO (K) -->
        <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K</autogen>
        <!-- O -> WO (Shift+0) -->
        <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
        <!-- P -> RI (L) -->
        <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::L</autogen>
        <!-- [ -> TI (A) -->
        <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::NONE, KeyCode::A</autogen>

        <!-- ====================================================================== -->
        <!-- Shift+A -> small I (Shift+E) -->
        <autogen>__KeyToKey__ KeyCode::A, VK_SHIFT | ModifierFlag::NONE, KeyCode::E, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+S -> HE (\) -->
        <autogen>__KeyToKey__ KeyCode::S, VK_SHIFT | ModifierFlag::NONE, KeyCode::BACKSLASH</autogen>
        <!-- Shift+D -> RA (O) -->
        <autogen>__KeyToKey__ KeyCode::D, VK_SHIFT | ModifierFlag::NONE, KeyCode::O</autogen>
        <!-- Shift+F -> small YU (Shift+8) -->
        <autogen>__KeyToKey__ KeyCode::F, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+G -> YO (9) -->
        <autogen>__KeyToKey__ KeyCode::G, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9</autogen>
        <!-- Shift+H -> MA (J) -->
        <autogen>__KeyToKey__ KeyCode::H, VK_SHIFT | ModifierFlag::NONE, KeyCode::J</autogen>
        <!-- Shift+J -> O (6) -->
        <autogen>__KeyToKey__ KeyCode::J, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6</autogen>
        <!-- Shift+K -> MO (M) -->
        <autogen>__KeyToKey__ KeyCode::K, VK_SHIFT | ModifierFlag::NONE, KeyCode::M</autogen>
        <!-- Shift+L -> WA (0) -->
        <autogen>__KeyToKey__ KeyCode::L, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0</autogen>
        <!-- Shift+; -> YU (8) -->
        <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8</autogen>
        <!-- Shift+' -> ] (Shift+[) -->
        <autogen>__KeyToKey__ KeyCode::QUOTE, VK_SHIFT | ModifierFlag::NONE, KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>

        <!-- A -> HA (F) -->
        <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::F</autogen>
        <!-- S -> KA (T) -->
        <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::T</autogen>
        <!-- D -> SI (D) -->
        <!-- don't change D -->
        <!-- F -> TO (S) -->
        <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::S</autogen>
        <!-- G -> TA (Q) -->
        <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::Q</autogen>
        <!-- H -> KU (H) -->
        <!-- don't change H -->
        <!-- J -> U (4) -->
        <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::KEY_4</autogen>
        <!-- K -> I (E) -->
        <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::E</autogen>
        <!-- L -> voiced-sound ([) -->
        <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::BRACKET_LEFT</autogen>
        <!-- ; -> KI (G) -->
        <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::G</autogen>
        <!-- ' -> NA (U) -->
        <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::NONE, KeyCode::U</autogen>

        <!-- ====================================================================== -->
        <!-- Shift+Z -> small U (Shift+4) -->
        <autogen>__KeyToKey__ KeyCode::Z, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+X -> small E (Shift+5) -->
        <autogen>__KeyToKey__ KeyCode::X, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+C -> small O (Shift+6) -->
        <autogen>__KeyToKey__ KeyCode::C, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+V -> NE (,) -->
        <autogen>__KeyToKey__ KeyCode::V, VK_SHIFT | ModifierFlag::NONE, KeyCode::COMMA</autogen>
        <!-- Shift+B -> small YA (Shift+7) -->
        <autogen>__KeyToKey__ KeyCode::B, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+N -> MU (]) -->
        <autogen>__KeyToKey__ KeyCode::N, VK_SHIFT | ModifierFlag::NONE, KeyCode::BRACKET_RIGHT</autogen>
        <!-- Shift+M -> RO (Shift+') -->
        <autogen>__KeyToKey__ KeyCode::M, VK_SHIFT | ModifierFlag::NONE, KeyCode::QUOTE, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+, -> dot (Shift+slash) -->
        <autogen>__KeyToKey__ KeyCode::COMMA, VK_SHIFT | ModifierFlag::NONE, KeyCode::SLASH, ModifierFlag::SHIFT_L</autogen>
        <!-- Shift+. -> minus (JIS_YEN) -->
        <autogen>__KeyToKey__ KeyCode::DOT, VK_SHIFT | ModifierFlag::NONE, KeyCode::VK_JIS_YEN</autogen>

        <!-- Z -> SU (R) -->
        <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::R</autogen>
        <!-- X -> KO (B) -->
        <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::B</autogen>
        <!-- C -> NI (I) -->
        <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::I</autogen>
        <!-- V -> SA (X) -->
        <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::X</autogen>
        <!-- B -> A (3) -->
        <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::KEY_3</autogen>
        <!-- N -> small TU (Shift+Z) -->
        <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::Z, ModifierFlag::SHIFT_L</autogen>
        <!-- M -> RU (dot) -->
        <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::DOT</autogen>
        <!-- , -> , (Shift+,) -->
        <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>
        <!-- . -> . (Shift+.) -->
        <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>
        <!-- / -> RE (;) -->
        <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::SEMICOLON</autogen>

        <!-- ====================================================================== -->
        <!-- An upper step -->
        <autogen>__KeyToKey__ KeyCode::BACKQUOTE, VK_SHIFT | ModifierFlag::NONE, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_1,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_4,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_5,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_6,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_7,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_8,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_9,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_0,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::MINUS,     VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::EQUAL,     VK_SHIFT | ModifierFlag::NONE, KeyCode::EQUAL,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>

        <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::NONE, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_1,     ModifierFlag::NONE, KeyCode::KEY_1,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2,     ModifierFlag::NONE, KeyCode::KEY_2,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3,     ModifierFlag::NONE, KeyCode::KEY_3,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_4,     ModifierFlag::NONE, KeyCode::KEY_4,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_5,     ModifierFlag::NONE, KeyCode::KEY_5,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_6,     ModifierFlag::NONE, KeyCode::KEY_6,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_7,     ModifierFlag::NONE, KeyCode::KEY_7,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_8,     ModifierFlag::NONE, KeyCode::KEY_8,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_9,     ModifierFlag::NONE, KeyCode::KEY_9,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_0,     ModifierFlag::NONE, KeyCode::KEY_0,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::MINUS,     ModifierFlag::NONE, KeyCode::MINUS,     ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::EQUAL,     ModifierFlag::NONE, KeyCode::EQUAL,     ModifierFlag::OPTION_L</autogen>

        <!-- ====================================================================== -->
        <!-- Extra -->

        <!-- \ -> JIS_BACKSLASH -->
        <autogen>__KeyToKey__ KeyCode::BACKSLASH, ModifierFlag::NONE, KeyCode::VK_JIS_BACKSLASH, ModifierFlag::OPTION_L</autogen>

        <!-- \ -> vertical_line (JIS_VERTICAL_LINE) -->
        <autogen>__KeyToKey__ KeyCode::BACKSLASH, VK_SHIFT | ModifierFlag::NONE, KeyCode::VK_JIS_YEN, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>

        <!-- ] -> NONE -->
        <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>

        <!-- Shift+] -> NONE -->
        <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT,VK_SHIFT | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>

        <!-- Shift+/ -> question (JIS_QUESION) -->
        <autogen>__KeyToKey__ KeyCode::SLASH, VK_SHIFT | ModifierFlag::NONE, KeyCode::SLASH, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
      </item>
      <item>
        <name>Oyayubi Shift Input</name>
        <appendix>親指シフト (NICOLA)</appendix>
        <item>
          <name>＜かなモード＞</name>
          <item>
            <name>＜かなモード＞ 左シフト＝スペース, 右シフト＝かな</name>
            <identifier>remap.oyayubi_shift_kana_space_kana</identifier>
            <inputsource_only>JAPANESE</inputsource_only>
            <!-- 左手 中段 -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::KEY_4</autogen>
            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::D</autogen>
            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::W</autogen>
            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::JIS_COLON</autogen>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::P</autogen>
            <!-- 左手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::A, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::S, KeyCode::KEY_3</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::D, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::F, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::G, KeyCode::M</autogen>
            <!-- 左手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::A, KeyCode::KEY_4, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::S, KeyCode::D, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::D, KeyCode::W, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::F, KeyCode::JIS_COLON, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::G, KeyCode::P, KeyCode::JIS_ATMARK</autogen>

            <!-- 左手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::T</autogen>
            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::Q</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::B</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::X</autogen>
            <!-- 左手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::Q, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::W, KeyCode::KEY_5</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::E, KeyCode::L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::R, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::T, KeyCode::SEMICOLON</autogen>
            <!-- 左手 上段 (クロス親指シフト) -->
            <!-- Q - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::W, KeyCode::T, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::E, KeyCode::Q, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::R, KeyCode::B, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::T, KeyCode::X, KeyCode::JIS_ATMARK</autogen>

            <!-- 左手 下段 -->
            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE,            KeyCode::DOT, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE,            KeyCode::V</autogen>
            <autogen>__KeyToKey__ KeyCode::X, VK_SHIFT | ModifierFlag::NONE, KeyCode::V, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE,            KeyCode::R</autogen>
            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE,            KeyCode::KEY_2</autogen>
            <autogen>__KeyToKey__ KeyCode::V, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE,            KeyCode::JIS_HAT</autogen>
            <autogen>__KeyToKey__ KeyCode::B, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_HAT, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- 左手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::Z, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::X, KeyCode::JIS_YEN</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::C, KeyCode::JIS_UNDERSCORE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::V, KeyCode::KEY_7</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::B, KeyCode::E, ModifierFlag::SHIFT_L</autogen>
            <!-- 左手 下段 (クロス親指シフト) -->
            <!-- Z - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::X, KeyCode::V, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::C, KeyCode::R, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::V, KeyCode::KEY_2, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::B, KeyCode::JIS_HAT, KeyCode::JIS_ATMARK</autogen>


            <!-- 右手 中段 -->
            <autogen>__KeyToKey__ KeyCode::H,         ModifierFlag::NONE,            KeyCode::F</autogen>
            <autogen>__KeyToKey__ KeyCode::H,         VK_SHIFT | ModifierFlag::NONE, KeyCode::F, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::NONE,            KeyCode::S</autogen>
            <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::NONE,            KeyCode::G</autogen>
            <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::NONE,            KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE,            KeyCode::Y</autogen>
            <!-- : キーはそのまま -->

            <!-- 右手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::H, KeyCode::N</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::J, KeyCode::KEY_6</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::K, KeyCode::K</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::SEMICOLON, KeyCode::Z, ModifierFlag::SHIFT_L</autogen>
            <!-- : キーはそのまま -->
            <!-- 右手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::H, KeyCode::F, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::J, KeyCode::S, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::K, KeyCode::G, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::L, KeyCode::MINUS, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- ; - 対応キーなし -->

            <!-- 右手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::A</autogen>
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::H</autogen>
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::Z</autogen>
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE, KeyCode::JIS_ATMARK</autogen>
            <!-- 右手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::Y, KeyCode::KEY_9</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::U, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::I, KeyCode::DOT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::O, KeyCode::J</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::P, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
            <!-- @ - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::JIS_BRACKET_LEFT, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE</autogen>
            <!-- 右手 上段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::Y, KeyCode::F, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::U, KeyCode::A, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::I, KeyCode::H, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::O, KeyCode::Z, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::P, KeyCode::V, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- @ - 対応キーなし -->
            <!-- [ - 対応キーなし -->

            <!-- 右手 下段 -->
            <autogen>__KeyToKey__ KeyCode::N,     ModifierFlag::NONE,            KeyCode::SLASH</autogen>
            <autogen>__KeyToKey__ KeyCode::M,     ModifierFlag::NONE,            KeyCode::C</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE,            KeyCode::COMMA</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,   ModifierFlag::NONE,            KeyCode::MINUS</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,   VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE,            KeyCode::SLASH, ModifierFlag::SHIFT_L</autogen>
            <!-- _ - 対応キーなし -->
            <!-- 右手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::N, KeyCode::KEY_1</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::M, KeyCode::KEY_8</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::COMMA, KeyCode::JIS_BRACKET_RIGHT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::DOT, KeyCode::KEY_0</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::SLASH, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
            <!-- _ - 対応キーなし -->
            <!-- 右手 下段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::N, KeyCode::KEY_2, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::M, KeyCode::C, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::COMMA, KeyCode::JIS_HAT, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::DOT, KeyCode::MINUS, KeyCode::JIS_ATMARK</autogen>
            <!-- / - 対応キーなし -->
            <!-- _ - 対応キーなし -->
            <!-- 上段 数字キー -->
            <autogen>__KeyToKey__ KeyCode::KEY_1,   ModifierFlag::NONE, KeyCode::KEY_1,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_2,   ModifierFlag::NONE, KeyCode::KEY_2,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_3,   ModifierFlag::NONE, KeyCode::KEY_3,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4,   ModifierFlag::NONE, KeyCode::KEY_4,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_5,   ModifierFlag::NONE, KeyCode::KEY_5,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   ModifierFlag::NONE, KeyCode::KEY_6,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   ModifierFlag::NONE, KeyCode::KEY_7,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   ModifierFlag::NONE, KeyCode::KEY_8,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   ModifierFlag::NONE, KeyCode::KEY_9,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   ModifierFlag::NONE, KeyCode::KEY_0,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,   ModifierFlag::NONE, KeyCode::MINUS,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT, ModifierFlag::NONE, KeyCode::JIS_HAT, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_YEN, ModifierFlag::NONE, KeyCode::JIS_YEN, ModifierFlag::OPTION_L</autogen>

            <autogen>__KeyToKey__ KeyCode::KEY_1,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_3,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_5,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,   VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_HAT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_YEN, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_YEN, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_1, KeyCode::SLASH, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_2, KeyCode::SLASH, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_3, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_6, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_7, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::MINUS,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_1, KeyCode::SLASH, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_2, KeyCode::SLASH, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_3, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_6, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_7, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::MINUS,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
          </item>
          <item>
            <name>＜かなモード＞ 左シフト＝英数, 右シフト＝スペース</name>
            <appendix>※下の「EISUU x2 to EISUU」を同時に使うことをおすすめします</appendix>
            <identifier>remap.oyayubi_shift_kana_eisuu_space</identifier>
            <inputsource_only>JAPANESE</inputsource_only>
            <!-- 左手 中段 -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::KEY_4</autogen>
            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::D</autogen>
            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::W</autogen>
            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::JIS_COLON</autogen>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::P</autogen>
            <!-- 左手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::A, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::S, KeyCode::KEY_3</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::D, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::F, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::G, KeyCode::M</autogen>
            <!-- 左手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::A, KeyCode::KEY_4, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::S, KeyCode::D, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::D, KeyCode::W, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::F, KeyCode::JIS_COLON, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::G, KeyCode::P, KeyCode::JIS_ATMARK</autogen>

            <!-- 左手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::T</autogen>
            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::Q</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::B</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::X</autogen>
            <!-- 左手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Q, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::W, KeyCode::KEY_5</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::E, KeyCode::L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::R, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::T, KeyCode::SEMICOLON</autogen>
            <!-- 左手 上段 (クロス親指シフト) -->
            <!-- Q - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::W, KeyCode::T, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::E, KeyCode::Q, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::R, KeyCode::B, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::T, KeyCode::X, KeyCode::JIS_ATMARK</autogen>

            <!-- 左手 下段 -->
            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE,            KeyCode::DOT, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE,            KeyCode::V</autogen>
            <autogen>__KeyToKey__ KeyCode::X, VK_SHIFT | ModifierFlag::NONE, KeyCode::V, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE,            KeyCode::R</autogen>
            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE,            KeyCode::KEY_2</autogen>
            <autogen>__KeyToKey__ KeyCode::V, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE,            KeyCode::JIS_HAT</autogen>
            <autogen>__KeyToKey__ KeyCode::B, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_HAT, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- 左手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Z, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::X, KeyCode::JIS_YEN</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::C, KeyCode::JIS_UNDERSCORE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::V, KeyCode::KEY_7</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::B, KeyCode::E, ModifierFlag::SHIFT_L</autogen>
            <!-- 左手 下段 (クロス親指シフト) -->
            <!-- Z - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::X, KeyCode::V, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::C, KeyCode::R, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::V, KeyCode::KEY_2, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::B, KeyCode::JIS_HAT, KeyCode::JIS_ATMARK</autogen>


            <!-- 右手 中段 -->
            <autogen>__KeyToKey__ KeyCode::H,         ModifierFlag::NONE,            KeyCode::F</autogen>
            <autogen>__KeyToKey__ KeyCode::H,         VK_SHIFT | ModifierFlag::NONE, KeyCode::F, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::NONE,            KeyCode::S</autogen>
            <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::NONE,            KeyCode::G</autogen>
            <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::NONE,            KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE,            KeyCode::Y</autogen>
            <!-- : キーはそのまま -->

            <!-- 右手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::H, KeyCode::N</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::J, KeyCode::KEY_6</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::K, KeyCode::K</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::SEMICOLON, KeyCode::Z, ModifierFlag::SHIFT_L</autogen>
            <!-- : キーはそのまま -->
            <!-- 右手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::H, KeyCode::F, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::J, KeyCode::S, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::K, KeyCode::G, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::L, KeyCode::MINUS, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- ; - 対応キーなし -->

            <!-- 右手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::A</autogen>
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::H</autogen>
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::Z</autogen>
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE, KeyCode::JIS_ATMARK</autogen>
            <!-- 右手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::Y, KeyCode::KEY_9</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::U, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::I, KeyCode::DOT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::O, KeyCode::J</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::P, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
            <!-- @ - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::JIS_BRACKET_LEFT, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE</autogen>
            <!-- 右手 上段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Y, KeyCode::F, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::U, KeyCode::A, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::I, KeyCode::H, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::O, KeyCode::Z, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::P, KeyCode::V, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- @ - 対応キーなし -->
            <!-- [ - 対応キーなし -->

            <!-- 右手 下段 -->
            <autogen>__KeyToKey__ KeyCode::N,     ModifierFlag::NONE,            KeyCode::SLASH</autogen>
            <autogen>__KeyToKey__ KeyCode::M,     ModifierFlag::NONE,            KeyCode::C</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE,            KeyCode::COMMA</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,   ModifierFlag::NONE,            KeyCode::MINUS</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,   VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE,            KeyCode::SLASH, ModifierFlag::SHIFT_L</autogen>
            <!-- _ - 対応キーなし -->
            <!-- 右手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::N, KeyCode::KEY_1</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::M, KeyCode::KEY_8</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::COMMA, KeyCode::JIS_BRACKET_RIGHT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::DOT, KeyCode::KEY_0</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::SLASH, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
            <!-- _ - 対応キーなし -->
            <!-- 右手 下段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::N, KeyCode::KEY_2, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::M, KeyCode::C, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::COMMA, KeyCode::JIS_HAT, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::DOT, KeyCode::MINUS, KeyCode::JIS_ATMARK</autogen>
            <!-- / - 対応キーなし -->
            <!-- _ - 対応キーなし -->
            <!-- 上段 数字キー -->
            <autogen>__KeyToKey__ KeyCode::KEY_1,   ModifierFlag::NONE, KeyCode::KEY_1,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_2,   ModifierFlag::NONE, KeyCode::KEY_2,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_3,   ModifierFlag::NONE, KeyCode::KEY_3,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4,   ModifierFlag::NONE, KeyCode::KEY_4,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_5,   ModifierFlag::NONE, KeyCode::KEY_5,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   ModifierFlag::NONE, KeyCode::KEY_6,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   ModifierFlag::NONE, KeyCode::KEY_7,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   ModifierFlag::NONE, KeyCode::KEY_8,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   ModifierFlag::NONE, KeyCode::KEY_9,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   ModifierFlag::NONE, KeyCode::KEY_0,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,   ModifierFlag::NONE, KeyCode::MINUS,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT, ModifierFlag::NONE, KeyCode::JIS_HAT, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_YEN, ModifierFlag::NONE, KeyCode::JIS_YEN, ModifierFlag::OPTION_L</autogen>

            <autogen>__KeyToKey__ KeyCode::KEY_1,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_3,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_5,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,   VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_HAT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_YEN, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_YEN, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_1, KeyCode::SLASH, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_2, KeyCode::SLASH, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_3, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_6, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_7, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::MINUS,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_1, KeyCode::SLASH, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_2, KeyCode::SLASH, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_3, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_6, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_7, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::MINUS,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
          </item>
          <item>
            <name>＜かなモード＞ 左シフト＝英数, 右シフト＝かな</name>
            <appendix>※下の「EISUU x2 to EISUU」を同時に使うことをおすすめします</appendix>
            <identifier>remap.oyayubi_shift_kana_eisuu_kana</identifier>
            <inputsource_only>JAPANESE</inputsource_only>
            <!-- 左手 中段 -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::KEY_4</autogen>
            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::D</autogen>
            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::W</autogen>
            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::JIS_COLON</autogen>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::P</autogen>
            <!-- 左手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::A, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::S, KeyCode::KEY_3</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::D, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::F, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::G, KeyCode::M</autogen>
            <!-- 左手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::A, KeyCode::KEY_4, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::S, KeyCode::D, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::D, KeyCode::W, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::F, KeyCode::JIS_COLON, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::G, KeyCode::P, KeyCode::JIS_ATMARK</autogen>

            <!-- 左手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::T</autogen>
            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::Q</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::B</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::X</autogen>
            <!-- 左手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Q, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::W, KeyCode::KEY_5</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::E, KeyCode::L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::R, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::T, KeyCode::SEMICOLON</autogen>
            <!-- 左手 上段 (クロス親指シフト) -->
            <!-- Q - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::W, KeyCode::T, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::E, KeyCode::Q, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::R, KeyCode::B, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::T, KeyCode::X, KeyCode::JIS_ATMARK</autogen>

            <!-- 左手 下段 -->
            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE,            KeyCode::DOT, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE,            KeyCode::V</autogen>
            <autogen>__KeyToKey__ KeyCode::X, VK_SHIFT | ModifierFlag::NONE, KeyCode::V, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE,            KeyCode::R</autogen>
            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE,            KeyCode::KEY_2</autogen>
            <autogen>__KeyToKey__ KeyCode::V, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE,            KeyCode::JIS_HAT</autogen>
            <autogen>__KeyToKey__ KeyCode::B, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_HAT, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- 左手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Z, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::X, KeyCode::JIS_YEN</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::C, KeyCode::JIS_UNDERSCORE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::V, KeyCode::KEY_7</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::B, KeyCode::E, ModifierFlag::SHIFT_L</autogen>
            <!-- 左手 下段 (クロス親指シフト) -->
            <!-- Z - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::X, KeyCode::V, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::C, KeyCode::R, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::V, KeyCode::KEY_2, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::B, KeyCode::JIS_HAT, KeyCode::JIS_ATMARK</autogen>


            <!-- 右手 中段 -->
            <autogen>__KeyToKey__ KeyCode::H,         ModifierFlag::NONE,            KeyCode::F</autogen>
            <autogen>__KeyToKey__ KeyCode::H,         VK_SHIFT | ModifierFlag::NONE, KeyCode::F, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::NONE,            KeyCode::S</autogen>
            <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::NONE,            KeyCode::G</autogen>
            <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::NONE,            KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE,            KeyCode::Y</autogen>
            <!-- : キーはそのまま -->

            <!-- 右手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::H, KeyCode::N</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::J, KeyCode::KEY_6</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::K, KeyCode::K</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::SEMICOLON, KeyCode::Z, ModifierFlag::SHIFT_L</autogen>
            <!-- : キーはそのまま -->
            <!-- 右手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::H, KeyCode::F, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::J, KeyCode::S, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::K, KeyCode::G, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::L, KeyCode::MINUS, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- ; - 対応キーなし -->

            <!-- 右手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::A</autogen>
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::H</autogen>
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::Z</autogen>
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE, KeyCode::JIS_ATMARK</autogen>
            <!-- 右手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::Y, KeyCode::KEY_9</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::U, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::I, KeyCode::DOT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::O, KeyCode::J</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::P, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
            <!-- @ - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::JIS_BRACKET_LEFT, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE</autogen>
            <!-- 右手 上段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Y, KeyCode::F, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::U, KeyCode::A, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::I, KeyCode::H, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::O, KeyCode::Z, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::P, KeyCode::V, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- @ - 対応キーなし -->
            <!-- [ - 対応キーなし -->

            <!-- 右手 下段 -->
            <autogen>__KeyToKey__ KeyCode::N,     ModifierFlag::NONE,            KeyCode::SLASH</autogen>
            <autogen>__KeyToKey__ KeyCode::M,     ModifierFlag::NONE,            KeyCode::C</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE,            KeyCode::COMMA</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,   ModifierFlag::NONE,            KeyCode::MINUS</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,   VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE,            KeyCode::SLASH, ModifierFlag::SHIFT_L</autogen>
            <!-- _ - 対応キーなし -->
            <!-- 右手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::N, KeyCode::KEY_1</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::M, KeyCode::KEY_8</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::COMMA, KeyCode::JIS_BRACKET_RIGHT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::DOT, KeyCode::KEY_0</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::SLASH, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
            <!-- _ - 対応キーなし -->
            <!-- 右手 下段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::N, KeyCode::KEY_2, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::M, KeyCode::C, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::COMMA, KeyCode::JIS_HAT, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::DOT, KeyCode::MINUS, KeyCode::JIS_ATMARK</autogen>
            <!-- / - 対応キーなし -->
            <!-- _ - 対応キーなし -->
            <!-- 上段 数字キー -->
            <autogen>__KeyToKey__ KeyCode::KEY_1,   ModifierFlag::NONE, KeyCode::KEY_1,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_2,   ModifierFlag::NONE, KeyCode::KEY_2,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_3,   ModifierFlag::NONE, KeyCode::KEY_3,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4,   ModifierFlag::NONE, KeyCode::KEY_4,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_5,   ModifierFlag::NONE, KeyCode::KEY_5,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   ModifierFlag::NONE, KeyCode::KEY_6,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   ModifierFlag::NONE, KeyCode::KEY_7,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   ModifierFlag::NONE, KeyCode::KEY_8,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   ModifierFlag::NONE, KeyCode::KEY_9,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   ModifierFlag::NONE, KeyCode::KEY_0,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,   ModifierFlag::NONE, KeyCode::MINUS,   ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT, ModifierFlag::NONE, KeyCode::JIS_HAT, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_YEN, ModifierFlag::NONE, KeyCode::JIS_YEN, ModifierFlag::OPTION_L</autogen>

            <autogen>__KeyToKey__ KeyCode::KEY_1,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_3,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_5,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,   VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_HAT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_YEN, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_YEN, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_1, KeyCode::SLASH, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_2, KeyCode::SLASH, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_3, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_6, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_7, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::MINUS,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_1, KeyCode::SLASH, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_2, KeyCode::SLASH, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_3, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_6, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_7, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::MINUS,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
          </item>
        </item>
        <item>
          <name>＜かなモード for ATOK＞</name>
          <item>
            <name>＜かなモード for ATOK＞ 左シフト＝スペース, 右シフト＝かな</name>
            <identifier>remap.oyayubi_shift_kana_atok_space_kana</identifier>
            <inputsource_only>JAPANESE</inputsource_only>
            <!-- 左手 中段 -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::KEY_4</autogen>
            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::D</autogen>
            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::W</autogen>
            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::JIS_COLON</autogen>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::P</autogen>
            <!-- 左手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::A, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::S, KeyCode::KEY_3</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::D, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::F, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::G, KeyCode::M</autogen>
            <!-- 左手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::A, KeyCode::KEY_4, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::S, KeyCode::D, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::D, KeyCode::W, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::F, KeyCode::JIS_COLON, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::G, KeyCode::P, KeyCode::JIS_ATMARK</autogen>

            <!-- 左手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::T</autogen>
            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::Q</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::B</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::X</autogen>
            <!-- 左手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::Q, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::W, KeyCode::KEY_5</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::E, KeyCode::L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::R, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::T, KeyCode::SEMICOLON</autogen>
            <!-- 左手 上段 (クロス親指シフト) -->
            <!-- Q - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::W, KeyCode::T, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::E, KeyCode::Q, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::R, KeyCode::B, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::T, KeyCode::X, KeyCode::JIS_ATMARK</autogen>

            <!-- 左手 下段 -->
            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE,            KeyCode::DOT, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE,            KeyCode::V</autogen>
            <autogen>__KeyToKey__ KeyCode::X, VK_SHIFT | ModifierFlag::NONE, KeyCode::V, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE,            KeyCode::R</autogen>
            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE,            KeyCode::KEY_2</autogen>
            <autogen>__KeyToKey__ KeyCode::V, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE,            KeyCode::JIS_HAT</autogen>
            <autogen>__KeyToKey__ KeyCode::B, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_HAT, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- 左手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::Z, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::X, KeyCode::JIS_YEN</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::C, KeyCode::JIS_UNDERSCORE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::V, KeyCode::KEY_7</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::B, KeyCode::E, ModifierFlag::SHIFT_L</autogen>
            <!-- 左手 下段 (クロス親指シフト) -->
            <!-- Z - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::X, KeyCode::V, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::C, KeyCode::R, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::V, KeyCode::KEY_2, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::B, KeyCode::JIS_HAT, KeyCode::JIS_ATMARK</autogen>


            <!-- 右手 中段 -->
            <autogen>__KeyToKey__ KeyCode::H,         ModifierFlag::NONE,            KeyCode::F</autogen>
            <autogen>__KeyToKey__ KeyCode::H,         VK_SHIFT | ModifierFlag::NONE, KeyCode::F, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::NONE,            KeyCode::S</autogen>
            <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::NONE,            KeyCode::G</autogen>
            <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::NONE,            KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE,            KeyCode::Y</autogen>
            <!-- : キーはそのまま -->

            <!-- 右手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::H, KeyCode::N</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::J, KeyCode::KEY_6</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::K, KeyCode::K</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::SEMICOLON, KeyCode::Z, ModifierFlag::SHIFT_L</autogen>
            <!-- : キーはそのまま -->
            <!-- 右手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::H, KeyCode::F, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::J, KeyCode::S, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::K, KeyCode::G, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::L, KeyCode::MINUS, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- ; - 対応キーなし -->

            <!-- 右手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::A</autogen>
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::H</autogen>
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::Z</autogen>
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE, KeyCode::JIS_ATMARK</autogen>
            <!-- 右手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::Y, KeyCode::KEY_9</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::U, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::I, KeyCode::DOT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::O, KeyCode::J</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::P, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
            <!-- @ - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::JIS_BRACKET_LEFT, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE</autogen>
            <!-- 右手 上段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::Y, KeyCode::F, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::U, KeyCode::A, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::I, KeyCode::H, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::O, KeyCode::Z, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::P, KeyCode::V, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- @ - 対応キーなし -->
            <!-- [ - 対応キーなし -->

            <!-- 右手 下段 -->
            <autogen>__KeyToKey__ KeyCode::N,     ModifierFlag::NONE,            KeyCode::SLASH</autogen>
            <autogen>__KeyToKey__ KeyCode::M,     ModifierFlag::NONE,            KeyCode::C</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE,            KeyCode::COMMA</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,   ModifierFlag::NONE,            KeyCode::MINUS</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,   VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE,            KeyCode::SLASH, ModifierFlag::SHIFT_L</autogen>
            <!-- _ - 対応キーなし -->
            <!-- 右手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::N, KeyCode::KEY_1</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::M, KeyCode::KEY_8</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::COMMA, KeyCode::JIS_BRACKET_RIGHT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::DOT, KeyCode::KEY_0</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::SLASH, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
            <!-- _ - 対応キーなし -->
            <!-- 右手 下段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::N, KeyCode::KEY_2, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::M, KeyCode::C, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::COMMA, KeyCode::JIS_HAT, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::DOT, KeyCode::MINUS, KeyCode::JIS_ATMARK</autogen>
            <!-- / - 対応キーなし -->
            <!-- _ - 対応キーなし -->
            <!-- 上段 数字キー -->
            <autogen>__KeyToKey__ KeyCode::KEY_1,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_1,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_2,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_2,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_3,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_3,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_4,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_5,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_5,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_6,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_7,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_8,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_9,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_0,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::MINUS,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT, ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::JIS_HAT, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_YEN, ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::JIS_YEN, KeyCode::CAPSLOCK</autogen>

            <autogen>__KeyToKey__ KeyCode::KEY_1,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_1,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_2,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_3,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_3,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_4,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_5,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_5,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_6,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_7,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_8,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_9,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_0,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::MINUS,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT, VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_YEN, VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::JIS_YEN, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_1, KeyCode::CAPSLOCK, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_2, KeyCode::CAPSLOCK, KeyCode::SLASH, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_3, KeyCode::CAPSLOCK, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_6, KeyCode::CAPSLOCK, KeyCode::JIS_BRACKET_LEFT, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_7, KeyCode::CAPSLOCK, KeyCode::JIS_BRACKET_RIGHT, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_8, KeyCode::CAPSLOCK, KeyCode::KEY_8, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_9, KeyCode::CAPSLOCK, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::MINUS,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_1, KeyCode::CAPSLOCK, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_2, KeyCode::CAPSLOCK, KeyCode::SLASH, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_3, KeyCode::CAPSLOCK, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_6, KeyCode::CAPSLOCK, KeyCode::JIS_BRACKET_LEFT, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_7, KeyCode::CAPSLOCK, KeyCode::JIS_BRACKET_RIGHT, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_8, KeyCode::CAPSLOCK, KeyCode::KEY_8, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_9, KeyCode::CAPSLOCK, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::MINUS,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
          </item>
          <item>
            <name>＜かなモード for ATOK＞ 左シフト＝英数, 右シフト＝スペース</name>
            <appendix>※下の「EISUU x2 to EISUU」を同時に使うことをおすすめします</appendix>
            <identifier>remap.oyayubi_shift_kana_atok_eisuu_space</identifier>
            <inputsource_only>JAPANESE</inputsource_only>
            <!-- 左手 中段 -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::KEY_4</autogen>
            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::D</autogen>
            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::W</autogen>
            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::JIS_COLON</autogen>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::P</autogen>
            <!-- 左手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::A, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::S, KeyCode::KEY_3</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::D, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::F, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::G, KeyCode::M</autogen>
            <!-- 左手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::A, KeyCode::KEY_4, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::S, KeyCode::D, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::D, KeyCode::W, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::F, KeyCode::JIS_COLON, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::G, KeyCode::P, KeyCode::JIS_ATMARK</autogen>

            <!-- 左手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::T</autogen>
            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::Q</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::B</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::X</autogen>
            <!-- 左手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Q, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::W, KeyCode::KEY_5</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::E, KeyCode::L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::R, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::T, KeyCode::SEMICOLON</autogen>
            <!-- 左手 上段 (クロス親指シフト) -->
            <!-- Q - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::W, KeyCode::T, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::E, KeyCode::Q, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::R, KeyCode::B, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::T, KeyCode::X, KeyCode::JIS_ATMARK</autogen>

            <!-- 左手 下段 -->
            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE,            KeyCode::DOT, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE,            KeyCode::V</autogen>
            <autogen>__KeyToKey__ KeyCode::X, VK_SHIFT | ModifierFlag::NONE, KeyCode::V, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE,            KeyCode::R</autogen>
            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE,            KeyCode::KEY_2</autogen>
            <autogen>__KeyToKey__ KeyCode::V, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE,            KeyCode::JIS_HAT</autogen>
            <autogen>__KeyToKey__ KeyCode::B, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_HAT, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- 左手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Z, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::X, KeyCode::JIS_YEN</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::C, KeyCode::JIS_UNDERSCORE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::V, KeyCode::KEY_7</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::B, KeyCode::E, ModifierFlag::SHIFT_L</autogen>
            <!-- 左手 下段 (クロス親指シフト) -->
            <!-- Z - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::X, KeyCode::V, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::C, KeyCode::R, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::V, KeyCode::KEY_2, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::B, KeyCode::JIS_HAT, KeyCode::JIS_ATMARK</autogen>


            <!-- 右手 中段 -->
            <autogen>__KeyToKey__ KeyCode::H,         ModifierFlag::NONE,            KeyCode::F</autogen>
            <autogen>__KeyToKey__ KeyCode::H,         VK_SHIFT | ModifierFlag::NONE, KeyCode::F, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::NONE,            KeyCode::S</autogen>
            <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::NONE,            KeyCode::G</autogen>
            <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::NONE,            KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE,            KeyCode::Y</autogen>
            <!-- : キーはそのまま -->

            <!-- 右手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::H, KeyCode::N</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::J, KeyCode::KEY_6</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::K, KeyCode::K</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::SEMICOLON, KeyCode::Z, ModifierFlag::SHIFT_L</autogen>
            <!-- : キーはそのまま -->
            <!-- 右手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::H, KeyCode::F, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::J, KeyCode::S, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::K, KeyCode::G, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::L, KeyCode::MINUS, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- ; - 対応キーなし -->

            <!-- 右手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::A</autogen>
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::H</autogen>
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::Z</autogen>
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE, KeyCode::JIS_ATMARK</autogen>
            <!-- 右手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::Y, KeyCode::KEY_9</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::U, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::I, KeyCode::DOT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::O, KeyCode::J</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::P, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
            <!-- @ - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::JIS_BRACKET_LEFT, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE</autogen>
            <!-- 右手 上段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Y, KeyCode::F, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::U, KeyCode::A, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::I, KeyCode::H, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::O, KeyCode::Z, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::P, KeyCode::V, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- @ - 対応キーなし -->
            <!-- [ - 対応キーなし -->

            <!-- 右手 下段 -->
            <autogen>__KeyToKey__ KeyCode::N,     ModifierFlag::NONE,            KeyCode::SLASH</autogen>
            <autogen>__KeyToKey__ KeyCode::M,     ModifierFlag::NONE,            KeyCode::C</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE,            KeyCode::COMMA</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,   ModifierFlag::NONE,            KeyCode::MINUS</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,   VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE,            KeyCode::SLASH, ModifierFlag::SHIFT_L</autogen>
            <!-- _ - 対応キーなし -->
            <!-- 右手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::N, KeyCode::KEY_1</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::M, KeyCode::KEY_8</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::COMMA, KeyCode::JIS_BRACKET_RIGHT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::DOT, KeyCode::KEY_0</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::SLASH, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
            <!-- _ - 対応キーなし -->
            <!-- 右手 下段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::N, KeyCode::KEY_2, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::M, KeyCode::C, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::COMMA, KeyCode::JIS_HAT, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::DOT, KeyCode::MINUS, KeyCode::JIS_ATMARK</autogen>
            <!-- / - 対応キーなし -->
            <!-- _ - 対応キーなし -->
            <!-- 上段 数字キー -->
            <autogen>__KeyToKey__ KeyCode::KEY_1,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_1,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_2,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_2,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_3,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_3,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_4,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_5,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_5,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_6,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_7,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_8,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_9,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_0,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::MINUS,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT, ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::JIS_HAT, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_YEN, ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::JIS_YEN, KeyCode::CAPSLOCK</autogen>

            <autogen>__KeyToKey__ KeyCode::KEY_1,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_1,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_2,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_3,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_3,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_4,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_5,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_5,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_6,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_7,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_8,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_9,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_0,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::MINUS,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT, VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_YEN, VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::JIS_YEN, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_1, KeyCode::CAPSLOCK, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_2, KeyCode::CAPSLOCK, KeyCode::SLASH, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_3, KeyCode::CAPSLOCK, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_6, KeyCode::CAPSLOCK, KeyCode::JIS_BRACKET_LEFT, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_7, KeyCode::CAPSLOCK, KeyCode::JIS_BRACKET_RIGHT, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_8, KeyCode::CAPSLOCK, KeyCode::KEY_8, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_9, KeyCode::CAPSLOCK, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::MINUS,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_1, KeyCode::CAPSLOCK, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_2, KeyCode::CAPSLOCK, KeyCode::SLASH, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_3, KeyCode::CAPSLOCK, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_6, KeyCode::CAPSLOCK, KeyCode::JIS_BRACKET_LEFT, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_7, KeyCode::CAPSLOCK, KeyCode::JIS_BRACKET_RIGHT, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_8, KeyCode::CAPSLOCK, KeyCode::KEY_8, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_9, KeyCode::CAPSLOCK, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::MINUS,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
          </item>
          <item>
            <name>＜かなモード for ATOK＞ 左シフト＝英数, 右シフト＝かな</name>
            <appendix>※下の「EISUU x2 to EISUU」を同時に使うことをおすすめします</appendix>
            <identifier>remap.oyayubi_shift_kana_atok_eisuu_kana</identifier>
            <inputsource_only>JAPANESE</inputsource_only>
            <!-- 左手 中段 -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::KEY_4</autogen>
            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::D</autogen>
            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::W</autogen>
            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::JIS_COLON</autogen>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::P</autogen>
            <!-- 左手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::A, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::S, KeyCode::KEY_3</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::D, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::F, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::G, KeyCode::M</autogen>
            <!-- 左手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::A, KeyCode::KEY_4, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::S, KeyCode::D, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::D, KeyCode::W, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::F, KeyCode::JIS_COLON, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::G, KeyCode::P, KeyCode::JIS_ATMARK</autogen>

            <!-- 左手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::T</autogen>
            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::Q</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::B</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::X</autogen>
            <!-- 左手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Q, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::W, KeyCode::KEY_5</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::E, KeyCode::L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::R, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::T, KeyCode::SEMICOLON</autogen>
            <!-- 左手 上段 (クロス親指シフト) -->
            <!-- Q - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::W, KeyCode::T, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::E, KeyCode::Q, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::R, KeyCode::B, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::T, KeyCode::X, KeyCode::JIS_ATMARK</autogen>

            <!-- 左手 下段 -->
            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE,            KeyCode::DOT, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE,            KeyCode::V</autogen>
            <autogen>__KeyToKey__ KeyCode::X, VK_SHIFT | ModifierFlag::NONE, KeyCode::V, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE,            KeyCode::R</autogen>
            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE,            KeyCode::KEY_2</autogen>
            <autogen>__KeyToKey__ KeyCode::V, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE,            KeyCode::JIS_HAT</autogen>
            <autogen>__KeyToKey__ KeyCode::B, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_HAT, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- 左手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Z, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::X, KeyCode::JIS_YEN</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::C, KeyCode::JIS_UNDERSCORE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::V, KeyCode::KEY_7</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::B, KeyCode::E, ModifierFlag::SHIFT_L</autogen>
            <!-- 左手 下段 (クロス親指シフト) -->
            <!-- Z - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::X, KeyCode::V, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::C, KeyCode::R, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::V, KeyCode::KEY_2, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::B, KeyCode::JIS_HAT, KeyCode::JIS_ATMARK</autogen>


            <!-- 右手 中段 -->
            <autogen>__KeyToKey__ KeyCode::H,         ModifierFlag::NONE,            KeyCode::F</autogen>
            <autogen>__KeyToKey__ KeyCode::H,         VK_SHIFT | ModifierFlag::NONE, KeyCode::F, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::J,         ModifierFlag::NONE,            KeyCode::S</autogen>
            <autogen>__KeyToKey__ KeyCode::K,         ModifierFlag::NONE,            KeyCode::G</autogen>
            <autogen>__KeyToKey__ KeyCode::L,         ModifierFlag::NONE,            KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE,            KeyCode::Y</autogen>
            <!-- : キーはそのまま -->

            <!-- 右手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::H, KeyCode::N</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::J, KeyCode::KEY_6</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::K, KeyCode::K</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::SEMICOLON, KeyCode::Z, ModifierFlag::SHIFT_L</autogen>
            <!-- : キーはそのまま -->
            <!-- 右手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::H, KeyCode::F, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::J, KeyCode::S, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::K, KeyCode::G, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::L, KeyCode::MINUS, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- ; - 対応キーなし -->

            <!-- 右手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::A</autogen>
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::H</autogen>
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::Z</autogen>
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::OPTION_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE, KeyCode::JIS_ATMARK</autogen>
            <!-- 右手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::Y, KeyCode::KEY_9</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::U, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::I, KeyCode::DOT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::O, KeyCode::J</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::P, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
            <!-- @ - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::JIS_BRACKET_LEFT, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE</autogen>
            <!-- 右手 上段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Y, KeyCode::F, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::U, KeyCode::A, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::I, KeyCode::H, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::O, KeyCode::Z, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::P, KeyCode::V, KeyCode::JIS_BRACKET_LEFT</autogen>
            <!-- @ - 対応キーなし -->
            <!-- [ - 対応キーなし -->

            <!-- 右手 下段 -->
            <autogen>__KeyToKey__ KeyCode::N,     ModifierFlag::NONE,            KeyCode::SLASH</autogen>
            <autogen>__KeyToKey__ KeyCode::M,     ModifierFlag::NONE,            KeyCode::C</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE,            KeyCode::COMMA</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,   ModifierFlag::NONE,            KeyCode::MINUS</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,   VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE,            KeyCode::SLASH, ModifierFlag::SHIFT_L</autogen>
            <!-- _ - 対応キーなし -->
            <!-- 右手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::N, KeyCode::KEY_1</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::M, KeyCode::KEY_8</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::COMMA, KeyCode::JIS_BRACKET_RIGHT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::DOT, KeyCode::KEY_0</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::SLASH, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
            <!-- _ - 対応キーなし -->
            <!-- 右手 下段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::N, KeyCode::KEY_2, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::M, KeyCode::C, KeyCode::JIS_ATMARK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::COMMA, KeyCode::JIS_HAT, KeyCode::JIS_BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::DOT, KeyCode::MINUS, KeyCode::JIS_ATMARK</autogen>
            <!-- / - 対応キーなし -->
            <!-- _ - 対応キーなし -->
            <!-- 上段 数字キー -->
            <autogen>__KeyToKey__ KeyCode::KEY_1,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_1,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_2,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_2,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_3,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_3,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_4,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_5,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_5,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_6,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_7,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_8,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_9,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_0,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,   ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::MINUS,   KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT, ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::JIS_HAT, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_YEN, ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::JIS_YEN, KeyCode::CAPSLOCK</autogen>

            <autogen>__KeyToKey__ KeyCode::KEY_1,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_1,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_2,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_3,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_3,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_4,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_5,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_5,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_6,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_7,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_8,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_9,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::KEY_0,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,   VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::MINUS,   ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT, VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_YEN, VK_SHIFT | ModifierFlag::NONE, KeyCode::CAPSLOCK, KeyCode::JIS_YEN, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_1, KeyCode::CAPSLOCK, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_2, KeyCode::CAPSLOCK, KeyCode::SLASH, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_3, KeyCode::CAPSLOCK, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_6, KeyCode::CAPSLOCK, KeyCode::JIS_BRACKET_LEFT, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_7, KeyCode::CAPSLOCK, KeyCode::JIS_BRACKET_RIGHT, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_8, KeyCode::CAPSLOCK, KeyCode::KEY_8, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_9, KeyCode::CAPSLOCK, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::MINUS,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_1, KeyCode::CAPSLOCK, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_2, KeyCode::CAPSLOCK, KeyCode::SLASH, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_3, KeyCode::CAPSLOCK, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_6, KeyCode::CAPSLOCK, KeyCode::JIS_BRACKET_LEFT, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_7, KeyCode::CAPSLOCK, KeyCode::JIS_BRACKET_RIGHT, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_8, KeyCode::CAPSLOCK, KeyCode::KEY_8, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_9, KeyCode::CAPSLOCK, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::CAPSLOCK</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::MINUS,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
          </item>
        </item>
        <item>
          <name>＜ローマ字モード＞</name>
          <item>
            <name>＜ローマ字モード＞ 左シフト＝スペース, 右シフト＝かな</name>
            <identifier>remap.oyayubi_shift_roman_space_kana</identifier>
            <!--
                ======================================================================
                全体的な注意点

                母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
                キーが離されるまでそのキーが解放されない。

                そのため KeyCode::VK_NONE を最後に加える。
                （詳しい説明は jis_asuka_roman.xml にて）

              -->

            {{JAPANESE_OYAYUBISHIFT_EXTRA}}

            <inputsource_only>JAPANESE</inputsource_only>
            <!-- 左手 中段 -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::U,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::S, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::T, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::K, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::S, KeyCode::E, KeyCode::VK_NONE</autogen>
            <!-- 左手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::A, KeyCode::W, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::S, KeyCode::A,                         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::D, KeyCode::N, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::F, KeyCode::X, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::G, KeyCode::M, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <!-- 左手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::A, KeyCode::V, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::S, KeyCode::Z, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::D, KeyCode::D, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::F, KeyCode::G, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::G, KeyCode::Z, KeyCode::E, KeyCode::VK_NONE</autogen>

            <!-- 左手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::DOT,           KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::K, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::T, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::K, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::S, KeyCode::A, KeyCode::VK_NONE</autogen>
            <!-- 左手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::Q, KeyCode::X, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::W, KeyCode::E,                         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::E, KeyCode::R, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::R, KeyCode::X, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::T, KeyCode::R, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <!-- 左手 上段 (クロス親指シフト) -->
            <!-- Q - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::W, KeyCode::G, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::E, KeyCode::D, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::R, KeyCode::G, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::T, KeyCode::Z, KeyCode::A, KeyCode::VK_NONE</autogen>

            <!-- 左手 下段 -->
            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::H, KeyCode::I,               KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::S, KeyCode::U,               KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::H, KeyCode::U,               KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::H, KeyCode::E,               KeyCode::VK_NONE</autogen>
            <!-- 左手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::Z, KeyCode::X, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::X, KeyCode::MINUS,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::C, KeyCode::R, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::V, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::B, KeyCode::X, KeyCode::I, KeyCode::VK_NONE</autogen>
            <!-- 左手 下段 (クロス親指シフト) -->
            <!-- Z - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::X, KeyCode::B, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::C, KeyCode::Z, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::V, KeyCode::B, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::B, KeyCode::B, KeyCode::E, KeyCode::VK_NONE</autogen>

            <!-- 右手 中段 -->
            <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::H, KeyCode::A,         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::T, KeyCode::O,         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::K, KeyCode::I,         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::I,                     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::N, KeyCode::N, KeyCode::VK_NONE</autogen>
            <!-- : キーはそのまま -->

            <!-- 右手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::H, KeyCode::M, KeyCode::I,                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::J, KeyCode::O,                                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::K, KeyCode::N, KeyCode::O,                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::L, KeyCode::X, KeyCode::Y, KeyCode::O,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::SEMICOLON, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::JIS_COLON, KeyCode::SEMICOLON,                 KeyCode::VK_NONE</autogen>
            <!-- 右手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::H, KeyCode::B, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::J, KeyCode::D, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::K, KeyCode::G, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::L, KeyCode::P, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- ; - 対応キーなし -->

            <!-- 右手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::R, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::T, KeyCode::I,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K, KeyCode::U,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::T, KeyCode::U,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::COMMA,                KeyCode::VK_NONE</autogen>
            <!-- 右手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::Y, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::U, KeyCode::N, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::I, KeyCode::R, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::O, KeyCode::M, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::P, KeyCode::X, KeyCode::E, KeyCode::VK_NONE</autogen>
            <!-- @ - 対応キーなし -->
            <!-- [ - 対応キーなし -->
            <!-- 右手 上段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::Y, KeyCode::P, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::U, KeyCode::D, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::I, KeyCode::G, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::O, KeyCode::D, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::P, KeyCode::P, KeyCode::I, KeyCode::VK_NONE</autogen>
            <!-- @ - 対応キーなし -->
            <!-- [ - 対応キーなし -->

            <!-- 右手 下段 -->
            <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::M, KeyCode::E,                     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::S, KeyCode::O,                     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::N, KeyCode::E,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::NONE, KeyCode::H, KeyCode::O,                   KeyCode::VK_NONE</autogen>
            <block>
              <config_not>option.jis_oyayubishiftinput_passthrough_slash</config_not>
              <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            </block>
            <block>
              <config_only>option.jis_oyayubishiftinput_passthrough_slash</config_only>
              <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
            </block>
            <!-- 右手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::N, KeyCode::N, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::M, KeyCode::Y, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::COMMA, KeyCode::M, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::DOT, KeyCode::W, KeyCode::A,   KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::SLASH, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- 右手 下段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::N, KeyCode::P, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::M, KeyCode::Z, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::COMMA, KeyCode::P, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::DOT, KeyCode::B, KeyCode::O,   KeyCode::VK_NONE</autogen>

            <!-- 上段 数字キー -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_1, KeyCode::SLASH, ModifierFlag::SHIFT_L,              KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_2, KeyCode::SLASH,                                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_3, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L,            KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT,                          KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT,                         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_6, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::OPTION_L,  KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_7, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L,              KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L,              KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L,   KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::MINUS, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L,  KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_1, KeyCode::SLASH, ModifierFlag::SHIFT_L,               KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_2, KeyCode::SLASH,                                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_3, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT,                           KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT,                          KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_6, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::OPTION_L,   KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_7, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::OPTION_L,  KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L,               KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L,               KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L,    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::MINUS, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L,   KeyCode::VK_NONE</autogen>
          </item>
          <item>
            <name>＜ローマ字モード＞ 左シフト＝英数, 右シフト＝スペース</name>
            <appendix>※下の「EISUU x2 to EISUU」を同時に使うことをおすすめします</appendix>
            <identifier>remap.oyayubi_shift_roman_eisuu_space</identifier>
            <!--
                ======================================================================
                全体的な注意点

                母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
                キーが離されるまでそのキーが解放されない。

                そのため KeyCode::VK_NONE を最後に加える。
                （詳しい説明は jis_asuka_roman.xml にて）

              -->

            {{JAPANESE_OYAYUBISHIFT_EXTRA}}

            <inputsource_only>JAPANESE</inputsource_only>
            <!-- 左手 中段 -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::U,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::S, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::T, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::K, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::S, KeyCode::E, KeyCode::VK_NONE</autogen>
            <!-- 左手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::A, KeyCode::W, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::S, KeyCode::A,                         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::D, KeyCode::N, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::F, KeyCode::X, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::G, KeyCode::M, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <!-- 左手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::A, KeyCode::V, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::S, KeyCode::Z, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::D, KeyCode::D, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::F, KeyCode::G, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::G, KeyCode::Z, KeyCode::E, KeyCode::VK_NONE</autogen>

            <!-- 左手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::DOT,           KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::K, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::T, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::K, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::S, KeyCode::A, KeyCode::VK_NONE</autogen>
            <!-- 左手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Q, KeyCode::X, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::W, KeyCode::E,                         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::E, KeyCode::R, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::R, KeyCode::X, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::T, KeyCode::R, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <!-- 左手 上段 (クロス親指シフト) -->
            <!-- Q - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::W, KeyCode::G, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::E, KeyCode::D, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::R, KeyCode::G, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::T, KeyCode::Z, KeyCode::A, KeyCode::VK_NONE</autogen>

            <!-- 左手 下段 -->
            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::H, KeyCode::I,               KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::S, KeyCode::U,               KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::H, KeyCode::U,               KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::H, KeyCode::E,               KeyCode::VK_NONE</autogen>
            <!-- 左手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Z, KeyCode::X, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::X, KeyCode::MINUS,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::C, KeyCode::R, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::V, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::B, KeyCode::X, KeyCode::I, KeyCode::VK_NONE</autogen>
            <!-- 左手 下段 (クロス親指シフト) -->
            <!-- Z - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::X, KeyCode::B, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::C, KeyCode::Z, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::V, KeyCode::B, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::B, KeyCode::B, KeyCode::E, KeyCode::VK_NONE</autogen>

            <!-- 右手 中段 -->
            <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::H, KeyCode::A,         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::T, KeyCode::O,         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::K, KeyCode::I,         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::I,                     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::N, KeyCode::N, KeyCode::VK_NONE</autogen>
            <!-- : キーはそのまま -->

            <!-- 右手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::H, KeyCode::M, KeyCode::I,                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::J, KeyCode::O,                                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::K, KeyCode::N, KeyCode::O,                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::L, KeyCode::X, KeyCode::Y, KeyCode::O,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::SEMICOLON, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::JIS_COLON, KeyCode::SEMICOLON,                 KeyCode::VK_NONE</autogen>
            <!-- 右手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::H, KeyCode::B, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::J, KeyCode::D, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::K, KeyCode::G, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::L, KeyCode::P, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- ; - 対応キーなし -->

            <!-- 右手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::R, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::T, KeyCode::I,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K, KeyCode::U,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::T, KeyCode::U,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::COMMA,                KeyCode::VK_NONE</autogen>
            <!-- 右手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::Y, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::U, KeyCode::N, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::I, KeyCode::R, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::O, KeyCode::M, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::P, KeyCode::X, KeyCode::E, KeyCode::VK_NONE</autogen>
            <!-- @ - 対応キーなし -->
            <!-- [ - 対応キーなし -->
            <!-- 右手 上段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Y, KeyCode::P, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::U, KeyCode::D, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::I, KeyCode::G, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::O, KeyCode::D, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::P, KeyCode::P, KeyCode::I, KeyCode::VK_NONE</autogen>
            <!-- @ - 対応キーなし -->
            <!-- [ - 対応キーなし -->

            <!-- 右手 下段 -->
            <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::M, KeyCode::E,                     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::S, KeyCode::O,                     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::N, KeyCode::E,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::NONE, KeyCode::H, KeyCode::O,                   KeyCode::VK_NONE</autogen>
            <block>
              <config_not>option.jis_oyayubishiftinput_passthrough_slash</config_not>
              <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            </block>
            <block>
              <config_only>option.jis_oyayubishiftinput_passthrough_slash</config_only>
              <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
            </block>
            <!-- 右手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::N, KeyCode::N, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::M, KeyCode::Y, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::COMMA, KeyCode::M, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::DOT, KeyCode::W, KeyCode::A,   KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::SLASH, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- 右手 下段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::N, KeyCode::P, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::M, KeyCode::Z, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::COMMA, KeyCode::P, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::DOT, KeyCode::B, KeyCode::O,   KeyCode::VK_NONE</autogen>

            <!-- 上段 数字キー -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_1, KeyCode::SLASH, ModifierFlag::SHIFT_L,              KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_2, KeyCode::SLASH,                                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_3, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L,            KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT,                          KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT,                         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_6, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::OPTION_L,  KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_7, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L,              KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L,              KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L,   KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE, KeyCode::MINUS, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L,  KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_1, KeyCode::SLASH, ModifierFlag::SHIFT_L,               KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_2, KeyCode::SLASH,                                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_3, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT,                           KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT,                          KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_6, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::OPTION_L,   KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_7, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::OPTION_L,  KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L,               KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L,               KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L,    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::MINUS, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L,   KeyCode::VK_NONE</autogen>
          </item>
          <item>
            <name>＜ローマ字モード＞ 左シフト＝英数, 右シフト＝かな</name>
            <appendix>※下の「EISUU x2 to EISUU」を同時に使うことをおすすめします</appendix>
            <identifier>remap.oyayubi_shift_roman_eisuu_kana</identifier>
            <!--
                ======================================================================
                全体的な注意点

                母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
                キーが離されるまでそのキーが解放されない。

                そのため KeyCode::VK_NONE を最後に加える。
                （詳しい説明は jis_asuka_roman.xml にて）

              -->

            {{JAPANESE_OYAYUBISHIFT_EXTRA}}

            <inputsource_only>JAPANESE</inputsource_only>
            <!-- 左手 中段 -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::U,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::S, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::T, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::K, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::S, KeyCode::E, KeyCode::VK_NONE</autogen>
            <!-- 左手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::A, KeyCode::W, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::S, KeyCode::A,                         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::D, KeyCode::N, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::F, KeyCode::X, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::G, KeyCode::M, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <!-- 左手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::A, KeyCode::V, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::S, KeyCode::Z, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::D, KeyCode::D, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::F, KeyCode::G, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::G, KeyCode::Z, KeyCode::E, KeyCode::VK_NONE</autogen>

            <!-- 左手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::DOT,           KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::K, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::T, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::K, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::S, KeyCode::A, KeyCode::VK_NONE</autogen>
            <!-- 左手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Q, KeyCode::X, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::W, KeyCode::E,                         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::E, KeyCode::R, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::R, KeyCode::X, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::T, KeyCode::R, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <!-- 左手 上段 (クロス親指シフト) -->
            <!-- Q - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::W, KeyCode::G, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::E, KeyCode::D, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::R, KeyCode::G, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::T, KeyCode::Z, KeyCode::A, KeyCode::VK_NONE</autogen>

            <!-- 左手 下段 -->
            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::H, KeyCode::I,               KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::S, KeyCode::U,               KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::H, KeyCode::U,               KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::H, KeyCode::E,               KeyCode::VK_NONE</autogen>
            <!-- 左手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Z, KeyCode::X, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::X, KeyCode::MINUS,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::C, KeyCode::R, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::V, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::B, KeyCode::X, KeyCode::I, KeyCode::VK_NONE</autogen>
            <!-- 左手 下段 (クロス親指シフト) -->
            <!-- Z - 対応キーなし -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::X, KeyCode::B, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::C, KeyCode::Z, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::V, KeyCode::B, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::B, KeyCode::B, KeyCode::E, KeyCode::VK_NONE</autogen>

            <!-- 右手 中段 -->
            <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::H, KeyCode::A,         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::T, KeyCode::O,         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::K, KeyCode::I,         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::I,                     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::N, KeyCode::N, KeyCode::VK_NONE</autogen>
            <!-- : キーはそのまま -->

            <!-- 右手 中段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::H, KeyCode::M, KeyCode::I,                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::J, KeyCode::O,                                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::K, KeyCode::N, KeyCode::O,                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::L, KeyCode::X, KeyCode::Y, KeyCode::O,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::SEMICOLON, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::JIS_COLON, KeyCode::SEMICOLON,                 KeyCode::VK_NONE</autogen>
            <!-- 右手 中段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::H, KeyCode::B, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::J, KeyCode::D, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::K, KeyCode::G, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::L, KeyCode::P, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- ; - 対応キーなし -->

            <!-- 右手 上段 -->
            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::R, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::T, KeyCode::I,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K, KeyCode::U,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::T, KeyCode::U,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::COMMA,                KeyCode::VK_NONE</autogen>
            <!-- 右手 上段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::Y, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::U, KeyCode::N, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::I, KeyCode::R, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::O, KeyCode::M, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::P, KeyCode::X, KeyCode::E, KeyCode::VK_NONE</autogen>
            <!-- @ - 対応キーなし -->
            <!-- [ - 対応キーなし -->
            <!-- 右手 上段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::Y, KeyCode::P, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::U, KeyCode::D, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::I, KeyCode::G, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::O, KeyCode::D, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::P, KeyCode::P, KeyCode::I, KeyCode::VK_NONE</autogen>
            <!-- @ - 対応キーなし -->
            <!-- [ - 対応キーなし -->

            <!-- 右手 下段 -->
            <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::M, KeyCode::E,                     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::S, KeyCode::O,                     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::N, KeyCode::E,                 KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::NONE, KeyCode::H, KeyCode::O,                   KeyCode::VK_NONE</autogen>
            <block>
              <config_not>option.jis_oyayubishiftinput_passthrough_slash</config_not>
              <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            </block>
            <block>
              <config_only>option.jis_oyayubishiftinput_passthrough_slash</config_only>
              <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
            </block>
            <!-- 右手 下段 (順親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::N, KeyCode::N, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::M, KeyCode::Y, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::COMMA, KeyCode::M, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::DOT, KeyCode::W, KeyCode::A,   KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::SLASH, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- 右手 下段 (クロス親指シフト) -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::N, KeyCode::P, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::M, KeyCode::Z, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::COMMA, KeyCode::P, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::DOT, KeyCode::B, KeyCode::O,   KeyCode::VK_NONE</autogen>

            <!-- 上段 数字キー -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_1, KeyCode::SLASH, ModifierFlag::SHIFT_L,              KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_2, KeyCode::SLASH,                                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_3, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L,            KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT,                          KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT,                         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_6, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::OPTION_L,  KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_7, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L,              KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L,              KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L,   KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA, KeyCode::MINUS, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L,  KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_1, KeyCode::SLASH, ModifierFlag::SHIFT_L,               KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_2, KeyCode::SLASH,                                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_3, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_4, KeyCode::JIS_BRACKET_LEFT,                           KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_5, KeyCode::JIS_BRACKET_RIGHT,                          KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_6, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::OPTION_L,   KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_7, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::OPTION_L,  KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L,               KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L,               KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::KEY_0, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L,    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::MINUS, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L,   KeyCode::VK_NONE</autogen>
          </item>
          <item><name>____________________________________________________________</name></item>
          <item>
            <name>スラッシュキー（/）を素通しする</name>
            <appendix>（スラッシュキーで÷や／が入力される場合に有効にしてください）</appendix>
            <identifier>option.jis_oyayubishiftinput_passthrough_slash</identifier>
          </item>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>：キーをDeleteキーにする（後退キー）</name>
          <identifier>remap.jis_oyayubishiftinput_backspace</identifier>
          <inputsource_only>JAPANESE</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>］キーをEscapeキーにする（取消キー）</name>
          <identifier>remap.jis_oyayubishiftinput_escape</identifier>
          <inputsource_only>JAPANESE</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, KeyCode::ESCAPE</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>EISUU x2 to EISUU (単発での英数キーは無視する)</name>
          <identifier>remap.jis_eisuu2extra5_x2eisuu</identifier>
          <autogen>__DoublePressModifier__ KeyCode::JIS_EISUU, KeyCode::VK_NONE, KeyCode::JIS_EISUU</autogen>
        </item>
        <item>
          <name>KANA x2 to KANA (単発でのかなキーは無視する)</name>
          <identifier>remap.jis_kana2extra5_x2kana</identifier>
          <autogen>__DoublePressModifier__ KeyCode::JIS_KANA, KeyCode::VK_NONE, KeyCode::JIS_KANA</autogen>
        </item>
        <item>
          <name>KANA x2 to KANA</name>
          <appendix>(+ When you type KANA only, send CONTROL_L)</appendix>
          <identifier>remap.jis_kana2extra5_x2kana_controlL</identifier>
          <autogen>__DoublePressModifier__ KeyCode::JIS_KANA, KeyCode::CONTROL_L, KeyCode::JIS_KANA</autogen>
        </item>
        <item><name>____________________________________________________________</name></item>
        <item>
          <name>親指シフト入力のときにショートカットをDvorakレイアウトにする</name>
          <appendix>（Command、Control、Optionを押しているときはDvorak配列にする）</appendix>
          <identifier>remap.jis_oyayubishiftinput_dvorak</identifier>
          <modifier_only>
            ModifierFlag::COMMAND_L,
            ModifierFlag::COMMAND_R,
            ModifierFlag::CONTROL_L,
            ModifierFlag::CONTROL_R,
            ModifierFlag::OPTION_L,
            ModifierFlag::OPTION_R
          </modifier_only>
          <modifier_not>ModifierFlag::FN</modifier_not>

          <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT, KeyCode::JIS_ATMARK                 </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT, KeyCode::JIS_HAT                    </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT, KeyCode::KEY_6,            VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT, KeyCode::JIS_COLON,        VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT, KeyCode::KEY_8,            VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT, KeyCode::KEY_9,            VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS,             KeyCode::JIS_BRACKET_LEFT           </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_HAT,           KeyCode::JIS_BRACKET_RIGHT          </autogen>

          <!-- ============================================================ -->
          <!-- Q to ' " -->
          <autogen>__KeyToKey__ KeyCode::Q,                VK_SHIFT, KeyCode::KEY_2,     VK_SHIFT              </autogen>
          <autogen>__KeyToKey__ KeyCode::Q,                          KeyCode::KEY_7,     ModifierFlag::SHIFT_L </autogen>
          <autogen>__KeyToKey__ KeyCode::W,                          KeyCode::COMMA                            </autogen>
          <autogen>__KeyToKey__ KeyCode::E,                          KeyCode::DOT                              </autogen>
          <autogen>__KeyToKey__ KeyCode::R,                          KeyCode::P                                </autogen>
          <autogen>__KeyToKey__ KeyCode::T,                          KeyCode::Y                                </autogen>
          <autogen>__KeyToKey__ KeyCode::Y,                          KeyCode::F                                </autogen>
          <autogen>__KeyToKey__ KeyCode::U,                          KeyCode::G                                </autogen>
          <autogen>__KeyToKey__ KeyCode::I,                          KeyCode::C                                </autogen>
          <autogen>__KeyToKey__ KeyCode::O,                          KeyCode::R                                </autogen>
          <autogen>__KeyToKey__ KeyCode::P,                          KeyCode::L                                </autogen>
          <!-- @ to / ? -->
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK,                 KeyCode::SLASH                            </autogen>
          <!-- [ to = + -->
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_SHIFT, KeyCode::SEMICOLON, VK_SHIFT              </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT,           KeyCode::MINUS,     ModifierFlag::SHIFT_L </autogen>

          <!-- ============================================================ -->
          <autogen>__KeyToKey__ KeyCode::S,                           KeyCode::O                         </autogen>
          <autogen>__KeyToKey__ KeyCode::D,                           KeyCode::E                         </autogen>
          <autogen>__KeyToKey__ KeyCode::F,                           KeyCode::U                         </autogen>
          <autogen>__KeyToKey__ KeyCode::G,                           KeyCode::I                         </autogen>
          <autogen>__KeyToKey__ KeyCode::H,                           KeyCode::D                         </autogen>
          <autogen>__KeyToKey__ KeyCode::J,                           KeyCode::H                         </autogen>
          <autogen>__KeyToKey__ KeyCode::K,                           KeyCode::T                         </autogen>
          <autogen>__KeyToKey__ KeyCode::L,                           KeyCode::N                         </autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON,                   KeyCode::S                         </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON,         VK_SHIFT, KeyCode::JIS_UNDERSCORE            </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON,                   KeyCode::MINUS                     </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, VK_SHIFT, KeyCode::JIS_YEN,         VK_SHIFT </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT,           KeyCode::VK_JIS_BACKSLASH          </autogen>

          <!-- ============================================================ -->
          <!-- Z to ; : -->
          <autogen>__KeyToKey__ KeyCode::Z,              VK_SHIFT, KeyCode::JIS_COLON                         </autogen>
          <autogen>__KeyToKey__ KeyCode::Z,                        KeyCode::SEMICOLON                         </autogen>
          <autogen>__KeyToKey__ KeyCode::X,                        KeyCode::Q                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::C,                        KeyCode::J                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::V,                        KeyCode::K                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::B,                        KeyCode::X                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::N,                        KeyCode::B                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA,                    KeyCode::W                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::DOT,                      KeyCode::V                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH,                    KeyCode::Z                                 </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, VK_SHIFT, KeyCode::JIS_HAT,    VK_SHIFT              </autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE,           KeyCode::JIS_ATMARK, ModifierFlag::SHIFT_L </autogen>
        </item>
      </item>
      <item>
        <name>Nicola on Kinesis</name>
        <!-- Version 0.3 coded by IDEGUTI Masaya -->
        <!-- 22/3/2012 -->

        <item>
          <name>Enable Nicola on Kinesis (Kana-Kawasemi)</name>
          <identifier>enable_nicola_on_kinesis_kana_kawasemi</identifier>
          <inputsource_only>JAPANESE</inputsource_only>
          <config_not>enable_nicola_on_kinesis_romaji</config_not>

          <block>
            <config_only>nicola_kinesis_enter_numerals_with_numeric_keys</config_only>
            <autogen>__KeyToKey__ KeyCode::KEY_1, VK_CONTROL, KeyCode::KEY_1</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_2, VK_CONTROL, KeyCode::KEY_2</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_3, VK_CONTROL, KeyCode::KEY_3</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_4, VK_CONTROL, KeyCode::KEY_4</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6, VK_CONTROL, KeyCode::KEY_6</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_5, VK_CONTROL, KeyCode::KEY_5</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9, VK_CONTROL, KeyCode::KEY_9</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7, VK_CONTROL, KeyCode::KEY_7</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8, VK_CONTROL, KeyCode::KEY_8</autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0, VK_CONTROL, KeyCode::KEY_0</autogen>
          </block>

          <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_OPTION, KeyCode::SEMICOLON, VK_OPTION | VK_CONTROL</autogen>

          <block>
            <modifier_not>ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R, ModifierFlag::OPTION_L, ModifierFlag::OPTION_R, ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R</modifier_not>

            <block>
              <config_only>nicola_kinesis_international_to_voiced_sound_symbol</config_only>
              <autogen>__KeyToKey__ KeyCode::UK_SECTION, ModifierFlag::NONE, KeyCode::BRACKET_LEFT</autogen>
              <autogen>__KeyToKey__ KeyCode::UK_SECTION, VK_SHIFT, KeyCode::EQUAL</autogen>
            </block>

            <block>
              <config_only>nicola_kinesis_backslash_to_esc</config_only>
              <autogen>__KeyToKey__ KeyCode::BACKSLASH, ModifierFlag::NONE, KeyCode::ESCAPE</autogen>
              <autogen>__SimultaneousKeyPresses__ KeyCode::BACKSLASH, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BACKSLASH, VK_CONTROL</autogen>
              <autogen>__SimultaneousKeyPresses__ KeyCode::BACKSLASH, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BACKSLASH, VK_CONTROL | VK_OPTION</autogen>
            </block>
            <autogen>__KeyToKey__ KeyCode::BACKSLASH, ModifierFlag::NONE, KeyCode::BACKSLASH, VK_CONTROL</autogen>
            <autogen>__KeyToKey__ KeyCode::BACKSLASH, VK_SHIFT, KeyCode::BACKSLASH, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::BACKSLASH, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BACKSLASH, VK_CONTROL | VK_OPTION</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::BACKSLASH, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::BACKQUOTE, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::BACKQUOTE, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::KEY_4</autogen>
            <autogen>__KeyToKey__ KeyCode::A, VK_SHIFT, KeyCode::KEY_4</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::A, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::KEY_0, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::A, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_4, KeyCode::BRACKET_LEFT</autogen>

            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::D</autogen>
            <autogen>__KeyToKey__ KeyCode::S, VK_SHIFT, KeyCode::D</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::KEY_3</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::D, KeyCode::BRACKET_LEFT</autogen>

            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::W</autogen>
            <autogen>__KeyToKey__ KeyCode::D, VK_SHIFT, KeyCode::W</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::W, KeyCode::BRACKET_LEFT</autogen>

            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::QUOTE</autogen>
            <autogen>__KeyToKey__ KeyCode::F, VK_SHIFT, KeyCode::QUOTE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::KEY_8, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::QUOTE, KeyCode::BRACKET_LEFT</autogen>

            <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::F</autogen>
            <autogen>__KeyToKey__ KeyCode::H, VK_SHIFT, KeyCode::F, KeyCode::EQUAL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::H, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::F, KeyCode::BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::H, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::N</autogen>

            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::P</autogen>
            <autogen>__KeyToKey__ KeyCode::G, VK_SHIFT, KeyCode::P</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::G, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::M</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::G, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::P, KeyCode::BRACKET_LEFT</autogen>

            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::DOT, VK_CONTROL</autogen>
            <autogen>__KeyToKey__ KeyCode::Z, VK_SHIFT, KeyCode::DOT, VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::Z, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::KEY_4, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::Z, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::V</autogen>
            <autogen>__KeyToKey__ KeyCode::X, VK_SHIFT, KeyCode::V, KeyCode::EQUAL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::X, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BRACKET_RIGHT, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::X, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::V, KeyCode::BRACKET_LEFT</autogen>

            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::R</autogen>
            <autogen>__KeyToKey__ KeyCode::C, VK_SHIFT, KeyCode::R</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::C, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::QUOTE, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::C, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::R, KeyCode::BRACKET_LEFT</autogen>

            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::KEY_2</autogen>
            <autogen>__KeyToKey__ KeyCode::V, VK_SHIFT, KeyCode::KEY_2, KeyCode::EQUAL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::V, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::KEY_7</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::V, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_2, KeyCode::BRACKET_LEFT</autogen>

            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::BACKSLASH</autogen>
            <autogen>__KeyToKey__ KeyCode::B, VK_SHIFT, KeyCode::BACKSLASH, KeyCode::EQUAL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::B, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::E, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::B, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BACKSLASH, KeyCode::BRACKET_LEFT</autogen>

            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::DOT, VK_SHIFT</autogen>
            <autogen>__KeyToKey__ KeyCode::Q, VK_SHIFT, KeyCode::DOT, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::Q, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::KEY_3, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::Q, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::T</autogen>
            <autogen>__KeyToKey__ KeyCode::W, VK_SHIFT, KeyCode::T</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::W, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::KEY_5</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::W, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::T, KeyCode::BRACKET_LEFT</autogen>

            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::Q</autogen>
            <autogen>__KeyToKey__ KeyCode::E, VK_SHIFT, KeyCode::Q</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::E, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::L</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::E, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::Q, KeyCode::BRACKET_LEFT</autogen>

            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::B</autogen>
            <autogen>__KeyToKey__ KeyCode::R, VK_SHIFT, KeyCode::B</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::R, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::KEY_7, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::R, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::B, KeyCode::BRACKET_LEFT</autogen>

            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::Y, VK_SHIFT, KeyCode::O</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::Y, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::F, KeyCode::EQUAL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::Y, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_9</autogen>

            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::X</autogen>
            <autogen>__KeyToKey__ KeyCode::T, VK_SHIFT, KeyCode::X</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::T, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::SEMICOLON</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::T, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::X, KeyCode::BRACKET_LEFT</autogen>

            <block>
              <config_only>nicola_kinesis_enter_numerals_with_numeric_keys</config_only>
              <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::NONE, KeyCode::KEY_1, VK_CONTROL</autogen>
            </block>
            <autogen>__KeyToKey__ KeyCode::KEY_1, VK_SHIFT, KeyCode::KEY_1, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_1, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::SLASH, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_1, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::SLASH, VK_SHIFT | VK_CONTROL</autogen>

            <block>
              <config_only>nicola_kinesis_enter_numerals_with_numeric_keys</config_only>
              <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::NONE, KeyCode::KEY_2, VK_CONTROL</autogen>
            </block>
            <autogen>__KeyToKey__ KeyCode::KEY_2, VK_SHIFT, KeyCode::KEY_2, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_2, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::SLASH, VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_2, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::SLASH, VK_CONTROL</autogen>

            <block>
              <config_only>nicola_kinesis_enter_numerals_with_numeric_keys</config_only>
              <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::NONE, KeyCode::KEY_3, VK_CONTROL</autogen>
            </block>
            <autogen>__KeyToKey__ KeyCode::KEY_3, VK_SHIFT, KeyCode::KEY_3, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_3, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BACKQUOTE, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_3, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BACKQUOTE, VK_SHIFT</autogen>

            <block>
              <config_only>nicola_kinesis_enter_numerals_with_numeric_keys</config_only>
              <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::NONE, KeyCode::KEY_4, VK_CONTROL</autogen>
            </block>
            <autogen>__KeyToKey__ KeyCode::KEY_4, VK_SHIFT, KeyCode::KEY_4, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_4, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::EQUAL, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_4, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::EQUAL, VK_SHIFT</autogen>

            <block>
              <config_only>nicola_kinesis_enter_numerals_with_numeric_keys</config_only>
              <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::NONE, KeyCode::KEY_6, VK_CONTROL</autogen>
            </block>
            <autogen>__KeyToKey__ KeyCode::KEY_6, VK_SHIFT, KeyCode::KEY_6, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_6, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BRACKET_LEFT, VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_6, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BRACKET_LEFT, VK_CONTROL</autogen>

            <block>
              <config_only>nicola_kinesis_enter_numerals_with_numeric_keys</config_only>
              <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::NONE, KeyCode::KEY_5, VK_CONTROL</autogen>
            </block>
            <autogen>__KeyToKey__ KeyCode::KEY_5, VK_SHIFT, KeyCode::KEY_5, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_5, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BRACKET_LEFT, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_5, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BRACKET_LEFT, VK_SHIFT</autogen>

            <autogen>__KeyToKey__ KeyCode::EQUAL, ModifierFlag::NONE, KeyCode::EQUAL, VK_CONTROL</autogen>
            <autogen>__KeyToKey__ KeyCode::EQUAL, VK_SHIFT, KeyCode::EQUAL, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::EQUAL, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::EQUAL, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <block>
              <config_only>nicola_kinesis_enter_numerals_with_numeric_keys</config_only>
              <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::NONE, KeyCode::KEY_9, VK_CONTROL</autogen>
            </block>
            <autogen>__KeyToKey__ KeyCode::KEY_9, VK_SHIFT, KeyCode::KEY_9, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_9, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::KEY_0, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_9, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_0, VK_SHIFT | VK_CONTROL</autogen>

            <block>
              <config_only>nicola_kinesis_enter_numerals_with_numeric_keys</config_only>
              <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::NONE, KeyCode::KEY_7, VK_CONTROL</autogen>
            </block>
            <autogen>__KeyToKey__ KeyCode::KEY_7, VK_SHIFT, KeyCode::KEY_7, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_7, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BRACKET_RIGHT, VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_7, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BRACKET_RIGHT, VK_CONTROL</autogen>

            <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::NONE, KeyCode::MINUS, VK_CONTROL</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS, VK_SHIFT, KeyCode::MINUS, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::MINUS, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::MINUS, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <block>
              <config_only>nicola_kinesis_enter_numerals_with_numeric_keys</config_only>
              <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::NONE, KeyCode::KEY_8, VK_CONTROL</autogen>
            </block>
            <autogen>__KeyToKey__ KeyCode::KEY_8, VK_SHIFT, KeyCode::KEY_8, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_8, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::KEY_9, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_8, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_9, VK_SHIFT | VK_CONTROL</autogen>

            <block>
              <config_only>nicola_kinesis_enter_numerals_with_numeric_keys</config_only>
              <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::NONE, KeyCode::KEY_0, VK_CONTROL</autogen>
            </block>
            <autogen>__KeyToKey__ KeyCode::KEY_0, VK_SHIFT, KeyCode::KEY_0, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_0, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::COMMA, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_0, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::COMMA, VK_SHIFT</autogen>

            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::Z</autogen>
            <autogen>__KeyToKey__ KeyCode::O, VK_SHIFT, KeyCode::Z</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::Z, KeyCode::BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::J</autogen>

            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::A</autogen>
            <autogen>__KeyToKey__ KeyCode::U, VK_SHIFT, KeyCode::A</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::U, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::A, KeyCode::BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::U, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::I</autogen>

            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::H</autogen>
            <autogen>__KeyToKey__ KeyCode::I, VK_SHIFT, KeyCode::H</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::H, KeyCode::BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::DOT</autogen>

            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::COMMA, VK_CONTROL</autogen>
            <autogen>__KeyToKey__ KeyCode::P, VK_SHIFT, KeyCode::COMMA, VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::P, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::V, KeyCode::EQUAL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::P, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_5, VK_SHIFT</autogen>

            <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::L, VK_SHIFT, KeyCode::E</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::MINUS, KeyCode::EQUAL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_9, VK_SHIFT</autogen>

            <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::S</autogen>
            <autogen>__KeyToKey__ KeyCode::J, VK_SHIFT, KeyCode::S</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::J, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::S, KeyCode::BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::J, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_6</autogen>

            <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::G</autogen>
            <autogen>__KeyToKey__ KeyCode::K, VK_SHIFT, KeyCode::G</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::G, KeyCode::BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::K</autogen>

            <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::SLASH, VK_SHIFT</autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH, VK_SHIFT, KeyCode::SLASH, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SLASH, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::SLASH, VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SLASH, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_6, VK_SHIFT</autogen>

            <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::SLASH</autogen>
            <autogen>__KeyToKey__ KeyCode::N, VK_SHIFT, KeyCode::SLASH</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::N, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::KEY_2, KeyCode::EQUAL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::N, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_1</autogen>

            <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::C</autogen>
            <autogen>__KeyToKey__ KeyCode::M, VK_SHIFT, KeyCode::C</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::M, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::C, KeyCode::BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::M, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_8</autogen>

            <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::NONE, KeyCode::MINUS</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT, VK_SHIFT, KeyCode::MINUS, KeyCode::EQUAL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::MINUS, KeyCode::BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_0</autogen>

            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::Y</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_SHIFT, KeyCode::SEMICOLON, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::SEMICOLON, VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::Z, VK_SHIFT</autogen>

            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::COMMA</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, VK_SHIFT, KeyCode::COMMA, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BACKSLASH, KeyCode::EQUAL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BRACKET_RIGHT</autogen>

            <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::NONE, KeyCode::EQUAL, VK_SHIFT</autogen>
            <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_SHIFT, KeyCode::BRACKET_LEFT, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::BRACKET_LEFT, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BRACKET_LEFT, VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::BRACKET_LEFT, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, ModifierFlag::NONE, KeyCode::BRACKET_LEFT, VK_SHIFT</autogen>
            <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, VK_SHIFT, KeyCode::BRACKET_RIGHT, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::BRACKET_RIGHT, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BRACKET_RIGHT, VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::BRACKET_RIGHT, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <block>
              <config_only>nicola_kinesis_quote_to_back_space</config_only>
              <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::NONE, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}</autogen>
              <autogen>__SimultaneousKeyPresses__ KeyCode::QUOTE, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::QUOTE, VK_CONTROL</autogen>
              <block>
                <config_only>nicola_kinesis_disabel_back_space</config_only>
                <autogen>__KeyToKey__ KeyCode::DELETE, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
              </block>
            </block>
            <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::NONE, KeyCode::QUOTE, VK_CONTROL</autogen>
            <autogen>__KeyToKey__ KeyCode::QUOTE, VK_SHIFT, KeyCode::QUOTE, VK_SHIFT | VK_CONTROL</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::QUOTE, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::QUOTE, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>
          </block>
        </item>

        <item>
          <name>Enable Nicola on Kinesis (Romaji)</name>
          <identifier>enable_nicola_on_kinesis_romaji</identifier>
          <inputsource_only>JAPANESE</inputsource_only>
          <config_not>enable_nicola_on_kinesis_kana_kawasemi</config_not>

          <block>
            <modifier_not>ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R, ModifierFlag::OPTION_L, ModifierFlag::OPTION_R, ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R</modifier_not>

            <block>
              <config_only>nicola_kinesis_backslash_to_esc</config_only>
              <autogen>__KeyToKey__ KeyCode::BACKSLASH, ModifierFlag::NONE, KeyCode::ESCAPE</autogen>
              <autogen>__SimultaneousKeyPresses__ KeyCode::BACKSLASH, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BACKSLASH</autogen>
              <autogen>__SimultaneousKeyPresses__ KeyCode::BACKSLASH, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BACKSLASH, VK_OPTION</autogen>
            </block>
            <autogen>__SimultaneousKeyPresses__ KeyCode::BACKSLASH, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BACKSLASH, VK_OPTION</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::BACKSLASH, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::BACKQUOTE, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::BACKQUOTE, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::U</autogen>
            <autogen>__KeyToKey__ KeyCode::A, VK_SHIFT, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::A, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::W, KeyCode::O</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::A, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::V, KeyCode::U</autogen>

            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::S, KeyCode::I</autogen>
            <autogen>__KeyToKey__ KeyCode::S, VK_SHIFT, KeyCode::S, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::A</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::J, KeyCode::I</autogen>

            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::T, KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::D, VK_SHIFT, KeyCode::T, KeyCode::E</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::N, KeyCode::A</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::D, KeyCode::E</autogen>

            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::K, KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::F, VK_SHIFT, KeyCode::K, KeyCode::E</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::X, KeyCode::Y, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::G, KeyCode::E</autogen>

            <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::H, KeyCode::A</autogen>
            <autogen>__KeyToKey__ KeyCode::H, VK_SHIFT, KeyCode::P, KeyCode::A</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::H, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::B, KeyCode::A</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::H, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::M, KeyCode::I</autogen>

            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::S, KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::G, VK_SHIFT, KeyCode::S, KeyCode::E</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::G, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::M, KeyCode::O</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::G, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::Z, KeyCode::E</autogen>

            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::DOT, VK_OPTION</autogen>
            <autogen>__KeyToKey__ KeyCode::Z, VK_SHIFT, KeyCode::DOT, VK_OPTION</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::Z, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::X, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::Z, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::H, KeyCode::I</autogen>
            <autogen>__KeyToKey__ KeyCode::X, VK_SHIFT, KeyCode::P, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::X, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::MINUS</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::X, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::B, KeyCode::I</autogen>

            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::S, KeyCode::U</autogen>
            <autogen>__KeyToKey__ KeyCode::C, VK_SHIFT, KeyCode::S, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::C, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::R, KeyCode::O</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::C, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::Z, KeyCode::U</autogen>

            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::H, KeyCode::U</autogen>
            <autogen>__KeyToKey__ KeyCode::V, VK_SHIFT, KeyCode::P, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::V, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::Y, KeyCode::A</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::V, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::B, KeyCode::U</autogen>

            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::H, KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::B, VK_SHIFT, KeyCode::P, KeyCode::E</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::B, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::X, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::B, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::B, KeyCode::E</autogen>

            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::DOT</autogen>
            <autogen>__KeyToKey__ KeyCode::Q, VK_SHIFT, KeyCode::DOT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::Q, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::X, KeyCode::A</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::Q, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::K, KeyCode::A</autogen>
            <autogen>__KeyToKey__ KeyCode::W, VK_SHIFT, KeyCode::K, KeyCode::A</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::W, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::E</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::W, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::G, KeyCode::A</autogen>

            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::T, KeyCode::A</autogen>
            <autogen>__KeyToKey__ KeyCode::E, VK_SHIFT, KeyCode::T, KeyCode::A</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::E, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::R, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::E, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::D, KeyCode::A</autogen>

            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::K, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::R, VK_SHIFT, KeyCode::K, KeyCode::O</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::R, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::X, KeyCode::Y, KeyCode::A</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::R, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::G, KeyCode::O</autogen>

            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::R, KeyCode::A</autogen>
            <autogen>__KeyToKey__ KeyCode::Y, VK_SHIFT, KeyCode::R, KeyCode::A</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::Y, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::P, KeyCode::A</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::Y, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::Y, KeyCode::O</autogen>

            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::S, KeyCode::A</autogen>
            <autogen>__KeyToKey__ KeyCode::T, VK_SHIFT, KeyCode::S, KeyCode::A</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::T, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::R, KeyCode::E</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::T, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::Z, KeyCode::A</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_1, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::SLASH, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_1, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode:: SLASH, VK_SHIFT</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_2, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::SLASH, VK_OPTION</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_2, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::SLASH, VK_OPTION</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_3, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BACKQUOTE, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_3, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BACKQUOTE, VK_SHIFT</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_4, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BRACKET_LEFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_4, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BRACKET_LEFT</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_6, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BRACKET_LEFT, VK_OPTION</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_6, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BRACKET_LEFT, VK_OPTION</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_5, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BRACKET_RIGHT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_5, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BRACKET_RIGHT</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::EQUAL, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::EQUAL, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_9, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::KEY_0, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_9, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_0, VK_SHIFT</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_7, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BRACKET_RIGHT, VK_OPTION</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_7, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BRACKET_RIGHT, VK_OPTION</autogen>

            <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::NONE, KeyCode::MINUS, VK_OPTION</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::MINUS, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::MINUS, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_8, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::KEY_9, VK_SHIFT</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_8, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::KEY_9, VK_SHIFT</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_0, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::COMMA</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_0, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::COMMA</autogen>

            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::T, KeyCode::U</autogen>
            <autogen>__KeyToKey__ KeyCode::O, VK_SHIFT, KeyCode::T, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::D, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::M, KeyCode::A</autogen>

            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::T, KeyCode::I</autogen>
            <autogen>__KeyToKey__ KeyCode::U, VK_SHIFT, KeyCode::T, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::U, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::D, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::U, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::N, KeyCode::I</autogen>

            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K, KeyCode::U</autogen>
            <autogen>__KeyToKey__ KeyCode::I, VK_SHIFT, KeyCode::K, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::G, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::R, KeyCode::U</autogen>

            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::COMMA, VK_OPTION</autogen>
            <autogen>__KeyToKey__ KeyCode::P, VK_SHIFT, KeyCode::COMMA, VK_OPTION</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::P, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::P, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::P, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::X, KeyCode::E</autogen>

            <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::I</autogen>
            <autogen>__KeyToKey__ KeyCode::L, VK_SHIFT, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::P, KeyCode::O</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::X, KeyCode::Y, KeyCode::O</autogen>

            <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::T, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::J, VK_SHIFT, KeyCode::T, KeyCode::O</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::J, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::D, KeyCode::O</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::J, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::O</autogen>

            <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::K, KeyCode::I</autogen>
            <autogen>__KeyToKey__ KeyCode::K, VK_SHIFT, KeyCode::K, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::G, KeyCode::I</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::N, KeyCode::O</autogen>

            <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::SLASH</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SLASH, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::SLASH, VK_OPTION</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SLASH, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::X, KeyCode::O</autogen>

            <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::M, KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::N, VK_SHIFT, KeyCode::M, KeyCode::E</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::N, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::P, KeyCode::U</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::N, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::N, KeyCode::U</autogen>

            <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::S, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::M, VK_SHIFT, KeyCode::S, KeyCode::O</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::M, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::Z, KeyCode::O</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::M, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::Y, KeyCode::U</autogen>

            <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::NONE, KeyCode::H, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT, VK_SHIFT, KeyCode::P, KeyCode::O</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::B, KeyCode::O</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::W, KeyCode::A</autogen>

            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::N, KeyCode::N</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::SEMICOLON </autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::X, KeyCode::T, KeyCode::U</autogen>

            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::N, KeyCode::E</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::P, KeyCode::E</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::M, KeyCode::U</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::BRACKET_LEFT, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BRACKET_LEFT, VK_OPTION</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::BRACKET_LEFT, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BRACKET_LEFT, VK_SHIFT | VK_OPTION</autogen>

            <autogen>__SimultaneousKeyPresses__ KeyCode::BRACKET_RIGHT, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::BRACKET_RIGHT, VK_OPTION</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::BRACKET_RIGHT, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::BRACKET_RIGHT, VK_SHIFT | VK_OPTION</autogen>

            <block>
              <config_only>nicola_kinesis_quote_to_back_space</config_only>
              <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::NONE, KeyCode::DELETE</autogen>
              <autogen>__SimultaneousKeyPresses__ KeyCode::QUOTE, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::QUOTE</autogen>
              <block>
                <config_only>nicola_kinesis_disabel_back_space</config_only>
                <autogen>__KeyToKey__ KeyCode::DELETE, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
              </block>
            </block>
            <autogen>__SimultaneousKeyPresses__ KeyCode::QUOTE, {{JAPANESE_NICOLA_KINESIS_THUMB_LEFT}}, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::QUOTE, {{JAPANESE_NICOLA_KINESIS_THUMB_RIGHT}}, KeyCode::VK_NONE</autogen>

          </block>
        </item>

        <item>
          <name>Quote to Back Space</name>
          <identifier>nicola_kinesis_quote_to_back_space</identifier>
        </item>

        <item>
          <name>Disable Back Space</name>
          <appendix>(Works only when "Quote to Back Space" is enabled)</appendix>
          <identifier>nicola_kinesis_disabel_back_space</identifier>
        </item>

        <item>
          <name>Backslash to ESC</name>
          <identifier>nicola_kinesis_backslash_to_esc</identifier>
        </item>

        <item>
          <name>Enter Numerals with Numeric Keys</name>
          <appendix>(Works only in kana mode)</appendix>
          <identifier>nicola_kinesis_enter_numerals_with_numeric_keys</identifier>
        </item>

        <item>
          <name>International Key to Voiced Sound Symbol</name>
          <appendix>(Works only in kana mode)</appendix>
          <identifier>nicola_kinesis_international_to_voiced_sound_symbol</identifier>
        </item>
      </item>
      <item>
        <name>下駄・新下駄配列（Geta, Shin-Geta Layout）</name>
        <item>
          <name>下駄配列（ATOK向け・ローマ字入力）</name>
          <identifier>remap.geta_input_roman_qwerty_atok</identifier>
          <!--
              ======================================================================
              全体的な注意点

              母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
              キーが離されるまでそのキーが解放されない。

              そのため KeyCode::VK_NONE を最後に加える。
              （詳しい説明は jis_asuka_roman.xml にて）

            -->

          <!-- 下駄入力(qwerty,ATOK版) -->
          <inputsource_only>JAPANESE</inputsource_only>

          <!-- 左手 -->
          <!-- 単打 -->
          <!-- 上段[ぱけこてー] -->
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::P, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::K, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::K, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::T, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::MINUS,         KeyCode::VK_NONE</autogen>
          <!-- 中段[はかしと(を)た] -->
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::H, KeyCode::A,       KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::K, KeyCode::A,       KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::S, KeyCode::I,       KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::T, KeyCode::O,       KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::T, KeyCode::A,       KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::F, KeyCode::W, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- 下段[せおになさ] -->
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::S, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::N, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::N, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::S, KeyCode::A, KeyCode::VK_NONE</autogen>

          <!-- 清音シフト(K+) -->
          <!-- 上段[ぁみえやぃ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Q, KeyCode::X, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::W, KeyCode::M, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::E, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::R, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::T, KeyCode::X, KeyCode::I, KeyCode::VK_NONE</autogen>
          <!-- 中段[ろれもあよ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::A, KeyCode::R, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::S, KeyCode::R, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::D, KeyCode::M, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::F, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::G, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- 下段[ぇ　へほぉ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Z, KeyCode::X, KeyCode::E, KeyCode::VK_NONE</autogen>

          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::C, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::V, KeyCode::H, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::B, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- 濁音シフト(L+) -->
          <!-- 上段[　げごでぴ] -->

          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::W, KeyCode::G, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::E, KeyCode::G, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::R, KeyCode::D, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::T, KeyCode::P, KeyCode::I, KeyCode::VK_NONE</autogen>
          <!-- 中段[ばがじどだ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::A, KeyCode::B, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::S, KeyCode::G, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::D, KeyCode::J, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::F, KeyCode::D, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::G, KeyCode::D, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- 下段[ぜねべぼざ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Z, KeyCode::Z, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::X, KeyCode::N, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::C, KeyCode::B, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::V, KeyCode::B, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::B, KeyCode::Z, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- 拗音シフト1 -->
          <!-- I+ -->
          <!-- 上段[くゎ,きぇ,すぃ,しゃ,ちゃ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Q, KeyCode::K, KeyCode::U, KeyCode::X, KeyCode::W, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::W, KeyCode::K, KeyCode::Y, KeyCode::E,                         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::E, KeyCode::S, KeyCode::U, KeyCode::X, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::R, KeyCode::S, KeyCode::Y, KeyCode::A,                         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::T, KeyCode::T, KeyCode::Y, KeyCode::A,                         KeyCode::VK_NONE</autogen>

          <!-- 中段[くぁ,　,　,しょ,ちょ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::A, KeyCode::K, KeyCode::W, KeyCode::A, KeyCode::VK_NONE</autogen>


          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::F, KeyCode::S, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::G, KeyCode::T, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- 下段[くぃ,くぇ,くぉ,しゅ,ちゅ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Z, KeyCode::K, KeyCode::U, KeyCode::X, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::X, KeyCode::K, KeyCode::U, KeyCode::X, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::C, KeyCode::K, KeyCode::U, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::V, KeyCode::S, KeyCode::Y, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::B, KeyCode::T, KeyCode::Y, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <!-- O+(濁音) -->
          <!-- 上段[ぐゎ,ぎぇ,ずぃ,じゃ,ぢゃ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Q, KeyCode::G, KeyCode::U, KeyCode::X, KeyCode::W, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::W, KeyCode::G, KeyCode::Y, KeyCode::E,                         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::E, KeyCode::Z, KeyCode::U, KeyCode::X, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::R, KeyCode::J, KeyCode::A,                                     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::T, KeyCode::D, KeyCode::Y, KeyCode::A,                         KeyCode::VK_NONE</autogen>
          <!-- 中段[ぐぁ,　,　,じょ,ぢょ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::A, KeyCode::G, KeyCode::W, KeyCode::A, KeyCode::VK_NONE</autogen>


          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::F, KeyCode::J, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::G, KeyCode::D, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- 下段[ぐぃ,ぐぇ,ぐぉ,じゅ,ぢゅ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Z, KeyCode::G, KeyCode::U, KeyCode::X, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::X, KeyCode::G, KeyCode::U, KeyCode::X, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::C, KeyCode::G, KeyCode::U, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::V, KeyCode::J, KeyCode::U,                         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::B, KeyCode::D, KeyCode::Y, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <!-- 拗音シフト2(;+) -->
          <!-- 上段[りぇ,　,　,りゃ,みゃ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, KeyCode::Q, KeyCode::R, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>


          <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, KeyCode::R, KeyCode::R, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, KeyCode::T, KeyCode::M, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- 中段[つぁ,　,　,りょ,みょ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, KeyCode::A, KeyCode::T, KeyCode::S, KeyCode::A, KeyCode::VK_NONE</autogen>


          <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, KeyCode::F, KeyCode::R, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, KeyCode::G, KeyCode::M, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- 下段[つぃ,つぇ,つぉ,りゅ,みゅ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, KeyCode::Z, KeyCode::T, KeyCode::S, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, KeyCode::X, KeyCode::T, KeyCode::S, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, KeyCode::C, KeyCode::T, KeyCode::S, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, KeyCode::V, KeyCode::R, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SEMICOLON, KeyCode::B, KeyCode::M, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <!-- 拗音シフト3(J+) -->
          <!-- 上段[　,　,　,しぇ,じぇ] -->



          <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::R, KeyCode::S, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::T, KeyCode::J, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <!-- 中段[　,　,　,　,てぃ] -->




          <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::G, KeyCode::T, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
          <!-- 下段[うぃ,うぇ,うぉ,ふぁ,ふぃ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::Z, KeyCode::W, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::X, KeyCode::W, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::C, KeyCode::U, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::V, KeyCode::F, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::B, KeyCode::F, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <!-- 拗音シフト4(@+) -->
          <!-- 中段[ヴァ,ヴィ,ヴュ,ヴェ,ヴォ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_ATMARK, KeyCode::A, KeyCode::V, KeyCode::A,                                     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_ATMARK, KeyCode::S, KeyCode::V, KeyCode::I,                                     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_ATMARK, KeyCode::D, KeyCode::V, KeyCode::U, KeyCode::X, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_ATMARK, KeyCode::F, KeyCode::V, KeyCode::E,                                     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_ATMARK, KeyCode::G, KeyCode::V, KeyCode::O,                                     KeyCode::VK_NONE</autogen>

          <!-- 右手 -->
          <!-- 単打 -->
          <!-- 上段[ぽんりつづヴ] -->
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::P, KeyCode::O,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::N, KeyCode::N,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::R, KeyCode::I,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::T, KeyCode::U,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::D, KeyCode::U,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::V, KeyCode::U, KeyCode::VK_NONE</autogen>
          <!-- 中段[くう(を)いのきBS] -->
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::K, KeyCode::U,         KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::U,                     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::I,                     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::N, KeyCode::O,         KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::K, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON, ModifierFlag::NONE, KeyCode::DELETE,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::J, KeyCode::W, KeyCode::O,   KeyCode::VK_NONE</autogen>
          <!-- 下段[っるすらち] -->
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::R, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::S, KeyCode::U,         KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::NONE, KeyCode::R, KeyCode::A,           KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::T, KeyCode::I,         KeyCode::VK_NONE</autogen>
          <!-- 清音シフト(D+) -->
          <!-- 上段[ぅぬそふゎ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::Y, KeyCode::X, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::U, KeyCode::N, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::I, KeyCode::S, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::O, KeyCode::F, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::P, KeyCode::X, KeyCode::W, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- 中段[めわ　　ゆ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::H, KeyCode::M, KeyCode::E,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::J, KeyCode::W, KeyCode::A,         KeyCode::VK_NONE</autogen>


          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SEMICOLON, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <!-- 下段[ひむゃゅょ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::N, KeyCode::H, KeyCode::I,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::M, KeyCode::M, KeyCode::U,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::COMMA, KeyCode::X, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::DOT, KeyCode::X, KeyCode::Y, KeyCode::U,   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SLASH, KeyCode::X, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- 濁音シフト(S+) -->
          <!-- 上段[　ぷぞぶ　] -->

          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::U, KeyCode::P, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::I, KeyCode::Z, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::O, KeyCode::B, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 中段[ぐま　　ぎ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::H, KeyCode::G, KeyCode::U,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::J, KeyCode::M, KeyCode::A,         KeyCode::VK_NONE</autogen>


          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SEMICOLON, KeyCode::G, KeyCode::I, KeyCode::VK_NONE</autogen>
          <!-- 下段[びぺず　ぢ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::N, KeyCode::B, KeyCode::I,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::M, KeyCode::P, KeyCode::E,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::COMMA, KeyCode::Z, KeyCode::U, KeyCode::VK_NONE</autogen>

          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SLASH, KeyCode::D, KeyCode::I, KeyCode::VK_NONE</autogen>
          <!-- 拗音シフト1 -->
          <!-- E+ -->
          <!-- 上段[ひゃ,きゃ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::Y, KeyCode::H, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::U, KeyCode::K, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- 中段[ひょ,きょ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::H, KeyCode::H, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::J, KeyCode::K, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- 下段[ひゅ,きゅ,てゃ,てゅ,てょ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::N, KeyCode::H, KeyCode::Y, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::M, KeyCode::K, KeyCode::Y, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::COMMA, KeyCode::T, KeyCode::H, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::DOT, KeyCode::T, KeyCode::H, KeyCode::U,   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::SLASH, KeyCode::T, KeyCode::H, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- W+(濁音) -->
          <!-- 上段[びゃ,ぎゃ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::W, KeyCode::Y, KeyCode::B, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::W, KeyCode::U, KeyCode::G, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- 中段[びょ,ぎょ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::W, KeyCode::H, KeyCode::B, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::W, KeyCode::J, KeyCode::G, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- 下段[びゅ,ぎゅ,でゃ,でゅ,でょ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::W, KeyCode::N, KeyCode::B, KeyCode::Y, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::W, KeyCode::M, KeyCode::G, KeyCode::Y, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::W, KeyCode::COMMA, KeyCode::D, KeyCode::H, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::W, KeyCode::DOT, KeyCode::D, KeyCode::H, KeyCode::U,   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::W, KeyCode::SLASH, KeyCode::D, KeyCode::H, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- 拗音シフト2(A+) -->
          <!-- 上段[ぴゃ,にゃ,　,　,ぴぇ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::A, KeyCode::Y, KeyCode::P, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::A, KeyCode::U, KeyCode::N, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>


          <autogen>__SimultaneousKeyPresses__ KeyCode::A, KeyCode::P, KeyCode::P, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>
          <!-- 中段[ぴょ,にょ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::A, KeyCode::H, KeyCode::P, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::A, KeyCode::J, KeyCode::N, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- 下段[ぴゅ,にゅ,いぇ,にぇ,みぇ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::A, KeyCode::N, KeyCode::P, KeyCode::Y, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::A, KeyCode::M, KeyCode::N, KeyCode::Y, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::A, KeyCode::COMMA, KeyCode::Y, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::A, KeyCode::DOT, KeyCode::N, KeyCode::Y, KeyCode::E,   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::A, KeyCode::SLASH, KeyCode::M, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>
          <!-- 拗音シフト3(F+) -->
          <!-- 上段[ぢぇ,ちぇ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::Y, KeyCode::D, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::U, KeyCode::T, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>
          <!-- 中段[でぃ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::H, KeyCode::D, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
          <!-- 下段[ふぇ,ふぉ,とぅ,どぅ,ふゅ] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::N, KeyCode::F, KeyCode::E,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::M, KeyCode::F, KeyCode::O,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::COMMA, KeyCode::T, KeyCode::W, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::DOT, KeyCode::D, KeyCode::W, KeyCode::U,   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::SLASH, KeyCode::F, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 記号シフト -->
          <!-- （　！　？　） -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::W, KeyCode::E, KeyCode::KEY_8, ModifierFlag::SHIFT_L,                   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::W, KeyCode::KEY_8, ModifierFlag::SHIFT_L,                   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::R, KeyCode::KEY_1, ModifierFlag::SHIFT_L,                   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::E, KeyCode::KEY_1, ModifierFlag::SHIFT_L,                   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::U, KeyCode::I, KeyCode::SLASH, ModifierFlag::SHIFT_L,                   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::U, KeyCode::SLASH, ModifierFlag::SHIFT_L,                   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::O, KeyCode::KEY_9, ModifierFlag::SHIFT_L,                   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::I, KeyCode::KEY_9, ModifierFlag::SHIFT_L,                   KeyCode::VK_NONE</autogen>
          <!-- ；　?　＊　： -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::F, KeyCode::SEMICOLON,                                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::E, KeyCode::SEMICOLON,                                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::G, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::G, KeyCode::R, KeyCode::JIS_HAT, ModifierFlag::SHIFT_L,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::U, KeyCode::H, KeyCode::JIS_COLON, ModifierFlag::SHIFT_L,               KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::U, KeyCode::JIS_COLON, ModifierFlag::SHIFT_L,               KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::J, KeyCode::JIS_COLON,                                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::I, KeyCode::JIS_COLON,                                      KeyCode::VK_NONE</autogen>
          <!-- 「　、　／　・　。　」 -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::D, KeyCode::JIS_BRACKET_LEFT,                               KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::S, KeyCode::JIS_BRACKET_LEFT,                               KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::F, KeyCode::COMMA,                                          KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::D, KeyCode::COMMA,                                          KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::G, KeyCode::SLASH, ModifierFlag::OPTION_L,                  KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::G, KeyCode::F, KeyCode::SLASH, ModifierFlag::OPTION_L,                  KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::J, KeyCode::SLASH,                                          KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::H, KeyCode::SLASH,                                          KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::K, KeyCode::DOT,                                            KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::J, KeyCode::DOT,                                            KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::L, KeyCode::JIS_BRACKET_RIGHT,                              KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::K, KeyCode::JIS_BRACKET_RIGHT,                              KeyCode::VK_NONE</autogen>
          <!-- ＠　￥ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::V, KeyCode::JIS_ATMARK,                                     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::D, KeyCode::JIS_ATMARK,                                     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::N, KeyCode::JIS_YEN,                                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::N, KeyCode::K, KeyCode::JIS_YEN,                                        KeyCode::VK_NONE</autogen>
          <!-- ｛　，　．　｝ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::C, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::X, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::V, KeyCode::COMMA, ModifierFlag::OPTION_L,                  KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::C, KeyCode::COMMA, ModifierFlag::OPTION_L,                  KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::M, KeyCode::COMMA, KeyCode::DOT, ModifierFlag::OPTION_L,                KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, KeyCode::M, KeyCode::DOT, ModifierFlag::OPTION_L,                KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, KeyCode::DOT, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, KeyCode::COMMA, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        </item>
        <item>
          <name>新下駄配列（ことえり向け・ローマ字入力）</name>
          <identifier>remap.jis_shingeta_input_roman_qwerty_kotoeri</identifier>
          <inputsource_only>JAPANESE</inputsource_only>
          <!--
              ======================================================================
              全体的な注意点

              母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
              キーが離されるまでそのキーが解放されない。

              そのため KeyCode::VK_NONE を最後に加える。
              （詳しい説明は jis_asuka_roman.xml にて）

            -->

          <!-- 新下駄配列 -->
          <!-- 単打 -->
          <!-- 2段目 - ーには、ちぐばこがひげ「 -->
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::MINUS,                  KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::N, KeyCode::I,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::H, KeyCode::A,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::COMMA,                  KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::T, KeyCode::I,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::G, KeyCode::U,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::B, KeyCode::A,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K, KeyCode::O,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::G, KeyCode::A,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::H, KeyCode::I,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::G, KeyCode::E, KeyCode::VK_NONE</autogen>
          <!-- 「 -->

          <!-- 3段目 - のとかんっくういしなBS」 -->
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::N, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::T, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::K, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::N, KeyCode::N,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::K, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::U,                         KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::I,                         KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::S, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::N, KeyCode::A,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON, ModifierFlag::NONE, KeyCode::DELETE,            KeyCode::VK_NONE</autogen>
          <!-- 」 -->

          <!-- 4段目 - すまきるつてたで。ぶ￥ -->
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::S, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::M, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::K, KeyCode::I,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::R, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::T, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::T, KeyCode::E,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::T, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::D, KeyCode::E,    KeyCode::VK_NONE</autogen>
          <!-- 。 -->
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::B, KeyCode::U,    KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::JIS_YEN, KeyCode::VK_NONE</autogen>

          <!-- 中指シフト -->
          <!-- 2段目 - K:ファごふフィフェ , D:ウィぱよみウェウォ -->
          <!-- K -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Q, KeyCode::F, KeyCode::A,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::W, KeyCode::G, KeyCode::O,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::E, KeyCode::F, KeyCode::U,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::R, KeyCode::F, KeyCode::I,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::T, KeyCode::F, KeyCode::E,                      KeyCode::VK_NONE</autogen>
          <!-- D -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::Y, KeyCode::W, KeyCode::I,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::U, KeyCode::P, KeyCode::A,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::I, KeyCode::Y, KeyCode::O,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::O, KeyCode::M, KeyCode::I,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::P, KeyCode::W, KeyCode::E,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::JIS_ATMARK, KeyCode::U, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 3段目 - K:ほじれもゆ , D:へあ[][]え -->
          <!-- K -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::A, KeyCode::H, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::S, KeyCode::J, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::D, KeyCode::R, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::F, KeyCode::M, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <!-- D -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::H, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SEMICOLON, KeyCode::E,     KeyCode::VK_NONE</autogen>

          <!-- 4段目 - K:づぞぼむフォ , D:せねべぷヴ -->
          <!-- K -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Z, KeyCode::D, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::X, KeyCode::Z, KeyCode::O,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::C, KeyCode::B, KeyCode::O,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::V, KeyCode::M, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::B, KeyCode::F, KeyCode::O,     KeyCode::VK_NONE</autogen>
          <!-- D -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::N, KeyCode::S, KeyCode::E,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::M, KeyCode::N, KeyCode::E,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::COMMA, KeyCode::B, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::DOT, KeyCode::P, KeyCode::U,   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SLASH, KeyCode::V, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 薬指シフト -->
          <!-- 2段目 - L:ぢめけティディ , S:シェぺどやジェ -->
          <!-- L -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Q, KeyCode::D, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::W, KeyCode::M, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::E, KeyCode::K, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::R, KeyCode::T, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::T, KeyCode::D, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
          <!-- S -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::Y, KeyCode::S, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::U, KeyCode::P, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::I, KeyCode::D, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::O, KeyCode::Y, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::P, KeyCode::J, KeyCode::E,             KeyCode::VK_NONE</autogen>

          <!-- 3段目 - L:をさおりず , S:びら[][]そ -->
          <!-- L -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::A, KeyCode::W, KeyCode::O,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::S, KeyCode::S, KeyCode::A,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::D, KeyCode::O,                     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::F, KeyCode::R, KeyCode::I,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::G, KeyCode::Z, KeyCode::U,         KeyCode::VK_NONE</autogen>
          <!-- S -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::H, KeyCode::B, KeyCode::I,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::J, KeyCode::R, KeyCode::A,         KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SEMICOLON, KeyCode::S, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 4段目 - L:ぜざぎろぬ , S:わだぴぽチェ -->
          <!-- L -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Z, KeyCode::Z, KeyCode::E,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::X, KeyCode::Z, KeyCode::A,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::C, KeyCode::G, KeyCode::I,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::V, KeyCode::R, KeyCode::O,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::B, KeyCode::N, KeyCode::U,                 KeyCode::VK_NONE</autogen>
          <!-- S -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::N, KeyCode::W, KeyCode::A,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::M, KeyCode::D, KeyCode::A,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::COMMA, KeyCode::P, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::DOT, KeyCode::P, KeyCode::O,               KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SLASH, KeyCode::T, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>

          <!-- 拗音 -->
          <!-- 2段目(I) - ヒュシュショキュチュ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Q, KeyCode::H, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::W, KeyCode::S, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::E, KeyCode::S, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::R, KeyCode::K, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::T, KeyCode::T, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 3段目(I) - ヒョ[][]キョチョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::A, KeyCode::H, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::F, KeyCode::K, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::G, KeyCode::T, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 4段目(I) - ヒャ[]シャキャチャ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Z, KeyCode::H, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::C, KeyCode::S, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::V, KeyCode::K, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::B, KeyCode::T, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

          <!-- 2段目(O) - リュジュジョギュニュ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Q, KeyCode::R, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::W, KeyCode::J, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::E, KeyCode::J, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::R, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::T, KeyCode::N, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 3段目(O) - リョ[][]ギョニョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::A, KeyCode::R, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::F, KeyCode::G, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::G, KeyCode::N, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 4段目(O) - リャ[]ジャギャニャ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Z, KeyCode::R, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::C, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::V, KeyCode::G, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::B, KeyCode::N, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

          <!-- 同手同時押し -->
          <!-- RF/RG -> ・ -->
          <!-- IM によって動作が異なる -->
          <!-- HU -> ／ -->
          <!-- IM によって動作が異なる -->
          <!-- FG -> 「」 & ENTER & 左移動 -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::G, KeyCode::JIS_BRACKET_LEFT, KeyCode::JIS_BRACKET_RIGHT, KeyCode::RETURN, KeyCode::CURSOR_LEFT,                        KeyCode::VK_NONE</autogen>
          <!-- HJ -> （） & ENTER & 左移動 -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::J, KeyCode::KEY_8, ModifierFlag::SHIFT_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::RETURN, KeyCode::CURSOR_LEFT, KeyCode::VK_NONE</autogen>
          <!-- FV/FB -> ！ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::V, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::B, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <!-- NJ -> ？ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::N, KeyCode::J, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>

          <!-- 最上段(1段目) -->
          <!-- K:ぁぃぅぇぉ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_1, KeyCode::X, KeyCode::A,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_2, KeyCode::X, KeyCode::I,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_3, KeyCode::X, KeyCode::U,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_4, KeyCode::X, KeyCode::E,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_5, KeyCode::X, KeyCode::O,                    KeyCode::VK_NONE</autogen>
          <!-- L:ゃミャミュミョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_2, KeyCode::M, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_3, KeyCode::M, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_4, KeyCode::M, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <!-- I:ゅビャビュビョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_2, KeyCode::B, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_3, KeyCode::B, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_4, KeyCode::B, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <!-- O:ょピャピュピョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_2, KeyCode::P, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_3, KeyCode::P, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_4, KeyCode::P, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <!-- D:(KEY_7から)，「」；＠ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_7, KeyCode::COMMA, ModifierFlag::OPTION_L,    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_8, KeyCode::JIS_BRACKET_LEFT,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_9, KeyCode::JIS_BRACKET_RIGHT,                KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_0, KeyCode::SEMICOLON,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::MINUS, KeyCode::JIS_ATMARK,                       KeyCode::VK_NONE</autogen>
          <!-- S:(KEY_7から)．（）：＊ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_7, KeyCode::DOT, ModifierFlag::OPTION_L,      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_0, KeyCode::JIS_COLON,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::MINUS, KeyCode::JIS_COLON, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <!-- RF/RG -> ・ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::F, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::G, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
          <!-- HU -> ／ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::U, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
        </item>
        <item>
          <name>新下駄配列（ATOK向け・ローマ字入力）</name>
          <identifier>remap.jis_shingeta_input_roman_qwerty_atok</identifier>
          <inputsource_only>JAPANESE</inputsource_only>
          <!--
              ======================================================================
              全体的な注意点

              母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
              キーが離されるまでそのキーが解放されない。

              そのため KeyCode::VK_NONE を最後に加える。
              （詳しい説明は jis_asuka_roman.xml にて）

            -->

          <!-- 新下駄配列 -->
          <!-- 単打 -->
          <!-- 2段目 - ーには、ちぐばこがひげ「 -->
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::MINUS,                  KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::N, KeyCode::I,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::H, KeyCode::A,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::COMMA,                  KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::T, KeyCode::I,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::G, KeyCode::U,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::B, KeyCode::A,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K, KeyCode::O,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::G, KeyCode::A,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::H, KeyCode::I,          KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::G, KeyCode::E, KeyCode::VK_NONE</autogen>
          <!-- 「 -->

          <!-- 3段目 - のとかんっくういしなBS」 -->
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::N, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::T, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::K, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::N, KeyCode::N,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::K, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::U,                         KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::I,                         KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::S, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::N, KeyCode::A,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON, ModifierFlag::NONE, KeyCode::DELETE,            KeyCode::VK_NONE</autogen>
          <!-- 」 -->

          <!-- 4段目 - すまきるつてたで。ぶ￥ -->
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::S, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::M, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::K, KeyCode::I,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::R, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::T, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::T, KeyCode::E,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::T, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::D, KeyCode::E,    KeyCode::VK_NONE</autogen>
          <!-- 。 -->
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::B, KeyCode::U,    KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::JIS_YEN, KeyCode::VK_NONE</autogen>

          <!-- 中指シフト -->
          <!-- 2段目 - K:ファごふフィフェ , D:ウィぱよみウェウォ -->
          <!-- K -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Q, KeyCode::F, KeyCode::A,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::W, KeyCode::G, KeyCode::O,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::E, KeyCode::F, KeyCode::U,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::R, KeyCode::F, KeyCode::I,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::T, KeyCode::F, KeyCode::E,                      KeyCode::VK_NONE</autogen>
          <!-- D -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::Y, KeyCode::W, KeyCode::I,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::U, KeyCode::P, KeyCode::A,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::I, KeyCode::Y, KeyCode::O,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::O, KeyCode::M, KeyCode::I,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::P, KeyCode::W, KeyCode::E,                      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::JIS_ATMARK, KeyCode::U, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 3段目 - K:ほじれもゆ , D:へあ[][]え -->
          <!-- K -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::A, KeyCode::H, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::S, KeyCode::J, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::D, KeyCode::R, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::F, KeyCode::M, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <!-- D -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::H, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SEMICOLON, KeyCode::E,     KeyCode::VK_NONE</autogen>

          <!-- 4段目 - K:づぞぼむフォ , D:せねべぷヴ -->
          <!-- K -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Z, KeyCode::D, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::X, KeyCode::Z, KeyCode::O,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::C, KeyCode::B, KeyCode::O,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::V, KeyCode::M, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::B, KeyCode::F, KeyCode::O,     KeyCode::VK_NONE</autogen>
          <!-- D -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::N, KeyCode::S, KeyCode::E,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::M, KeyCode::N, KeyCode::E,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::COMMA, KeyCode::B, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::DOT, KeyCode::P, KeyCode::U,   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SLASH, KeyCode::V, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 薬指シフト -->
          <!-- 2段目 - L:ぢめけティディ , S:シェぺどやジェ -->
          <!-- L -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Q, KeyCode::D, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::W, KeyCode::M, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::E, KeyCode::K, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::R, KeyCode::T, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::T, KeyCode::D, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
          <!-- S -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::Y, KeyCode::S, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::U, KeyCode::P, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::I, KeyCode::D, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::O, KeyCode::Y, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::P, KeyCode::J, KeyCode::E,             KeyCode::VK_NONE</autogen>

          <!-- 3段目 - L:をさおりず , S:びら[][]そ -->
          <!-- L -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::A, KeyCode::W, KeyCode::O,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::S, KeyCode::S, KeyCode::A,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::D, KeyCode::O,                     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::F, KeyCode::R, KeyCode::I,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::G, KeyCode::Z, KeyCode::U,         KeyCode::VK_NONE</autogen>
          <!-- S -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::H, KeyCode::B, KeyCode::I,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::J, KeyCode::R, KeyCode::A,         KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SEMICOLON, KeyCode::S, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 4段目 - L:ぜざぎろぬ , S:わだぴぽチェ -->
          <!-- L -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Z, KeyCode::Z, KeyCode::E,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::X, KeyCode::Z, KeyCode::A,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::C, KeyCode::G, KeyCode::I,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::V, KeyCode::R, KeyCode::O,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::B, KeyCode::N, KeyCode::U,                 KeyCode::VK_NONE</autogen>
          <!-- S -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::N, KeyCode::W, KeyCode::A,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::M, KeyCode::D, KeyCode::A,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::COMMA, KeyCode::P, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::DOT, KeyCode::P, KeyCode::O,               KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SLASH, KeyCode::T, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>

          <!-- 拗音 -->
          <!-- 2段目(I) - ヒュシュショキュチュ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Q, KeyCode::H, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::W, KeyCode::S, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::E, KeyCode::S, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::R, KeyCode::K, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::T, KeyCode::T, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 3段目(I) - ヒョ[][]キョチョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::A, KeyCode::H, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::F, KeyCode::K, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::G, KeyCode::T, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 4段目(I) - ヒャ[]シャキャチャ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Z, KeyCode::H, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::C, KeyCode::S, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::V, KeyCode::K, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::B, KeyCode::T, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

          <!-- 2段目(O) - リュジュジョギュニュ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Q, KeyCode::R, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::W, KeyCode::J, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::E, KeyCode::J, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::R, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::T, KeyCode::N, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 3段目(O) - リョ[][]ギョニョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::A, KeyCode::R, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::F, KeyCode::G, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::G, KeyCode::N, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 4段目(O) - リャ[]ジャギャニャ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Z, KeyCode::R, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::C, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::V, KeyCode::G, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::B, KeyCode::N, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

          <!-- 同手同時押し -->
          <!-- RF/RG -> ・ -->
          <!-- IM によって動作が異なる -->
          <!-- HU -> ／ -->
          <!-- IM によって動作が異なる -->
          <!-- FG -> 「」 & ENTER & 左移動 -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::G, KeyCode::JIS_BRACKET_LEFT, KeyCode::JIS_BRACKET_RIGHT, KeyCode::RETURN, KeyCode::CURSOR_LEFT,                        KeyCode::VK_NONE</autogen>
          <!-- HJ -> （） & ENTER & 左移動 -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::J, KeyCode::KEY_8, ModifierFlag::SHIFT_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::RETURN, KeyCode::CURSOR_LEFT, KeyCode::VK_NONE</autogen>
          <!-- FV/FB -> ！ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::V, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::B, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <!-- NJ -> ？ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::N, KeyCode::J, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>

          <!-- 最上段(1段目) -->
          <!-- K:ぁぃぅぇぉ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_1, KeyCode::X, KeyCode::A,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_2, KeyCode::X, KeyCode::I,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_3, KeyCode::X, KeyCode::U,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_4, KeyCode::X, KeyCode::E,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_5, KeyCode::X, KeyCode::O,                    KeyCode::VK_NONE</autogen>
          <!-- L:ゃミャミュミョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_2, KeyCode::M, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_3, KeyCode::M, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_4, KeyCode::M, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <!-- I:ゅビャビュビョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_2, KeyCode::B, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_3, KeyCode::B, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_4, KeyCode::B, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <!-- O:ょピャピュピョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_2, KeyCode::P, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_3, KeyCode::P, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_4, KeyCode::P, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <!-- D:(KEY_7から)，「」；＠ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_7, KeyCode::COMMA, ModifierFlag::OPTION_L,    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_8, KeyCode::JIS_BRACKET_LEFT,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_9, KeyCode::JIS_BRACKET_RIGHT,                KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_0, KeyCode::SEMICOLON,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::MINUS, KeyCode::JIS_ATMARK,                       KeyCode::VK_NONE</autogen>
          <!-- S:(KEY_7から)．（）：＊ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_7, KeyCode::DOT, ModifierFlag::OPTION_L,      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_0, KeyCode::JIS_COLON,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::MINUS, KeyCode::JIS_COLON, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <!-- RF/RG -> ・ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::F, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::G, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
          <!-- HU -> ／ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::U, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
        </item>
        <item>
          <name>____________________________________________________________</name>
        </item>
        <item>
          <name>新下駄配列（ことえり向け・ローマ字入力）</name>
          <appendix>Dvorakユーザー向け</appendix>
          <appendix>・アルファベット入力: Dvorak</appendix>
          <appendix>・日本語入力: 新下駄配列</appendix>
          <identifier>remap.jis_shingeta_input_roman_qwerty_kotoeri_for_dvorak</identifier>
          <block>
            <inputsource_only>JAPANESE</inputsource_only>
            <!--
                ======================================================================
                全体的な注意点

                母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
                キーが離されるまでそのキーが解放されない。

                そのため KeyCode::VK_NONE を最後に加える。
                （詳しい説明は jis_asuka_roman.xml にて）

              -->

            <!-- 新下駄配列 -->
            <!-- 単打 -->
            <!-- 2段目 - ーには、ちぐばこがひげ「 -->
            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::MINUS,                  KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::N, KeyCode::I,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::H, KeyCode::A,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::COMMA,                  KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::T, KeyCode::I,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::G, KeyCode::U,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::B, KeyCode::A,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K, KeyCode::O,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::G, KeyCode::A,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::H, KeyCode::I,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::G, KeyCode::E, KeyCode::VK_NONE</autogen>
            <!-- 「 -->

            <!-- 3段目 - のとかんっくういしなBS」 -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::N, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::T, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::K, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::N, KeyCode::N,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::K, KeyCode::U,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::U,                         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::I,                         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::S, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::N, KeyCode::A,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_COLON, ModifierFlag::NONE, KeyCode::DELETE,            KeyCode::VK_NONE</autogen>
            <!-- 」 -->

            <!-- 4段目 - すまきるつてたで。ぶ￥ -->
            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::S, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::M, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::K, KeyCode::I,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::R, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::T, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::T, KeyCode::E,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::T, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::D, KeyCode::E,    KeyCode::VK_NONE</autogen>
            <!-- 。 -->
            <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::B, KeyCode::U,    KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::JIS_YEN, KeyCode::VK_NONE</autogen>

            <!-- 中指シフト -->
            <!-- 2段目 - K:ファごふフィフェ , D:ウィぱよみウェウォ -->
            <!-- K -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Q, KeyCode::F, KeyCode::A,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::W, KeyCode::G, KeyCode::O,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::E, KeyCode::F, KeyCode::U,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::R, KeyCode::F, KeyCode::I,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::T, KeyCode::F, KeyCode::E,                      KeyCode::VK_NONE</autogen>
            <!-- D -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::Y, KeyCode::W, KeyCode::I,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::U, KeyCode::P, KeyCode::A,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::I, KeyCode::Y, KeyCode::O,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::O, KeyCode::M, KeyCode::I,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::P, KeyCode::W, KeyCode::E,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::JIS_ATMARK, KeyCode::U, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 3段目 - K:ほじれもゆ , D:へあ[][]え -->
            <!-- K -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::A, KeyCode::H, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::S, KeyCode::J, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::D, KeyCode::R, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::F, KeyCode::M, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <!-- D -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::H, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SEMICOLON, KeyCode::E,     KeyCode::VK_NONE</autogen>

            <!-- 4段目 - K:づぞぼむフォ , D:せねべぷヴ -->
            <!-- K -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Z, KeyCode::D, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::X, KeyCode::Z, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::C, KeyCode::B, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::V, KeyCode::M, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::B, KeyCode::F, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <!-- D -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::N, KeyCode::S, KeyCode::E,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::M, KeyCode::N, KeyCode::E,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::COMMA, KeyCode::B, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::DOT, KeyCode::P, KeyCode::U,   KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SLASH, KeyCode::V, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 薬指シフト -->
            <!-- 2段目 - L:ぢめけティディ , S:シェぺどやジェ -->
            <!-- L -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Q, KeyCode::D, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::W, KeyCode::M, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::E, KeyCode::K, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::R, KeyCode::T, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::T, KeyCode::D, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
            <!-- S -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::Y, KeyCode::S, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::U, KeyCode::P, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::I, KeyCode::D, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::O, KeyCode::Y, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::P, KeyCode::J, KeyCode::E,             KeyCode::VK_NONE</autogen>

            <!-- 3段目 - L:をさおりず , S:びら[][]そ -->
            <!-- L -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::A, KeyCode::W, KeyCode::O,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::S, KeyCode::S, KeyCode::A,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::D, KeyCode::O,                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::F, KeyCode::R, KeyCode::I,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::G, KeyCode::Z, KeyCode::U,         KeyCode::VK_NONE</autogen>
            <!-- S -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::H, KeyCode::B, KeyCode::I,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::J, KeyCode::R, KeyCode::A,         KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SEMICOLON, KeyCode::S, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 4段目 - L:ぜざぎろぬ , S:わだぴぽチェ -->
            <!-- L -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Z, KeyCode::Z, KeyCode::E,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::X, KeyCode::Z, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::C, KeyCode::G, KeyCode::I,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::V, KeyCode::R, KeyCode::O,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::B, KeyCode::N, KeyCode::U,                 KeyCode::VK_NONE</autogen>
            <!-- S -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::N, KeyCode::W, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::M, KeyCode::D, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::COMMA, KeyCode::P, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::DOT, KeyCode::P, KeyCode::O,               KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SLASH, KeyCode::T, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>

            <!-- 拗音 -->
            <!-- 2段目(I) - ヒュシュショキュチュ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Q, KeyCode::H, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::W, KeyCode::S, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::E, KeyCode::S, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::R, KeyCode::K, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::T, KeyCode::T, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 3段目(I) - ヒョ[][]キョチョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::A, KeyCode::H, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::F, KeyCode::K, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::G, KeyCode::T, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 4段目(I) - ヒャ[]シャキャチャ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Z, KeyCode::H, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::C, KeyCode::S, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::V, KeyCode::K, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::B, KeyCode::T, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

            <!-- 2段目(O) - リュジュジョギュニュ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Q, KeyCode::R, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::W, KeyCode::J, KeyCode::U,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::E, KeyCode::J, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::R, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::T, KeyCode::N, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 3段目(O) - リョ[][]ギョニョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::A, KeyCode::R, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::F, KeyCode::G, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::G, KeyCode::N, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 4段目(O) - リャ[]ジャギャニャ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Z, KeyCode::R, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::C, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::V, KeyCode::G, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::B, KeyCode::N, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

            <!-- 同手同時押し -->
            <!-- RF/RG -> ・ -->
            <!-- IM によって動作が異なる -->
            <!-- HU -> ／ -->
            <!-- IM によって動作が異なる -->
            <!-- FG -> 「」 & ENTER & 左移動 -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::G, KeyCode::JIS_BRACKET_LEFT, KeyCode::JIS_BRACKET_RIGHT, KeyCode::RETURN, KeyCode::CURSOR_LEFT,                        KeyCode::VK_NONE</autogen>
            <!-- HJ -> （） & ENTER & 左移動 -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::J, KeyCode::KEY_8, ModifierFlag::SHIFT_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::RETURN, KeyCode::CURSOR_LEFT, KeyCode::VK_NONE</autogen>
            <!-- FV/FB -> ！ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::V, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::B, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
            <!-- NJ -> ？ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::N, KeyCode::J, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>

            <!-- 最上段(1段目) -->
            <!-- K:ぁぃぅぇぉ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_1, KeyCode::X, KeyCode::A,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_2, KeyCode::X, KeyCode::I,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_3, KeyCode::X, KeyCode::U,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_4, KeyCode::X, KeyCode::E,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_5, KeyCode::X, KeyCode::O,                    KeyCode::VK_NONE</autogen>
            <!-- L:ゃミャミュミョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_2, KeyCode::M, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_3, KeyCode::M, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_4, KeyCode::M, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <!-- I:ゅビャビュビョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_2, KeyCode::B, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_3, KeyCode::B, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_4, KeyCode::B, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <!-- O:ょピャピュピョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_2, KeyCode::P, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_3, KeyCode::P, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_4, KeyCode::P, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <!-- D:(KEY_7から)，「」；＠ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_7, KeyCode::COMMA, ModifierFlag::OPTION_L,    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_8, KeyCode::JIS_BRACKET_LEFT,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_9, KeyCode::JIS_BRACKET_RIGHT,                KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_0, KeyCode::SEMICOLON,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::MINUS, KeyCode::JIS_ATMARK,                       KeyCode::VK_NONE</autogen>
            <!-- S:(KEY_7から)．（）：＊ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_7, KeyCode::DOT, ModifierFlag::OPTION_L,      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_0, KeyCode::JIS_COLON,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::MINUS, KeyCode::JIS_COLON, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
            <!-- RF/RG -> ・ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::F, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::G, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            <!-- HU -> ／ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::U, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
          </block>
          <block>
            <inputsource_only>JAPANESE</inputsource_only>
            <modifier_only>
              ModifierFlag::COMMAND_L,
              ModifierFlag::COMMAND_R,
              ModifierFlag::CONTROL_L,
              ModifierFlag::CONTROL_R,
              ModifierFlag::OPTION_L,
              ModifierFlag::OPTION_R
            </modifier_only>
            <modifier_not>ModifierFlag::FN</modifier_not>

            <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT, KeyCode::JIS_ATMARK                 </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT, KeyCode::JIS_HAT                    </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT, KeyCode::KEY_6,            VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT, KeyCode::JIS_COLON,        VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT, KeyCode::KEY_8,            VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT, KeyCode::KEY_9,            VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,             KeyCode::JIS_BRACKET_LEFT           </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT,           KeyCode::JIS_BRACKET_RIGHT          </autogen>

            <!-- ============================================================ -->
            <!-- Q to ' " -->
            <autogen>__KeyToKey__ KeyCode::Q,                VK_SHIFT, KeyCode::KEY_2,     VK_SHIFT              </autogen>
            <autogen>__KeyToKey__ KeyCode::Q,                          KeyCode::KEY_7,     ModifierFlag::SHIFT_L </autogen>
            <autogen>__KeyToKey__ KeyCode::W,                          KeyCode::COMMA                            </autogen>
            <autogen>__KeyToKey__ KeyCode::E,                          KeyCode::DOT                              </autogen>
            <autogen>__KeyToKey__ KeyCode::R,                          KeyCode::P                                </autogen>
            <autogen>__KeyToKey__ KeyCode::T,                          KeyCode::Y                                </autogen>
            <autogen>__KeyToKey__ KeyCode::Y,                          KeyCode::F                                </autogen>
            <autogen>__KeyToKey__ KeyCode::U,                          KeyCode::G                                </autogen>
            <autogen>__KeyToKey__ KeyCode::I,                          KeyCode::C                                </autogen>
            <autogen>__KeyToKey__ KeyCode::O,                          KeyCode::R                                </autogen>
            <autogen>__KeyToKey__ KeyCode::P,                          KeyCode::L                                </autogen>
            <!-- @ to / ? -->
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK,                 KeyCode::SLASH                            </autogen>
            <!-- [ to = + -->
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_SHIFT, KeyCode::SEMICOLON, VK_SHIFT              </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT,           KeyCode::MINUS,     ModifierFlag::SHIFT_L </autogen>

            <!-- ============================================================ -->
            <autogen>__KeyToKey__ KeyCode::S,                           KeyCode::O                         </autogen>
            <autogen>__KeyToKey__ KeyCode::D,                           KeyCode::E                         </autogen>
            <autogen>__KeyToKey__ KeyCode::F,                           KeyCode::U                         </autogen>
            <autogen>__KeyToKey__ KeyCode::G,                           KeyCode::I                         </autogen>
            <autogen>__KeyToKey__ KeyCode::H,                           KeyCode::D                         </autogen>
            <autogen>__KeyToKey__ KeyCode::J,                           KeyCode::H                         </autogen>
            <autogen>__KeyToKey__ KeyCode::K,                           KeyCode::T                         </autogen>
            <autogen>__KeyToKey__ KeyCode::L,                           KeyCode::N                         </autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON,                   KeyCode::S                         </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_COLON,         VK_SHIFT, KeyCode::JIS_UNDERSCORE            </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_COLON,                   KeyCode::MINUS                     </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, VK_SHIFT, KeyCode::JIS_YEN,         VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT,           KeyCode::VK_JIS_BACKSLASH          </autogen>

            <!-- ============================================================ -->
            <!-- Z to ; : -->
            <autogen>__KeyToKey__ KeyCode::Z,              VK_SHIFT, KeyCode::JIS_COLON                         </autogen>
            <autogen>__KeyToKey__ KeyCode::Z,                        KeyCode::SEMICOLON                         </autogen>
            <autogen>__KeyToKey__ KeyCode::X,                        KeyCode::Q                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::C,                        KeyCode::J                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::V,                        KeyCode::K                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::B,                        KeyCode::X                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::N,                        KeyCode::B                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA,                    KeyCode::W                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,                      KeyCode::V                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH,                    KeyCode::Z                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, VK_SHIFT, KeyCode::JIS_HAT,    VK_SHIFT              </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE,           KeyCode::JIS_ATMARK, ModifierFlag::SHIFT_L </autogen>
          </block>
          <block>
            <inputsource_not>JAPANESE</inputsource_not>
            <modifier_not>ModifierFlag::FN</modifier_not>

            <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT, KeyCode::JIS_ATMARK                 </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT, KeyCode::JIS_HAT                    </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT, KeyCode::KEY_6,            VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT, KeyCode::JIS_COLON,        VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT, KeyCode::KEY_8,            VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT, KeyCode::KEY_9,            VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,             KeyCode::JIS_BRACKET_LEFT           </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT,           KeyCode::JIS_BRACKET_RIGHT          </autogen>

            <!-- ============================================================ -->
            <!-- Q to ' " -->
            <autogen>__KeyToKey__ KeyCode::Q,                VK_SHIFT, KeyCode::KEY_2,     VK_SHIFT              </autogen>
            <autogen>__KeyToKey__ KeyCode::Q,                          KeyCode::KEY_7,     ModifierFlag::SHIFT_L </autogen>
            <autogen>__KeyToKey__ KeyCode::W,                          KeyCode::COMMA                            </autogen>
            <autogen>__KeyToKey__ KeyCode::E,                          KeyCode::DOT                              </autogen>
            <autogen>__KeyToKey__ KeyCode::R,                          KeyCode::P                                </autogen>
            <autogen>__KeyToKey__ KeyCode::T,                          KeyCode::Y                                </autogen>
            <autogen>__KeyToKey__ KeyCode::Y,                          KeyCode::F                                </autogen>
            <autogen>__KeyToKey__ KeyCode::U,                          KeyCode::G                                </autogen>
            <autogen>__KeyToKey__ KeyCode::I,                          KeyCode::C                                </autogen>
            <autogen>__KeyToKey__ KeyCode::O,                          KeyCode::R                                </autogen>
            <autogen>__KeyToKey__ KeyCode::P,                          KeyCode::L                                </autogen>
            <!-- @ to / ? -->
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK,                 KeyCode::SLASH                            </autogen>
            <!-- [ to = + -->
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_SHIFT, KeyCode::SEMICOLON, VK_SHIFT              </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT,           KeyCode::MINUS,     ModifierFlag::SHIFT_L </autogen>

            <!-- ============================================================ -->
            <autogen>__KeyToKey__ KeyCode::S,                           KeyCode::O                         </autogen>
            <autogen>__KeyToKey__ KeyCode::D,                           KeyCode::E                         </autogen>
            <autogen>__KeyToKey__ KeyCode::F,                           KeyCode::U                         </autogen>
            <autogen>__KeyToKey__ KeyCode::G,                           KeyCode::I                         </autogen>
            <autogen>__KeyToKey__ KeyCode::H,                           KeyCode::D                         </autogen>
            <autogen>__KeyToKey__ KeyCode::J,                           KeyCode::H                         </autogen>
            <autogen>__KeyToKey__ KeyCode::K,                           KeyCode::T                         </autogen>
            <autogen>__KeyToKey__ KeyCode::L,                           KeyCode::N                         </autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON,                   KeyCode::S                         </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_COLON,         VK_SHIFT, KeyCode::JIS_UNDERSCORE            </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_COLON,                   KeyCode::MINUS                     </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, VK_SHIFT, KeyCode::JIS_YEN,         VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT,           KeyCode::VK_JIS_BACKSLASH          </autogen>

            <!-- ============================================================ -->
            <!-- Z to ; : -->
            <autogen>__KeyToKey__ KeyCode::Z,              VK_SHIFT, KeyCode::JIS_COLON                         </autogen>
            <autogen>__KeyToKey__ KeyCode::Z,                        KeyCode::SEMICOLON                         </autogen>
            <autogen>__KeyToKey__ KeyCode::X,                        KeyCode::Q                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::C,                        KeyCode::J                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::V,                        KeyCode::K                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::B,                        KeyCode::X                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::N,                        KeyCode::B                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA,                    KeyCode::W                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,                      KeyCode::V                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH,                    KeyCode::Z                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, VK_SHIFT, KeyCode::JIS_HAT,    VK_SHIFT              </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE,           KeyCode::JIS_ATMARK, ModifierFlag::SHIFT_L </autogen>
          </block>
        </item>
        <item>
          <name>新下駄配列（ATOK向け・ローマ字入力）</name>
          <appendix>Dvorakユーザー向け</appendix>
          <appendix>・アルファベット入力: Dvorak</appendix>
          <appendix>・日本語入力: 新下駄配列</appendix>
          <identifier>remap.jis_shingeta_input_roman_qwerty_atok_for_dvorak</identifier>
          <block>
            <inputsource_only>JAPANESE</inputsource_only>
            <!--
                ======================================================================
                全体的な注意点

                母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
                キーが離されるまでそのキーが解放されない。

                そのため KeyCode::VK_NONE を最後に加える。
                （詳しい説明は jis_asuka_roman.xml にて）

              -->

            <!-- 新下駄配列 -->
            <!-- 単打 -->
            <!-- 2段目 - ーには、ちぐばこがひげ「 -->
            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::MINUS,                  KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::N, KeyCode::I,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::H, KeyCode::A,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::COMMA,                  KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::T, KeyCode::I,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::G, KeyCode::U,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::B, KeyCode::A,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K, KeyCode::O,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::G, KeyCode::A,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::H, KeyCode::I,          KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::G, KeyCode::E, KeyCode::VK_NONE</autogen>
            <!-- 「 -->

            <!-- 3段目 - のとかんっくういしなBS」 -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::N, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::T, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::K, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::N, KeyCode::N,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::K, KeyCode::U,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::U,                         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::I,                         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::S, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::N, KeyCode::A,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_COLON, ModifierFlag::NONE, KeyCode::DELETE,            KeyCode::VK_NONE</autogen>
            <!-- 」 -->

            <!-- 4段目 - すまきるつてたで。ぶ￥ -->
            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::S, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::M, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::K, KeyCode::I,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::R, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::T, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::T, KeyCode::E,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::T, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::D, KeyCode::E,    KeyCode::VK_NONE</autogen>
            <!-- 。 -->
            <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::B, KeyCode::U,    KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::JIS_YEN, KeyCode::VK_NONE</autogen>

            <!-- 中指シフト -->
            <!-- 2段目 - K:ファごふフィフェ , D:ウィぱよみウェウォ -->
            <!-- K -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Q, KeyCode::F, KeyCode::A,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::W, KeyCode::G, KeyCode::O,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::E, KeyCode::F, KeyCode::U,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::R, KeyCode::F, KeyCode::I,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::T, KeyCode::F, KeyCode::E,                      KeyCode::VK_NONE</autogen>
            <!-- D -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::Y, KeyCode::W, KeyCode::I,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::U, KeyCode::P, KeyCode::A,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::I, KeyCode::Y, KeyCode::O,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::O, KeyCode::M, KeyCode::I,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::P, KeyCode::W, KeyCode::E,                      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::JIS_ATMARK, KeyCode::U, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 3段目 - K:ほじれもゆ , D:へあ[][]え -->
            <!-- K -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::A, KeyCode::H, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::S, KeyCode::J, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::D, KeyCode::R, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::F, KeyCode::M, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <!-- D -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::H, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SEMICOLON, KeyCode::E,     KeyCode::VK_NONE</autogen>

            <!-- 4段目 - K:づぞぼむフォ , D:せねべぷヴ -->
            <!-- K -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Z, KeyCode::D, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::X, KeyCode::Z, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::C, KeyCode::B, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::V, KeyCode::M, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::B, KeyCode::F, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <!-- D -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::N, KeyCode::S, KeyCode::E,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::M, KeyCode::N, KeyCode::E,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::COMMA, KeyCode::B, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::DOT, KeyCode::P, KeyCode::U,   KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SLASH, KeyCode::V, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 薬指シフト -->
            <!-- 2段目 - L:ぢめけティディ , S:シェぺどやジェ -->
            <!-- L -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Q, KeyCode::D, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::W, KeyCode::M, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::E, KeyCode::K, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::R, KeyCode::T, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::T, KeyCode::D, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
            <!-- S -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::Y, KeyCode::S, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::U, KeyCode::P, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::I, KeyCode::D, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::O, KeyCode::Y, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::P, KeyCode::J, KeyCode::E,             KeyCode::VK_NONE</autogen>

            <!-- 3段目 - L:をさおりず , S:びら[][]そ -->
            <!-- L -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::A, KeyCode::W, KeyCode::O,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::S, KeyCode::S, KeyCode::A,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::D, KeyCode::O,                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::F, KeyCode::R, KeyCode::I,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::G, KeyCode::Z, KeyCode::U,         KeyCode::VK_NONE</autogen>
            <!-- S -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::H, KeyCode::B, KeyCode::I,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::J, KeyCode::R, KeyCode::A,         KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SEMICOLON, KeyCode::S, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 4段目 - L:ぜざぎろぬ , S:わだぴぽチェ -->
            <!-- L -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Z, KeyCode::Z, KeyCode::E,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::X, KeyCode::Z, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::C, KeyCode::G, KeyCode::I,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::V, KeyCode::R, KeyCode::O,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::B, KeyCode::N, KeyCode::U,                 KeyCode::VK_NONE</autogen>
            <!-- S -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::N, KeyCode::W, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::M, KeyCode::D, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::COMMA, KeyCode::P, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::DOT, KeyCode::P, KeyCode::O,               KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SLASH, KeyCode::T, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>

            <!-- 拗音 -->
            <!-- 2段目(I) - ヒュシュショキュチュ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Q, KeyCode::H, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::W, KeyCode::S, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::E, KeyCode::S, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::R, KeyCode::K, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::T, KeyCode::T, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 3段目(I) - ヒョ[][]キョチョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::A, KeyCode::H, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::F, KeyCode::K, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::G, KeyCode::T, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 4段目(I) - ヒャ[]シャキャチャ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Z, KeyCode::H, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::C, KeyCode::S, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::V, KeyCode::K, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::B, KeyCode::T, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

            <!-- 2段目(O) - リュジュジョギュニュ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Q, KeyCode::R, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::W, KeyCode::J, KeyCode::U,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::E, KeyCode::J, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::R, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::T, KeyCode::N, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 3段目(O) - リョ[][]ギョニョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::A, KeyCode::R, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::F, KeyCode::G, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::G, KeyCode::N, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 4段目(O) - リャ[]ジャギャニャ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Z, KeyCode::R, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::C, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::V, KeyCode::G, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::B, KeyCode::N, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

            <!-- 同手同時押し -->
            <!-- RF/RG -> ・ -->
            <!-- IM によって動作が異なる -->
            <!-- HU -> ／ -->
            <!-- IM によって動作が異なる -->
            <!-- FG -> 「」 & ENTER & 左移動 -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::G, KeyCode::JIS_BRACKET_LEFT, KeyCode::JIS_BRACKET_RIGHT, KeyCode::RETURN, KeyCode::CURSOR_LEFT,                        KeyCode::VK_NONE</autogen>
            <!-- HJ -> （） & ENTER & 左移動 -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::J, KeyCode::KEY_8, ModifierFlag::SHIFT_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::RETURN, KeyCode::CURSOR_LEFT, KeyCode::VK_NONE</autogen>
            <!-- FV/FB -> ！ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::V, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::B, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
            <!-- NJ -> ？ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::N, KeyCode::J, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>

            <!-- 最上段(1段目) -->
            <!-- K:ぁぃぅぇぉ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_1, KeyCode::X, KeyCode::A,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_2, KeyCode::X, KeyCode::I,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_3, KeyCode::X, KeyCode::U,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_4, KeyCode::X, KeyCode::E,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_5, KeyCode::X, KeyCode::O,                    KeyCode::VK_NONE</autogen>
            <!-- L:ゃミャミュミョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_2, KeyCode::M, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_3, KeyCode::M, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_4, KeyCode::M, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <!-- I:ゅビャビュビョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_2, KeyCode::B, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_3, KeyCode::B, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_4, KeyCode::B, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <!-- O:ょピャピュピョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_2, KeyCode::P, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_3, KeyCode::P, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_4, KeyCode::P, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <!-- D:(KEY_7から)，「」；＠ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_7, KeyCode::COMMA, ModifierFlag::OPTION_L,    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_8, KeyCode::JIS_BRACKET_LEFT,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_9, KeyCode::JIS_BRACKET_RIGHT,                KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_0, KeyCode::SEMICOLON,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::MINUS, KeyCode::JIS_ATMARK,                       KeyCode::VK_NONE</autogen>
            <!-- S:(KEY_7から)．（）：＊ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_7, KeyCode::DOT, ModifierFlag::OPTION_L,      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_8, KeyCode::KEY_8, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_9, KeyCode::KEY_9, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_0, KeyCode::JIS_COLON,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::MINUS, KeyCode::JIS_COLON, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
            <!-- RF/RG -> ・ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::F, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::G, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
            <!-- HU -> ／ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::U, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
          </block>
          <block>
            <inputsource_only>JAPANESE</inputsource_only>
            <modifier_only>
              ModifierFlag::COMMAND_L,
              ModifierFlag::COMMAND_R,
              ModifierFlag::CONTROL_L,
              ModifierFlag::CONTROL_R,
              ModifierFlag::OPTION_L,
              ModifierFlag::OPTION_R
            </modifier_only>
            <modifier_not>ModifierFlag::FN</modifier_not>

            <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT, KeyCode::JIS_ATMARK                 </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT, KeyCode::JIS_HAT                    </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT, KeyCode::KEY_6,            VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT, KeyCode::JIS_COLON,        VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT, KeyCode::KEY_8,            VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT, KeyCode::KEY_9,            VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,             KeyCode::JIS_BRACKET_LEFT           </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT,           KeyCode::JIS_BRACKET_RIGHT          </autogen>

            <!-- ============================================================ -->
            <!-- Q to ' " -->
            <autogen>__KeyToKey__ KeyCode::Q,                VK_SHIFT, KeyCode::KEY_2,     VK_SHIFT              </autogen>
            <autogen>__KeyToKey__ KeyCode::Q,                          KeyCode::KEY_7,     ModifierFlag::SHIFT_L </autogen>
            <autogen>__KeyToKey__ KeyCode::W,                          KeyCode::COMMA                            </autogen>
            <autogen>__KeyToKey__ KeyCode::E,                          KeyCode::DOT                              </autogen>
            <autogen>__KeyToKey__ KeyCode::R,                          KeyCode::P                                </autogen>
            <autogen>__KeyToKey__ KeyCode::T,                          KeyCode::Y                                </autogen>
            <autogen>__KeyToKey__ KeyCode::Y,                          KeyCode::F                                </autogen>
            <autogen>__KeyToKey__ KeyCode::U,                          KeyCode::G                                </autogen>
            <autogen>__KeyToKey__ KeyCode::I,                          KeyCode::C                                </autogen>
            <autogen>__KeyToKey__ KeyCode::O,                          KeyCode::R                                </autogen>
            <autogen>__KeyToKey__ KeyCode::P,                          KeyCode::L                                </autogen>
            <!-- @ to / ? -->
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK,                 KeyCode::SLASH                            </autogen>
            <!-- [ to = + -->
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_SHIFT, KeyCode::SEMICOLON, VK_SHIFT              </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT,           KeyCode::MINUS,     ModifierFlag::SHIFT_L </autogen>

            <!-- ============================================================ -->
            <autogen>__KeyToKey__ KeyCode::S,                           KeyCode::O                         </autogen>
            <autogen>__KeyToKey__ KeyCode::D,                           KeyCode::E                         </autogen>
            <autogen>__KeyToKey__ KeyCode::F,                           KeyCode::U                         </autogen>
            <autogen>__KeyToKey__ KeyCode::G,                           KeyCode::I                         </autogen>
            <autogen>__KeyToKey__ KeyCode::H,                           KeyCode::D                         </autogen>
            <autogen>__KeyToKey__ KeyCode::J,                           KeyCode::H                         </autogen>
            <autogen>__KeyToKey__ KeyCode::K,                           KeyCode::T                         </autogen>
            <autogen>__KeyToKey__ KeyCode::L,                           KeyCode::N                         </autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON,                   KeyCode::S                         </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_COLON,         VK_SHIFT, KeyCode::JIS_UNDERSCORE            </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_COLON,                   KeyCode::MINUS                     </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, VK_SHIFT, KeyCode::JIS_YEN,         VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT,           KeyCode::VK_JIS_BACKSLASH          </autogen>

            <!-- ============================================================ -->
            <!-- Z to ; : -->
            <autogen>__KeyToKey__ KeyCode::Z,              VK_SHIFT, KeyCode::JIS_COLON                         </autogen>
            <autogen>__KeyToKey__ KeyCode::Z,                        KeyCode::SEMICOLON                         </autogen>
            <autogen>__KeyToKey__ KeyCode::X,                        KeyCode::Q                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::C,                        KeyCode::J                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::V,                        KeyCode::K                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::B,                        KeyCode::X                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::N,                        KeyCode::B                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA,                    KeyCode::W                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,                      KeyCode::V                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH,                    KeyCode::Z                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, VK_SHIFT, KeyCode::JIS_HAT,    VK_SHIFT              </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE,           KeyCode::JIS_ATMARK, ModifierFlag::SHIFT_L </autogen>
          </block>
          <block>
            <inputsource_not>JAPANESE</inputsource_not>
            <modifier_not>ModifierFlag::FN</modifier_not>

            <autogen>__KeyToKey__ KeyCode::KEY_2,   VK_SHIFT, KeyCode::JIS_ATMARK                 </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_6,   VK_SHIFT, KeyCode::JIS_HAT                    </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_7,   VK_SHIFT, KeyCode::KEY_6,            VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_8,   VK_SHIFT, KeyCode::JIS_COLON,        VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_9,   VK_SHIFT, KeyCode::KEY_8,            VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::KEY_0,   VK_SHIFT, KeyCode::KEY_9,            VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS,             KeyCode::JIS_BRACKET_LEFT           </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_HAT,           KeyCode::JIS_BRACKET_RIGHT          </autogen>

            <!-- ============================================================ -->
            <!-- Q to ' " -->
            <autogen>__KeyToKey__ KeyCode::Q,                VK_SHIFT, KeyCode::KEY_2,     VK_SHIFT              </autogen>
            <autogen>__KeyToKey__ KeyCode::Q,                          KeyCode::KEY_7,     ModifierFlag::SHIFT_L </autogen>
            <autogen>__KeyToKey__ KeyCode::W,                          KeyCode::COMMA                            </autogen>
            <autogen>__KeyToKey__ KeyCode::E,                          KeyCode::DOT                              </autogen>
            <autogen>__KeyToKey__ KeyCode::R,                          KeyCode::P                                </autogen>
            <autogen>__KeyToKey__ KeyCode::T,                          KeyCode::Y                                </autogen>
            <autogen>__KeyToKey__ KeyCode::Y,                          KeyCode::F                                </autogen>
            <autogen>__KeyToKey__ KeyCode::U,                          KeyCode::G                                </autogen>
            <autogen>__KeyToKey__ KeyCode::I,                          KeyCode::C                                </autogen>
            <autogen>__KeyToKey__ KeyCode::O,                          KeyCode::R                                </autogen>
            <autogen>__KeyToKey__ KeyCode::P,                          KeyCode::L                                </autogen>
            <!-- @ to / ? -->
            <autogen>__KeyToKey__ KeyCode::JIS_ATMARK,                 KeyCode::SLASH                            </autogen>
            <!-- [ to = + -->
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_SHIFT, KeyCode::SEMICOLON, VK_SHIFT              </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT,           KeyCode::MINUS,     ModifierFlag::SHIFT_L </autogen>

            <!-- ============================================================ -->
            <autogen>__KeyToKey__ KeyCode::S,                           KeyCode::O                         </autogen>
            <autogen>__KeyToKey__ KeyCode::D,                           KeyCode::E                         </autogen>
            <autogen>__KeyToKey__ KeyCode::F,                           KeyCode::U                         </autogen>
            <autogen>__KeyToKey__ KeyCode::G,                           KeyCode::I                         </autogen>
            <autogen>__KeyToKey__ KeyCode::H,                           KeyCode::D                         </autogen>
            <autogen>__KeyToKey__ KeyCode::J,                           KeyCode::H                         </autogen>
            <autogen>__KeyToKey__ KeyCode::K,                           KeyCode::T                         </autogen>
            <autogen>__KeyToKey__ KeyCode::L,                           KeyCode::N                         </autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON,                   KeyCode::S                         </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_COLON,         VK_SHIFT, KeyCode::JIS_UNDERSCORE            </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_COLON,                   KeyCode::MINUS                     </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, VK_SHIFT, KeyCode::JIS_YEN,         VK_SHIFT </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT,           KeyCode::VK_JIS_BACKSLASH          </autogen>

            <!-- ============================================================ -->
            <!-- Z to ; : -->
            <autogen>__KeyToKey__ KeyCode::Z,              VK_SHIFT, KeyCode::JIS_COLON                         </autogen>
            <autogen>__KeyToKey__ KeyCode::Z,                        KeyCode::SEMICOLON                         </autogen>
            <autogen>__KeyToKey__ KeyCode::X,                        KeyCode::Q                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::C,                        KeyCode::J                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::V,                        KeyCode::K                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::B,                        KeyCode::X                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::N,                        KeyCode::B                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA,                    KeyCode::W                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::DOT,                      KeyCode::V                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH,                    KeyCode::Z                                 </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, VK_SHIFT, KeyCode::JIS_HAT,    VK_SHIFT              </autogen>
            <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE,           KeyCode::JIS_ATMARK, ModifierFlag::SHIFT_L </autogen>
          </block>
        </item>
        <item>
          <name>____________________________________________________________</name>
        </item>
        <item>
          <name>新下駄配列 US Keyboard 向け（ことえり向け・ローマ字入力）</name>
          <identifier>remap.jis_shingeta_input_roman_qwerty_kotoeri_for_us</identifier>
          <inputsource_only>JAPANESE</inputsource_only>
          <!--
              ======================================================================
              全体的な注意点

              母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
              キーが離されるまでそのキーが解放されない。

              そのため KeyCode::VK_NONE を最後に加える。
              （詳しい説明は jis_asuka_roman.xml にて）

            -->

          <!-- 新下駄配列 US Keyboard 向け -->
          <!-- 単打 -->
          <!-- 2段目 - ーには、ちぐばこがひげ「 -->
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::MINUS,                    KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::N, KeyCode::I,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::H, KeyCode::A,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::COMMA,                    KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::T, KeyCode::I,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::G, KeyCode::U,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::B, KeyCode::A,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K, KeyCode::O,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::G, KeyCode::A,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::H, KeyCode::I,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::NONE, KeyCode::G, KeyCode::E, KeyCode::VK_NONE</autogen>
          <!-- 「 -->

          <!-- 3段目 - のとかんっくういしなBS」 -->
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::N, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::T, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::K, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::N, KeyCode::N,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::K, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::U,                         KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::I,                         KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::S, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::N, KeyCode::A,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::NONE, KeyCode::DELETE,                KeyCode::VK_NONE</autogen>
          <!-- 」 -->

          <!-- 4段目 - すまきるつてたで。ぶ￥ -->
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::S, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::M, KeyCode::A,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::K, KeyCode::I,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::R, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::T, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::T, KeyCode::E,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::T, KeyCode::A,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::D, KeyCode::E, KeyCode::VK_NONE</autogen>
          <!-- 。 -->
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::B, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 中指シフト -->
          <!-- 2段目 - K:ファごふフィフェ , D:ウィぱよみウェウォ -->
          <!-- K -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Q, KeyCode::F, KeyCode::A,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::W, KeyCode::G, KeyCode::O,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::E, KeyCode::F, KeyCode::U,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::R, KeyCode::F, KeyCode::I,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::T, KeyCode::F, KeyCode::E,                        KeyCode::VK_NONE</autogen>
          <!-- D -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::Y, KeyCode::W, KeyCode::I,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::U, KeyCode::P, KeyCode::A,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::I, KeyCode::Y, KeyCode::O,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::O, KeyCode::M, KeyCode::I,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::P, KeyCode::W, KeyCode::E,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::BRACKET_LEFT, KeyCode::U, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 3段目 - K:ほじれもゆ , D:へあ[][]え -->
          <!-- K -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::A, KeyCode::H, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::S, KeyCode::J, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::D, KeyCode::R, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::F, KeyCode::M, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <!-- D -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::H, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SEMICOLON, KeyCode::E,     KeyCode::VK_NONE</autogen>

          <!-- 4段目 - K:づぞぼむフォ , D:せねべぷヴ -->
          <!-- K -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Z, KeyCode::D, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::X, KeyCode::Z, KeyCode::O,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::C, KeyCode::B, KeyCode::O,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::V, KeyCode::M, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::B, KeyCode::F, KeyCode::O,     KeyCode::VK_NONE</autogen>
          <!-- D -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::N, KeyCode::S, KeyCode::E,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::M, KeyCode::N, KeyCode::E,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::COMMA, KeyCode::B, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::DOT, KeyCode::P, KeyCode::U,   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SLASH, KeyCode::V, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 薬指シフト -->
          <!-- 2段目 - L:ぢめけティディ , S:シェぺどやジェ -->
          <!-- L -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Q, KeyCode::D, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::W, KeyCode::M, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::E, KeyCode::K, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::R, KeyCode::T, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::T, KeyCode::D, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
          <!-- S -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::Y, KeyCode::S, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::U, KeyCode::P, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::I, KeyCode::D, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::O, KeyCode::Y, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::P, KeyCode::J, KeyCode::E,             KeyCode::VK_NONE</autogen>

          <!-- 3段目 - L:をさおりず , S:びら[][]そ -->
          <!-- L -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::A, KeyCode::W, KeyCode::O,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::S, KeyCode::S, KeyCode::A,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::D, KeyCode::O,                     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::F, KeyCode::R, KeyCode::I,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::G, KeyCode::Z, KeyCode::U,         KeyCode::VK_NONE</autogen>
          <!-- S -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::H, KeyCode::B, KeyCode::I,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::J, KeyCode::R, KeyCode::A,         KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SEMICOLON, KeyCode::S, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 4段目 - L:ぜざぎろぬ , S:わだぴぽチェ -->
          <!-- L -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Z, KeyCode::Z, KeyCode::E,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::X, KeyCode::Z, KeyCode::A,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::C, KeyCode::G, KeyCode::I,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::V, KeyCode::R, KeyCode::O,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::B, KeyCode::N, KeyCode::U,                 KeyCode::VK_NONE</autogen>
          <!-- S -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::N, KeyCode::W, KeyCode::A,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::M, KeyCode::D, KeyCode::A,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::COMMA, KeyCode::P, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::DOT, KeyCode::P, KeyCode::O,               KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SLASH, KeyCode::T, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>

          <!-- 拗音 -->
          <!-- 2段目(I) - ヒュシュショキュチュ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Q, KeyCode::H, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::W, KeyCode::S, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::E, KeyCode::S, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::R, KeyCode::K, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::T, KeyCode::T, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 3段目(I) - ヒョ[][]キョチョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::A, KeyCode::H, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::F, KeyCode::K, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::G, KeyCode::T, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 4段目(I) - ヒャ[]シャキャチャ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Z, KeyCode::H, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::C, KeyCode::S, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::V, KeyCode::K, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::B, KeyCode::T, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

          <!-- 2段目(O) - リュジュジョギュニュ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Q, KeyCode::R, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::W, KeyCode::J, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::E, KeyCode::J, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::R, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::T, KeyCode::N, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 3段目(O) - リョ[][]ギョニョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::A, KeyCode::R, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::F, KeyCode::G, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::G, KeyCode::N, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 4段目(O) - リャ[]ジャギャニャ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Z, KeyCode::R, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::C, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::V, KeyCode::G, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::B, KeyCode::N, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

          <!-- 同手同時押し -->
          <!-- RF/RG -> ・ -->
          <!-- IM によって動作が異なる -->
          <!-- HU -> ／ -->
          <!-- IM によって動作が異なる -->
          <!-- FG -> 「」 & ENTER & 左移動 -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::G, KeyCode::BRACKET_LEFT, KeyCode::BRACKET_RIGHT, KeyCode::RETURN, KeyCode::CURSOR_LEFT,                                KeyCode::VK_NONE</autogen>
          <!-- HJ -> （） & ENTER & 左移動 -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::J, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::KEY_0, ModifierFlag::SHIFT_L, KeyCode::RETURN, KeyCode::CURSOR_LEFT, KeyCode::VK_NONE</autogen>
          <!-- FV/FB -> ！ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::V, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::B, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <!-- NJ -> ？ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::N, KeyCode::J, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>

          <!-- 最上段(1段目) -->
          <!-- K:ぁぃぅぇぉ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_1, KeyCode::X, KeyCode::A,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_2, KeyCode::X, KeyCode::I,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_3, KeyCode::X, KeyCode::U,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_4, KeyCode::X, KeyCode::E,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_5, KeyCode::X, KeyCode::O,                    KeyCode::VK_NONE</autogen>
          <!-- L:ゃミャミュミョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_2, KeyCode::M, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_3, KeyCode::M, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_4, KeyCode::M, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <!-- I:ゅビャビュビョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_2, KeyCode::B, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_3, KeyCode::B, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_4, KeyCode::B, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <!-- O:ょピャピュピョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_2, KeyCode::P, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_3, KeyCode::P, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_4, KeyCode::P, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <!-- D:(KEY_7から)，「」；＠ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_7, KeyCode::COMMA, ModifierFlag::OPTION_L,    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_8, KeyCode::BRACKET_LEFT,                     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_9, KeyCode::BRACKET_RIGHT,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_0, KeyCode::SEMICOLON,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::MINUS, KeyCode::KEY_2, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
          <!-- S:(KEY_7から)．（）：＊ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_7, KeyCode::DOT, ModifierFlag::OPTION_L,      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_8, KeyCode::KEY_9, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_9, KeyCode::KEY_0, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_0, KeyCode::SEMICOLON, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::MINUS, KeyCode::KEY_8, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
          <!-- RF/RG -> ・ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::F, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::G, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
          <!-- HU -> ／ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::U, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
        </item>
        <item>
          <name>新下駄配列 US Keyboard 向け（ATOK向け・ローマ字入力）</name>
          <identifier>remap.jis_shingeta_input_roman_qwerty_atok_for_us</identifier>
          <inputsource_only>JAPANESE</inputsource_only>
          <!--
              ======================================================================
              全体的な注意点

              母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
              キーが離されるまでそのキーが解放されない。

              そのため KeyCode::VK_NONE を最後に加える。
              （詳しい説明は jis_asuka_roman.xml にて）

            -->

          <!-- 新下駄配列 US Keyboard 向け -->
          <!-- 単打 -->
          <!-- 2段目 - ーには、ちぐばこがひげ「 -->
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::MINUS,                    KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::N, KeyCode::I,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::H, KeyCode::A,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::COMMA,                    KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::T, KeyCode::I,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::G, KeyCode::U,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::B, KeyCode::A,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K, KeyCode::O,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::G, KeyCode::A,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::H, KeyCode::I,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::NONE, KeyCode::G, KeyCode::E, KeyCode::VK_NONE</autogen>
          <!-- 「 -->

          <!-- 3段目 - のとかんっくういしなBS」 -->
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::N, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::T, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::K, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::N, KeyCode::N,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::K, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::U,                         KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::I,                         KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::S, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::N, KeyCode::A,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::NONE, KeyCode::DELETE,                KeyCode::VK_NONE</autogen>
          <!-- 」 -->

          <!-- 4段目 - すまきるつてたで。ぶ￥ -->
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::S, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::M, KeyCode::A,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::K, KeyCode::I,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::R, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::T, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::T, KeyCode::E,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::T, KeyCode::A,     KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::D, KeyCode::E, KeyCode::VK_NONE</autogen>
          <!-- 。 -->
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::B, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 中指シフト -->
          <!-- 2段目 - K:ファごふフィフェ , D:ウィぱよみウェウォ -->
          <!-- K -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Q, KeyCode::F, KeyCode::A,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::W, KeyCode::G, KeyCode::O,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::E, KeyCode::F, KeyCode::U,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::R, KeyCode::F, KeyCode::I,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::T, KeyCode::F, KeyCode::E,                        KeyCode::VK_NONE</autogen>
          <!-- D -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::Y, KeyCode::W, KeyCode::I,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::U, KeyCode::P, KeyCode::A,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::I, KeyCode::Y, KeyCode::O,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::O, KeyCode::M, KeyCode::I,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::P, KeyCode::W, KeyCode::E,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::BRACKET_LEFT, KeyCode::U, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 3段目 - K:ほじれもゆ , D:へあ[][]え -->
          <!-- K -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::A, KeyCode::H, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::S, KeyCode::J, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::D, KeyCode::R, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::F, KeyCode::M, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <!-- D -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::H, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SEMICOLON, KeyCode::E,     KeyCode::VK_NONE</autogen>

          <!-- 4段目 - K:づぞぼむフォ , D:せねべぷヴ -->
          <!-- K -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Z, KeyCode::D, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::X, KeyCode::Z, KeyCode::O,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::C, KeyCode::B, KeyCode::O,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::V, KeyCode::M, KeyCode::U,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::B, KeyCode::F, KeyCode::O,     KeyCode::VK_NONE</autogen>
          <!-- D -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::N, KeyCode::S, KeyCode::E,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::M, KeyCode::N, KeyCode::E,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::COMMA, KeyCode::B, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::DOT, KeyCode::P, KeyCode::U,   KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SLASH, KeyCode::V, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 薬指シフト -->
          <!-- 2段目 - L:ぢめけティディ , S:シェぺどやジェ -->
          <!-- L -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Q, KeyCode::D, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::W, KeyCode::M, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::E, KeyCode::K, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::R, KeyCode::T, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::T, KeyCode::D, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
          <!-- S -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::Y, KeyCode::S, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::U, KeyCode::P, KeyCode::E,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::I, KeyCode::D, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::O, KeyCode::Y, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::P, KeyCode::J, KeyCode::E,             KeyCode::VK_NONE</autogen>

          <!-- 3段目 - L:をさおりず , S:びら[][]そ -->
          <!-- L -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::A, KeyCode::W, KeyCode::O,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::S, KeyCode::S, KeyCode::A,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::D, KeyCode::O,                     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::F, KeyCode::R, KeyCode::I,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::G, KeyCode::Z, KeyCode::U,         KeyCode::VK_NONE</autogen>
          <!-- S -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::H, KeyCode::B, KeyCode::I,         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::J, KeyCode::R, KeyCode::A,         KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SEMICOLON, KeyCode::S, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 4段目 - L:ぜざぎろぬ , S:わだぴぽチェ -->
          <!-- L -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Z, KeyCode::Z, KeyCode::E,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::X, KeyCode::Z, KeyCode::A,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::C, KeyCode::G, KeyCode::I,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::V, KeyCode::R, KeyCode::O,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::B, KeyCode::N, KeyCode::U,                 KeyCode::VK_NONE</autogen>
          <!-- S -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::N, KeyCode::W, KeyCode::A,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::M, KeyCode::D, KeyCode::A,                 KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::COMMA, KeyCode::P, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::DOT, KeyCode::P, KeyCode::O,               KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SLASH, KeyCode::T, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>

          <!-- 拗音 -->
          <!-- 2段目(I) - ヒュシュショキュチュ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Q, KeyCode::H, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::W, KeyCode::S, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::E, KeyCode::S, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::R, KeyCode::K, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::T, KeyCode::T, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 3段目(I) - ヒョ[][]キョチョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::A, KeyCode::H, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::F, KeyCode::K, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::G, KeyCode::T, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 4段目(I) - ヒャ[]シャキャチャ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Z, KeyCode::H, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::C, KeyCode::S, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::V, KeyCode::K, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::B, KeyCode::T, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

          <!-- 2段目(O) - リュジュジョギュニュ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Q, KeyCode::R, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::W, KeyCode::J, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::E, KeyCode::J, KeyCode::O,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::R, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::T, KeyCode::N, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

          <!-- 3段目(O) - リョ[][]ギョニョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::A, KeyCode::R, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::F, KeyCode::G, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::G, KeyCode::N, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

          <!-- 4段目(O) - リャ[]ジャギャニャ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Z, KeyCode::R, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <!-- [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::C, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::V, KeyCode::G, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::B, KeyCode::N, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

          <!-- 同手同時押し -->
          <!-- RF/RG -> ・ -->
          <!-- IM によって動作が異なる -->
          <!-- HU -> ／ -->
          <!-- IM によって動作が異なる -->
          <!-- FG -> 「」 & ENTER & 左移動 -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::G, KeyCode::BRACKET_LEFT, KeyCode::BRACKET_RIGHT, KeyCode::RETURN, KeyCode::CURSOR_LEFT,                                KeyCode::VK_NONE</autogen>
          <!-- HJ -> （） & ENTER & 左移動 -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::J, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::KEY_0, ModifierFlag::SHIFT_L, KeyCode::RETURN, KeyCode::CURSOR_LEFT, KeyCode::VK_NONE</autogen>
          <!-- FV/FB -> ！ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::V, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::B, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <!-- NJ -> ？ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::N, KeyCode::J, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>

          <!-- 最上段(1段目) -->
          <!-- K:ぁぃぅぇぉ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_1, KeyCode::X, KeyCode::A,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_2, KeyCode::X, KeyCode::I,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_3, KeyCode::X, KeyCode::U,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_4, KeyCode::X, KeyCode::E,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_5, KeyCode::X, KeyCode::O,                    KeyCode::VK_NONE</autogen>
          <!-- L:ゃミャミュミョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_2, KeyCode::M, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_3, KeyCode::M, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_4, KeyCode::M, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <!-- I:ゅビャビュビョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_2, KeyCode::B, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_3, KeyCode::B, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_4, KeyCode::B, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <!-- O:ょピャピュピョ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_2, KeyCode::P, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_3, KeyCode::P, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_4, KeyCode::P, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
          <!-- D:(KEY_7から)，「」；＠ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_7, KeyCode::COMMA, ModifierFlag::OPTION_L,    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_8, KeyCode::BRACKET_LEFT,                     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_9, KeyCode::BRACKET_RIGHT,                    KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_0, KeyCode::SEMICOLON,                        KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::MINUS, KeyCode::KEY_2, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
          <!-- S:(KEY_7から)．（）：＊ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_7, KeyCode::DOT, ModifierFlag::OPTION_L,      KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_8, KeyCode::KEY_9, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_9, KeyCode::KEY_0, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_0, KeyCode::SEMICOLON, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::MINUS, KeyCode::KEY_8, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
          <!-- RF/RG -> ・ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::F, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::G, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
          <!-- HU -> ／ -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::U, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
        </item>
        <item>
          <name>____________________________________________________________</name>
        </item>
        <item>
          <name>新下駄配列 US Keyboard 向け（ことえり向け・ローマ字入力）</name>
          <appendix>Dvorakユーザー向け</appendix>
          <appendix>・アルファベット入力: Dvorak</appendix>
          <appendix>・日本語入力: 新下駄配列</appendix>
          <identifier>remap.jis_shingeta_input_roman_qwerty_kotoeri_for_dvorak_for_us</identifier>
          <block>
            <inputsource_only>JAPANESE</inputsource_only>
            <!--
                ======================================================================
                全体的な注意点

                母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
                キーが離されるまでそのキーが解放されない。

                そのため KeyCode::VK_NONE を最後に加える。
                （詳しい説明は jis_asuka_roman.xml にて）

              -->

            <!-- 新下駄配列 US Keyboard 向け -->
            <!-- 単打 -->
            <!-- 2段目 - ーには、ちぐばこがひげ「 -->
            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::MINUS,                    KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::N, KeyCode::I,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::H, KeyCode::A,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::COMMA,                    KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::T, KeyCode::I,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::G, KeyCode::U,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::B, KeyCode::A,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K, KeyCode::O,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::G, KeyCode::A,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::H, KeyCode::I,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::NONE, KeyCode::G, KeyCode::E, KeyCode::VK_NONE</autogen>
            <!-- 「 -->

            <!-- 3段目 - のとかんっくういしなBS」 -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::N, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::T, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::K, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::N, KeyCode::N,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::K, KeyCode::U,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::U,                         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::I,                         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::S, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::N, KeyCode::A,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::NONE, KeyCode::DELETE,                KeyCode::VK_NONE</autogen>
            <!-- 」 -->

            <!-- 4段目 - すまきるつてたで。ぶ￥ -->
            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::S, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::M, KeyCode::A,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::K, KeyCode::I,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::R, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::T, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::T, KeyCode::E,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::T, KeyCode::A,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::D, KeyCode::E, KeyCode::VK_NONE</autogen>
            <!-- 。 -->
            <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::B, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 中指シフト -->
            <!-- 2段目 - K:ファごふフィフェ , D:ウィぱよみウェウォ -->
            <!-- K -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Q, KeyCode::F, KeyCode::A,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::W, KeyCode::G, KeyCode::O,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::E, KeyCode::F, KeyCode::U,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::R, KeyCode::F, KeyCode::I,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::T, KeyCode::F, KeyCode::E,                        KeyCode::VK_NONE</autogen>
            <!-- D -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::Y, KeyCode::W, KeyCode::I,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::U, KeyCode::P, KeyCode::A,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::I, KeyCode::Y, KeyCode::O,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::O, KeyCode::M, KeyCode::I,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::P, KeyCode::W, KeyCode::E,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::BRACKET_LEFT, KeyCode::U, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 3段目 - K:ほじれもゆ , D:へあ[][]え -->
            <!-- K -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::A, KeyCode::H, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::S, KeyCode::J, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::D, KeyCode::R, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::F, KeyCode::M, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <!-- D -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::H, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SEMICOLON, KeyCode::E,     KeyCode::VK_NONE</autogen>

            <!-- 4段目 - K:づぞぼむフォ , D:せねべぷヴ -->
            <!-- K -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Z, KeyCode::D, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::X, KeyCode::Z, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::C, KeyCode::B, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::V, KeyCode::M, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::B, KeyCode::F, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <!-- D -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::N, KeyCode::S, KeyCode::E,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::M, KeyCode::N, KeyCode::E,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::COMMA, KeyCode::B, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::DOT, KeyCode::P, KeyCode::U,   KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SLASH, KeyCode::V, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 薬指シフト -->
            <!-- 2段目 - L:ぢめけティディ , S:シェぺどやジェ -->
            <!-- L -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Q, KeyCode::D, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::W, KeyCode::M, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::E, KeyCode::K, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::R, KeyCode::T, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::T, KeyCode::D, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
            <!-- S -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::Y, KeyCode::S, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::U, KeyCode::P, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::I, KeyCode::D, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::O, KeyCode::Y, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::P, KeyCode::J, KeyCode::E,             KeyCode::VK_NONE</autogen>

            <!-- 3段目 - L:をさおりず , S:びら[][]そ -->
            <!-- L -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::A, KeyCode::W, KeyCode::O,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::S, KeyCode::S, KeyCode::A,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::D, KeyCode::O,                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::F, KeyCode::R, KeyCode::I,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::G, KeyCode::Z, KeyCode::U,         KeyCode::VK_NONE</autogen>
            <!-- S -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::H, KeyCode::B, KeyCode::I,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::J, KeyCode::R, KeyCode::A,         KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SEMICOLON, KeyCode::S, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 4段目 - L:ぜざぎろぬ , S:わだぴぽチェ -->
            <!-- L -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Z, KeyCode::Z, KeyCode::E,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::X, KeyCode::Z, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::C, KeyCode::G, KeyCode::I,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::V, KeyCode::R, KeyCode::O,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::B, KeyCode::N, KeyCode::U,                 KeyCode::VK_NONE</autogen>
            <!-- S -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::N, KeyCode::W, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::M, KeyCode::D, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::COMMA, KeyCode::P, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::DOT, KeyCode::P, KeyCode::O,               KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SLASH, KeyCode::T, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>

            <!-- 拗音 -->
            <!-- 2段目(I) - ヒュシュショキュチュ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Q, KeyCode::H, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::W, KeyCode::S, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::E, KeyCode::S, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::R, KeyCode::K, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::T, KeyCode::T, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 3段目(I) - ヒョ[][]キョチョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::A, KeyCode::H, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::F, KeyCode::K, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::G, KeyCode::T, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 4段目(I) - ヒャ[]シャキャチャ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Z, KeyCode::H, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::C, KeyCode::S, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::V, KeyCode::K, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::B, KeyCode::T, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

            <!-- 2段目(O) - リュジュジョギュニュ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Q, KeyCode::R, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::W, KeyCode::J, KeyCode::U,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::E, KeyCode::J, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::R, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::T, KeyCode::N, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 3段目(O) - リョ[][]ギョニョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::A, KeyCode::R, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::F, KeyCode::G, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::G, KeyCode::N, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 4段目(O) - リャ[]ジャギャニャ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Z, KeyCode::R, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::C, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::V, KeyCode::G, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::B, KeyCode::N, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

            <!-- 同手同時押し -->
            <!-- RF/RG -> ・ -->
            <!-- IM によって動作が異なる -->
            <!-- HU -> ／ -->
            <!-- IM によって動作が異なる -->
            <!-- FG -> 「」 & ENTER & 左移動 -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::G, KeyCode::BRACKET_LEFT, KeyCode::BRACKET_RIGHT, KeyCode::RETURN, KeyCode::CURSOR_LEFT,                                KeyCode::VK_NONE</autogen>
            <!-- HJ -> （） & ENTER & 左移動 -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::J, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::KEY_0, ModifierFlag::SHIFT_L, KeyCode::RETURN, KeyCode::CURSOR_LEFT, KeyCode::VK_NONE</autogen>
            <!-- FV/FB -> ！ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::V, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::B, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
            <!-- NJ -> ？ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::N, KeyCode::J, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>

            <!-- 最上段(1段目) -->
            <!-- K:ぁぃぅぇぉ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_1, KeyCode::X, KeyCode::A,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_2, KeyCode::X, KeyCode::I,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_3, KeyCode::X, KeyCode::U,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_4, KeyCode::X, KeyCode::E,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_5, KeyCode::X, KeyCode::O,                    KeyCode::VK_NONE</autogen>
            <!-- L:ゃミャミュミョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_2, KeyCode::M, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_3, KeyCode::M, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_4, KeyCode::M, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <!-- I:ゅビャビュビョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_2, KeyCode::B, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_3, KeyCode::B, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_4, KeyCode::B, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <!-- O:ょピャピュピョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_2, KeyCode::P, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_3, KeyCode::P, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_4, KeyCode::P, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <!-- D:(KEY_7から)，「」；＠ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_7, KeyCode::COMMA, ModifierFlag::OPTION_L,    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_8, KeyCode::BRACKET_LEFT,                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_9, KeyCode::BRACKET_RIGHT,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_0, KeyCode::SEMICOLON,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::MINUS, KeyCode::KEY_2, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
            <!-- S:(KEY_7から)．（）：＊ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_7, KeyCode::DOT, ModifierFlag::OPTION_L,      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_8, KeyCode::KEY_9, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_9, KeyCode::KEY_0, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_0, KeyCode::SEMICOLON, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::MINUS, KeyCode::KEY_8, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
            <!-- RF/RG -> ・ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::F, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::G, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
            <!-- HU -> ／ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::U, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
          </block>
          <block>
            <inputsource_only>JAPANESE</inputsource_only>
            <modifier_only>
              ModifierFlag::COMMAND_L,
              ModifierFlag::COMMAND_R,
              ModifierFlag::CONTROL_L,
              ModifierFlag::CONTROL_R,
              ModifierFlag::OPTION_L,
              ModifierFlag::OPTION_R
            </modifier_only>
            <!-- If ModifierFlag::FN is pressed, retain keys to convert Fn+jkl to 123 (numpad) -->
            <modifier_not>ModifierFlag::FN</modifier_not>

            <autogen>__KeyToKey__ KeyCode::Q, KeyCode::QUOTE</autogen>
            <autogen>__KeyToKey__ KeyCode::W, KeyCode::COMMA</autogen>
            <autogen>__KeyToKey__ KeyCode::E, KeyCode::DOT</autogen>
            <autogen>__KeyToKey__ KeyCode::R, KeyCode::P</autogen>
            <autogen>__KeyToKey__ KeyCode::T, KeyCode::Y</autogen>
            <autogen>__KeyToKey__ KeyCode::Y, KeyCode::F</autogen>
            <autogen>__KeyToKey__ KeyCode::U, KeyCode::G</autogen>
            <autogen>__KeyToKey__ KeyCode::I, KeyCode::C</autogen>
            <autogen>__KeyToKey__ KeyCode::O, KeyCode::R</autogen>
            <autogen>__KeyToKey__ KeyCode::P, KeyCode::L</autogen>
            <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::SLASH</autogen>
            <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, KeyCode::EQUAL</autogen>
            <autogen>__KeyToKey__ KeyCode::S, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::D, KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::F, KeyCode::U</autogen>
            <autogen>__KeyToKey__ KeyCode::G, KeyCode::I</autogen>
            <autogen>__KeyToKey__ KeyCode::H, KeyCode::D</autogen>
            <autogen>__KeyToKey__ KeyCode::J, KeyCode::H</autogen>
            <autogen>__KeyToKey__ KeyCode::K, KeyCode::T</autogen>
            <autogen>__KeyToKey__ KeyCode::L, KeyCode::N</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::S</autogen>
            <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::MINUS</autogen>
            <autogen>__KeyToKey__ KeyCode::Z, KeyCode::SEMICOLON</autogen>
            <autogen>__KeyToKey__ KeyCode::X, KeyCode::Q</autogen>
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::J</autogen>
            <autogen>__KeyToKey__ KeyCode::V, KeyCode::K</autogen>
            <autogen>__KeyToKey__ KeyCode::B, KeyCode::X</autogen>
            <autogen>__KeyToKey__ KeyCode::N, KeyCode::B</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::W</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::V</autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::Z</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS, KeyCode::BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::EQUAL, KeyCode::BRACKET_RIGHT</autogen>
          </block>
          <block>
            <inputsource_not>JAPANESE</inputsource_not>
            <!-- If ModifierFlag::FN is pressed, retain keys to convert Fn+jkl to 123 (numpad) -->
            <modifier_not>ModifierFlag::FN</modifier_not>

            <autogen>__KeyToKey__ KeyCode::Q, KeyCode::QUOTE</autogen>
            <autogen>__KeyToKey__ KeyCode::W, KeyCode::COMMA</autogen>
            <autogen>__KeyToKey__ KeyCode::E, KeyCode::DOT</autogen>
            <autogen>__KeyToKey__ KeyCode::R, KeyCode::P</autogen>
            <autogen>__KeyToKey__ KeyCode::T, KeyCode::Y</autogen>
            <autogen>__KeyToKey__ KeyCode::Y, KeyCode::F</autogen>
            <autogen>__KeyToKey__ KeyCode::U, KeyCode::G</autogen>
            <autogen>__KeyToKey__ KeyCode::I, KeyCode::C</autogen>
            <autogen>__KeyToKey__ KeyCode::O, KeyCode::R</autogen>
            <autogen>__KeyToKey__ KeyCode::P, KeyCode::L</autogen>
            <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::SLASH</autogen>
            <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, KeyCode::EQUAL</autogen>
            <autogen>__KeyToKey__ KeyCode::S, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::D, KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::F, KeyCode::U</autogen>
            <autogen>__KeyToKey__ KeyCode::G, KeyCode::I</autogen>
            <autogen>__KeyToKey__ KeyCode::H, KeyCode::D</autogen>
            <autogen>__KeyToKey__ KeyCode::J, KeyCode::H</autogen>
            <autogen>__KeyToKey__ KeyCode::K, KeyCode::T</autogen>
            <autogen>__KeyToKey__ KeyCode::L, KeyCode::N</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::S</autogen>
            <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::MINUS</autogen>
            <autogen>__KeyToKey__ KeyCode::Z, KeyCode::SEMICOLON</autogen>
            <autogen>__KeyToKey__ KeyCode::X, KeyCode::Q</autogen>
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::J</autogen>
            <autogen>__KeyToKey__ KeyCode::V, KeyCode::K</autogen>
            <autogen>__KeyToKey__ KeyCode::B, KeyCode::X</autogen>
            <autogen>__KeyToKey__ KeyCode::N, KeyCode::B</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::W</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::V</autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::Z</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS, KeyCode::BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::EQUAL, KeyCode::BRACKET_RIGHT</autogen>
          </block>
        </item>
        <item>
          <name>新下駄配列 US Keyboard 向け（ATOK向け・ローマ字入力）</name>
          <appendix>Dvorakユーザー向け</appendix>
          <appendix>・アルファベット入力: Dvorak</appendix>
          <appendix>・日本語入力: 新下駄配列</appendix>
          <identifier>remap.jis_shingeta_input_roman_qwerty_atok_for_dvorak_for_us</identifier>
          <block>
            <inputsource_only>JAPANESE</inputsource_only>
            <!--
                ======================================================================
                全体的な注意点

                母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
                キーが離されるまでそのキーが解放されない。

                そのため KeyCode::VK_NONE を最後に加える。
                （詳しい説明は jis_asuka_roman.xml にて）

              -->

            <!-- 新下駄配列 US Keyboard 向け -->
            <!-- 単打 -->
            <!-- 2段目 - ーには、ちぐばこがひげ「 -->
            <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::MINUS,                    KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::N, KeyCode::I,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::H, KeyCode::A,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::COMMA,                    KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::T, KeyCode::I,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::G, KeyCode::U,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::B, KeyCode::A,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::K, KeyCode::O,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::G, KeyCode::A,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::H, KeyCode::I,            KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::NONE, KeyCode::G, KeyCode::E, KeyCode::VK_NONE</autogen>
            <!-- 「 -->

            <!-- 3段目 - のとかんっくういしなBS」 -->
            <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::N, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::T, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::K, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::N, KeyCode::N,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::K, KeyCode::U,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::U,                         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::I,                         KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::S, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::N, KeyCode::A,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::NONE, KeyCode::DELETE,                KeyCode::VK_NONE</autogen>
            <!-- 」 -->

            <!-- 4段目 - すまきるつてたで。ぶ￥ -->
            <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::S, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::M, KeyCode::A,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::K, KeyCode::I,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::R, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::T, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::T, KeyCode::E,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::T, KeyCode::A,     KeyCode::VK_NONE</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::D, KeyCode::E, KeyCode::VK_NONE</autogen>
            <!-- 。 -->
            <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::B, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 中指シフト -->
            <!-- 2段目 - K:ファごふフィフェ , D:ウィぱよみウェウォ -->
            <!-- K -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Q, KeyCode::F, KeyCode::A,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::W, KeyCode::G, KeyCode::O,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::E, KeyCode::F, KeyCode::U,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::R, KeyCode::F, KeyCode::I,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::T, KeyCode::F, KeyCode::E,                        KeyCode::VK_NONE</autogen>
            <!-- D -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::Y, KeyCode::W, KeyCode::I,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::U, KeyCode::P, KeyCode::A,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::I, KeyCode::Y, KeyCode::O,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::O, KeyCode::M, KeyCode::I,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::P, KeyCode::W, KeyCode::E,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::BRACKET_LEFT, KeyCode::U, KeyCode::X, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 3段目 - K:ほじれもゆ , D:へあ[][]え -->
            <!-- K -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::A, KeyCode::H, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::S, KeyCode::J, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::D, KeyCode::R, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::F, KeyCode::M, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <!-- D -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::H, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SEMICOLON, KeyCode::E,     KeyCode::VK_NONE</autogen>

            <!-- 4段目 - K:づぞぼむフォ , D:せねべぷヴ -->
            <!-- K -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::Z, KeyCode::D, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::X, KeyCode::Z, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::C, KeyCode::B, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::V, KeyCode::M, KeyCode::U,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::B, KeyCode::F, KeyCode::O,     KeyCode::VK_NONE</autogen>
            <!-- D -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::N, KeyCode::S, KeyCode::E,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::M, KeyCode::N, KeyCode::E,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::COMMA, KeyCode::B, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::DOT, KeyCode::P, KeyCode::U,   KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::SLASH, KeyCode::V, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 薬指シフト -->
            <!-- 2段目 - L:ぢめけティディ , S:シェぺどやジェ -->
            <!-- L -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Q, KeyCode::D, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::W, KeyCode::M, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::E, KeyCode::K, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::R, KeyCode::T, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::T, KeyCode::D, KeyCode::H, KeyCode::I, KeyCode::VK_NONE</autogen>
            <!-- S -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::Y, KeyCode::S, KeyCode::H, KeyCode::E, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::U, KeyCode::P, KeyCode::E,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::I, KeyCode::D, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::O, KeyCode::Y, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::P, KeyCode::J, KeyCode::E,             KeyCode::VK_NONE</autogen>

            <!-- 3段目 - L:をさおりず , S:びら[][]そ -->
            <!-- L -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::A, KeyCode::W, KeyCode::O,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::S, KeyCode::S, KeyCode::A,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::D, KeyCode::O,                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::F, KeyCode::R, KeyCode::I,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::G, KeyCode::Z, KeyCode::U,         KeyCode::VK_NONE</autogen>
            <!-- S -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::H, KeyCode::B, KeyCode::I,         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::J, KeyCode::R, KeyCode::A,         KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SEMICOLON, KeyCode::S, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 4段目 - L:ぜざぎろぬ , S:わだぴぽチェ -->
            <!-- L -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::Z, KeyCode::Z, KeyCode::E,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::X, KeyCode::Z, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::C, KeyCode::G, KeyCode::I,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::V, KeyCode::R, KeyCode::O,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::B, KeyCode::N, KeyCode::U,                 KeyCode::VK_NONE</autogen>
            <!-- S -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::N, KeyCode::W, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::M, KeyCode::D, KeyCode::A,                 KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::COMMA, KeyCode::P, KeyCode::I,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::DOT, KeyCode::P, KeyCode::O,               KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::SLASH, KeyCode::T, KeyCode::Y, KeyCode::E, KeyCode::VK_NONE</autogen>

            <!-- 拗音 -->
            <!-- 2段目(I) - ヒュシュショキュチュ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Q, KeyCode::H, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::W, KeyCode::S, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::E, KeyCode::S, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::R, KeyCode::K, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::T, KeyCode::T, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 3段目(I) - ヒョ[][]キョチョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::A, KeyCode::H, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::F, KeyCode::K, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::G, KeyCode::T, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 4段目(I) - ヒャ[]シャキャチャ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::Z, KeyCode::H, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::C, KeyCode::S, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::V, KeyCode::K, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::B, KeyCode::T, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

            <!-- 2段目(O) - リュジュジョギュニュ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Q, KeyCode::R, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::W, KeyCode::J, KeyCode::U,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::E, KeyCode::J, KeyCode::O,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::R, KeyCode::G, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::T, KeyCode::N, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>

            <!-- 3段目(O) - リョ[][]ギョニョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::A, KeyCode::R, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::F, KeyCode::G, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::G, KeyCode::N, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>

            <!-- 4段目(O) - リャ[]ジャギャニャ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::Z, KeyCode::R, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <!-- [] -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::C, KeyCode::J, KeyCode::A,             KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::V, KeyCode::G, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::B, KeyCode::N, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>

            <!-- 同手同時押し -->
            <!-- RF/RG -> ・ -->
            <!-- IM によって動作が異なる -->
            <!-- HU -> ／ -->
            <!-- IM によって動作が異なる -->
            <!-- FG -> 「」 & ENTER & 左移動 -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::G, KeyCode::BRACKET_LEFT, KeyCode::BRACKET_RIGHT, KeyCode::RETURN, KeyCode::CURSOR_LEFT,                                KeyCode::VK_NONE</autogen>
            <!-- HJ -> （） & ENTER & 左移動 -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::J, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::KEY_0, ModifierFlag::SHIFT_L, KeyCode::RETURN, KeyCode::CURSOR_LEFT, KeyCode::VK_NONE</autogen>
            <!-- FV/FB -> ！ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::V, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::B, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
            <!-- NJ -> ？ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::N, KeyCode::J, KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>

            <!-- 最上段(1段目) -->
            <!-- K:ぁぃぅぇぉ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_1, KeyCode::X, KeyCode::A,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_2, KeyCode::X, KeyCode::I,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_3, KeyCode::X, KeyCode::U,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_4, KeyCode::X, KeyCode::E,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::KEY_5, KeyCode::X, KeyCode::O,                    KeyCode::VK_NONE</autogen>
            <!-- L:ゃミャミュミョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_2, KeyCode::M, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_3, KeyCode::M, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::KEY_4, KeyCode::M, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <!-- I:ゅビャビュビョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_2, KeyCode::B, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_3, KeyCode::B, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::I, KeyCode::KEY_4, KeyCode::B, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <!-- O:ょピャピュピョ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_1, KeyCode::X, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_2, KeyCode::P, KeyCode::Y, KeyCode::A,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_3, KeyCode::P, KeyCode::Y, KeyCode::U,        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::O, KeyCode::KEY_4, KeyCode::P, KeyCode::Y, KeyCode::O,        KeyCode::VK_NONE</autogen>
            <!-- D:(KEY_7から)，「」；＠ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_7, KeyCode::COMMA, ModifierFlag::OPTION_L,    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_8, KeyCode::BRACKET_LEFT,                     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_9, KeyCode::BRACKET_RIGHT,                    KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::KEY_0, KeyCode::SEMICOLON,                        KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::MINUS, KeyCode::KEY_2, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
            <!-- S:(KEY_7から)．（）：＊ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_7, KeyCode::DOT, ModifierFlag::OPTION_L,      KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_8, KeyCode::KEY_9, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_9, KeyCode::KEY_0, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::KEY_0, KeyCode::SEMICOLON, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::MINUS, KeyCode::KEY_8, ModifierFlag::SHIFT_L,     KeyCode::VK_NONE</autogen>
            <!-- RF/RG -> ・ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::F, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
            <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::G, KeyCode::SLASH,                         KeyCode::VK_NONE</autogen>
            <!-- HU -> ／ -->
            <autogen>__SimultaneousKeyPresses__ KeyCode::H, KeyCode::U, KeyCode::SLASH, ModifierFlag::OPTION_L, KeyCode::VK_NONE</autogen>
          </block>
          <block>
            <inputsource_only>JAPANESE</inputsource_only>
            <modifier_only>
              ModifierFlag::COMMAND_L,
              ModifierFlag::COMMAND_R,
              ModifierFlag::CONTROL_L,
              ModifierFlag::CONTROL_R,
              ModifierFlag::OPTION_L,
              ModifierFlag::OPTION_R
            </modifier_only>
            <!-- If ModifierFlag::FN is pressed, retain keys to convert Fn+jkl to 123 (numpad) -->
            <modifier_not>ModifierFlag::FN</modifier_not>

            <autogen>__KeyToKey__ KeyCode::Q, KeyCode::QUOTE</autogen>
            <autogen>__KeyToKey__ KeyCode::W, KeyCode::COMMA</autogen>
            <autogen>__KeyToKey__ KeyCode::E, KeyCode::DOT</autogen>
            <autogen>__KeyToKey__ KeyCode::R, KeyCode::P</autogen>
            <autogen>__KeyToKey__ KeyCode::T, KeyCode::Y</autogen>
            <autogen>__KeyToKey__ KeyCode::Y, KeyCode::F</autogen>
            <autogen>__KeyToKey__ KeyCode::U, KeyCode::G</autogen>
            <autogen>__KeyToKey__ KeyCode::I, KeyCode::C</autogen>
            <autogen>__KeyToKey__ KeyCode::O, KeyCode::R</autogen>
            <autogen>__KeyToKey__ KeyCode::P, KeyCode::L</autogen>
            <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::SLASH</autogen>
            <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, KeyCode::EQUAL</autogen>
            <autogen>__KeyToKey__ KeyCode::S, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::D, KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::F, KeyCode::U</autogen>
            <autogen>__KeyToKey__ KeyCode::G, KeyCode::I</autogen>
            <autogen>__KeyToKey__ KeyCode::H, KeyCode::D</autogen>
            <autogen>__KeyToKey__ KeyCode::J, KeyCode::H</autogen>
            <autogen>__KeyToKey__ KeyCode::K, KeyCode::T</autogen>
            <autogen>__KeyToKey__ KeyCode::L, KeyCode::N</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::S</autogen>
            <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::MINUS</autogen>
            <autogen>__KeyToKey__ KeyCode::Z, KeyCode::SEMICOLON</autogen>
            <autogen>__KeyToKey__ KeyCode::X, KeyCode::Q</autogen>
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::J</autogen>
            <autogen>__KeyToKey__ KeyCode::V, KeyCode::K</autogen>
            <autogen>__KeyToKey__ KeyCode::B, KeyCode::X</autogen>
            <autogen>__KeyToKey__ KeyCode::N, KeyCode::B</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::W</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::V</autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::Z</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS, KeyCode::BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::EQUAL, KeyCode::BRACKET_RIGHT</autogen>
          </block>
          <block>
            <inputsource_not>JAPANESE</inputsource_not>
            <!-- If ModifierFlag::FN is pressed, retain keys to convert Fn+jkl to 123 (numpad) -->
            <modifier_not>ModifierFlag::FN</modifier_not>

            <autogen>__KeyToKey__ KeyCode::Q, KeyCode::QUOTE</autogen>
            <autogen>__KeyToKey__ KeyCode::W, KeyCode::COMMA</autogen>
            <autogen>__KeyToKey__ KeyCode::E, KeyCode::DOT</autogen>
            <autogen>__KeyToKey__ KeyCode::R, KeyCode::P</autogen>
            <autogen>__KeyToKey__ KeyCode::T, KeyCode::Y</autogen>
            <autogen>__KeyToKey__ KeyCode::Y, KeyCode::F</autogen>
            <autogen>__KeyToKey__ KeyCode::U, KeyCode::G</autogen>
            <autogen>__KeyToKey__ KeyCode::I, KeyCode::C</autogen>
            <autogen>__KeyToKey__ KeyCode::O, KeyCode::R</autogen>
            <autogen>__KeyToKey__ KeyCode::P, KeyCode::L</autogen>
            <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::SLASH</autogen>
            <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, KeyCode::EQUAL</autogen>
            <autogen>__KeyToKey__ KeyCode::S, KeyCode::O</autogen>
            <autogen>__KeyToKey__ KeyCode::D, KeyCode::E</autogen>
            <autogen>__KeyToKey__ KeyCode::F, KeyCode::U</autogen>
            <autogen>__KeyToKey__ KeyCode::G, KeyCode::I</autogen>
            <autogen>__KeyToKey__ KeyCode::H, KeyCode::D</autogen>
            <autogen>__KeyToKey__ KeyCode::J, KeyCode::H</autogen>
            <autogen>__KeyToKey__ KeyCode::K, KeyCode::T</autogen>
            <autogen>__KeyToKey__ KeyCode::L, KeyCode::N</autogen>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::S</autogen>
            <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::MINUS</autogen>
            <autogen>__KeyToKey__ KeyCode::Z, KeyCode::SEMICOLON</autogen>
            <autogen>__KeyToKey__ KeyCode::X, KeyCode::Q</autogen>
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::J</autogen>
            <autogen>__KeyToKey__ KeyCode::V, KeyCode::K</autogen>
            <autogen>__KeyToKey__ KeyCode::B, KeyCode::X</autogen>
            <autogen>__KeyToKey__ KeyCode::N, KeyCode::B</autogen>
            <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::W</autogen>
            <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::V</autogen>
            <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::Z</autogen>
            <autogen>__KeyToKey__ KeyCode::MINUS, KeyCode::BRACKET_LEFT</autogen>
            <autogen>__KeyToKey__ KeyCode::EQUAL, KeyCode::BRACKET_RIGHT</autogen>
          </block>
        </item>
      </item>
      <item>
        <name>Asuka Kana Hairetsu</name>
        <appendix>飛鳥カナ配列(2010-07-13版)</appendix>
        <item>
          <name>＜ローマ字モード＞ 左シフト＝スペース, 右シフト＝かな</name>
          <appendix>数字段のシフト面は未定義</appendix>
          <identifier>remap.jis_asuka_roman_space_kana</identifier>
          <inputsource_only>JAPANESE</inputsource_only>
          <!--
              ======================================================================
              全体的な注意点

              母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
              キーが離されるまでそのキーが解放されない。

              そのため、たとえば以下の順番でキーを入力した場合、
              実際には (2) の KeyDown U が IM に無視されてしまう。
              （キーイベント自体は出力されるが、IM 側で破棄される）

              (1) KeyDown D (→ KeyDown U)
              (2) KeyDown H (→ KeyDown Y, KeyUp Y, KeyDown U, KeyUp U)
              (3) KeyUp   H (→ NOP)
              (4) KeyUp   D (→ KeyUp U)

              こうなると「うy」という状態で止まってしまい、
              本来入力したい「うゆ」とならない。

              そこで、KeyToKey の末尾に KeyCode::VK_NONE を追加することで、
              キーを押したときに KeyDown と KeyUp イベントを出力するようにする。

              (1) KeyDown D (→ KeyDown U, KeyUp U)
              (2) KeyDown H (→ KeyDown Y, KeyUp Y, KeyDown U, KeyUp U)
              (3) KeyUp   H (→ NOP)
              (4) KeyUp   D (→ NOP)
              ======================================================================
            -->

          <!-- SpaceとKanaをモディファイアキーに(親指から先に打鍵した場合のみ連続シフト可能に) -->
          <autogen>__KeyOverlaidModifier__ KeyCode::SPACE,  KeyCode::VK_MODIFIER_EXTRA1, KeyCode::SPACE</autogen>
          <autogen>__KeyOverlaidModifier__ KeyCode::JIS_KANA, KeyCode::VK_MODIFIER_EXTRA2, KeyCode::JIS_KANA</autogen>

          <!-- Deleteを右親指シフトの右に -->
          <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::DELETE</autogen>

          <!-- シフトなし上段(「ー入び％消逃とはぽ」左) -->
          <autogen>__KeyToKey__ KeyCode::Q,                ModifierFlag::NONE, KeyCode::JIS_BRACKET_LEFT,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::W,                ModifierFlag::NONE, KeyCode::MINUS,                       KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::E,                ModifierFlag::NONE, KeyCode::ENTER,                       KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::R,                ModifierFlag::NONE, KeyCode::B,KeyCode::I,                KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::T,                ModifierFlag::NONE, KeyCode::KEY_5,ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Y,                ModifierFlag::NONE, KeyCode::DELETE,                      KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::U,                ModifierFlag::NONE, KeyCode::ESCAPE,                      KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::I,                ModifierFlag::NONE, KeyCode::T,KeyCode::O,                KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::O,                ModifierFlag::NONE, KeyCode::H,KeyCode::A,                KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::P,                ModifierFlag::NONE, KeyCode::P,KeyCode::O,                KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK,       ModifierFlag::NONE, KeyCode::JIS_BRACKET_RIGHT,           KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE, KeyCode::CURSOR_LEFT,                 KeyCode::VK_NONE</autogen>

          <!-- シフトなし中段(きしうてぎゆんいかたほ・) -->
          <autogen>__KeyToKey__ KeyCode::A,                 ModifierFlag::NONE, KeyCode::K,KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::S,                 ModifierFlag::NONE, KeyCode::S,KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::D,                 ModifierFlag::NONE, KeyCode::U,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F,                 ModifierFlag::NONE, KeyCode::T,KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::G,                 ModifierFlag::NONE, KeyCode::G,KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::H,                 ModifierFlag::NONE, KeyCode::Y,KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::J,                 ModifierFlag::NONE, KeyCode::N,KeyCode::N, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::K,                 ModifierFlag::NONE, KeyCode::I,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::L,                 ModifierFlag::NONE, KeyCode::K,KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON,         ModifierFlag::NONE, KeyCode::T,KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON,         ModifierFlag::NONE, KeyCode::H,KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::NONE, KeyCode::SLASH,        KeyCode::VK_NONE</autogen>

          <!-- シフトなし下段(じちにりぶゃっょゅさ下) -->
          <autogen>__KeyToKey__ KeyCode::Z,              ModifierFlag::NONE, KeyCode::J, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::X,              ModifierFlag::NONE, KeyCode::T, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::C,              ModifierFlag::NONE, KeyCode::N, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::V,              ModifierFlag::NONE, KeyCode::R, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::B,              ModifierFlag::NONE, KeyCode::B, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::N,              ModifierFlag::NONE, KeyCode::X, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::M,              ModifierFlag::NONE, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA,          ModifierFlag::NONE, KeyCode::X, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT,            ModifierFlag::NONE, KeyCode::X, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH,          ModifierFlag::NONE, KeyCode::S, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::CURSOR_DOWN,               KeyCode::VK_NONE</autogen>


          <!-- 左シフト上段(ぃひけぁぅヴ！よふへ）右) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::Q,                ModifierFlag::NONE,                      KeyCode::X,KeyCode::I,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::Q,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::I,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::W,                ModifierFlag::NONE,                      KeyCode::H,KeyCode::I,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::W,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::H,KeyCode::I,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::E,                ModifierFlag::NONE,                      KeyCode::K,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::E,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::K,KeyCode::E,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::R,                ModifierFlag::NONE,                      KeyCode::X,KeyCode::A,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::R,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::A,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::T,                ModifierFlag::NONE,                      KeyCode::X,KeyCode::U,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::T,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::U,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::Y,                ModifierFlag::NONE,                      KeyCode::V,KeyCode::U,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::Y,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::V,KeyCode::U,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::U,                ModifierFlag::NONE,                      KeyCode::KEY_5,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::U,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::KEY_5,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::I,                ModifierFlag::NONE,                      KeyCode::Y,KeyCode::O,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::I,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::Y,KeyCode::O,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::O,                ModifierFlag::NONE,                      KeyCode::H,KeyCode::U,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::O,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::H,KeyCode::U,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::P,                ModifierFlag::NONE,                      KeyCode::H,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::P,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::H,KeyCode::E,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::JIS_ATMARK,       ModifierFlag::NONE,                      KeyCode::KEY_9,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_ATMARK,       ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::KEY_9,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE,                      KeyCode::CURSOR_RIGHT,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_BRACKET_LEFT, ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::CURSOR_RIGHT,                KeyCode::VK_NONE </autogen>

          <!-- 左シフト中段(だあがばぇずるすまでげ家) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::A,                 ModifierFlag::NONE,                      KeyCode::D, KeyCode::A, KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::A,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::D, KeyCode::A, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::S,                 ModifierFlag::NONE,                      KeyCode::A,             KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::S,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::A,             KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::D,                 ModifierFlag::NONE,                      KeyCode::G,KeyCode::A,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::D,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::G,KeyCode::A,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::F,                 ModifierFlag::NONE,                      KeyCode::B,KeyCode::A,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::F,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::B,KeyCode::A,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::G,                 ModifierFlag::NONE,                      KeyCode::X,KeyCode::E,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::G,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::E,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::H,                 ModifierFlag::NONE,                      KeyCode::Z,KeyCode::U,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::H,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::Z,KeyCode::U,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::J,                 ModifierFlag::NONE,                      KeyCode::R,KeyCode::U,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::J,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::R,KeyCode::U,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::K,                 ModifierFlag::NONE,                      KeyCode::S,KeyCode::U,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::K,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::S,KeyCode::U,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::L,                 ModifierFlag::NONE,                      KeyCode::M,KeyCode::A,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::L,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::M,KeyCode::A,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::SEMICOLON,         ModifierFlag::NONE,                      KeyCode::D,KeyCode::E,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::SEMICOLON,         ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::D,KeyCode::E,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::JIS_COLON,         ModifierFlag::NONE,                      KeyCode::G,KeyCode::E,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_COLON,         ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::G,KeyCode::E,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::NONE,                      KeyCode::HOME,          KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::HOME,          KeyCode::VK_NONE            </autogen>

          <!-- 左シフト下段(ぜねせぴぉやえ、。？上) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::Z,              ModifierFlag::NONE,                      KeyCode::Z,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::Z,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::Z,KeyCode::E,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::X,              ModifierFlag::NONE,                      KeyCode::N,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::X,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::N,KeyCode::E,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::C,              ModifierFlag::NONE,                      KeyCode::S,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::C,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::S,KeyCode::E,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::V,              ModifierFlag::NONE,                      KeyCode::P,KeyCode::I,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::V,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::P,KeyCode::I,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::B,              ModifierFlag::NONE,                      KeyCode::X,KeyCode::O,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::B,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::O,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::N,              ModifierFlag::NONE,                      KeyCode::Y,KeyCode::A,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::N,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::Y,KeyCode::A,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::M,              ModifierFlag::NONE,                      KeyCode::E,                           KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::M,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::E,                           KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::COMMA,          ModifierFlag::NONE,                      KeyCode::COMMA,                       KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::COMMA,          ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::COMMA,                       KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::DOT,            ModifierFlag::NONE,                      KeyCode::DOT,                         KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::DOT,            ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::DOT,                         KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::SLASH,          ModifierFlag::NONE,                      KeyCode::SLASH,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::SLASH,          ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::SLASH,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE,                      KeyCode::CURSOR_UP,                   KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_UNDERSCORE, ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::CURSOR_UP,                   KeyCode::VK_NONE            </autogen>

          <!-- 右シフト上段(（べれぺ〜ぢぬどめぞご前) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::Q,                ModifierFlag::NONE,                      KeyCode::KEY_8,ModifierFlag::SHIFT_L,   KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::Q,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::KEY_8,ModifierFlag::SHIFT_L,   KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::W,                ModifierFlag::NONE,                      KeyCode::B,KeyCode::E,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::W,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::B,KeyCode::E,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::E,                ModifierFlag::NONE,                      KeyCode::R,KeyCode::E,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::E,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::R,KeyCode::E,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::R,                ModifierFlag::NONE,                      KeyCode::P,KeyCode::E,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::R,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::P,KeyCode::E,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::T,                ModifierFlag::NONE,                      KeyCode::JIS_HAT,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::T,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::JIS_HAT,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::Y,                ModifierFlag::NONE,                      KeyCode::D,KeyCode::I,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::Y,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::D,KeyCode::I,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::U,                ModifierFlag::NONE,                      KeyCode::N,KeyCode::U,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::U,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::N,KeyCode::U,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::I,                ModifierFlag::NONE,                      KeyCode::D,KeyCode::O,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::I,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::D,KeyCode::O,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::O,                ModifierFlag::NONE,                      KeyCode::M,KeyCode::E,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::O,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::M,KeyCode::E,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::P,                ModifierFlag::NONE,                      KeyCode::Z,KeyCode::O,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::P,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::Z,KeyCode::O,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::JIS_ATMARK,       ModifierFlag::NONE,                      KeyCode::G,KeyCode::O,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_ATMARK,       ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::G,KeyCode::O,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE,                      KeyCode::PAGEUP,                        KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_BRACKET_LEFT, ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::PAGEUP,                        KeyCode::VK_NONE            </autogen>


          <!-- 右シフト中段(わおならぷづくのこそろ終) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::A,                 ModifierFlag::NONE,                      KeyCode::W,KeyCode::A, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::A,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::W,KeyCode::A, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::S,                 ModifierFlag::NONE,                      KeyCode::O,            KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::S,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::O,            KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::D,                 ModifierFlag::NONE,                      KeyCode::N,KeyCode::A, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::D,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::N,KeyCode::A, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::F,                 ModifierFlag::NONE,                      KeyCode::R,KeyCode::A, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::F,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::R,KeyCode::A, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::G,                 ModifierFlag::NONE,                      KeyCode::P,KeyCode::U, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::G,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::P,KeyCode::U, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::H,                 ModifierFlag::NONE,                      KeyCode::D,KeyCode::U, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::H,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::D,KeyCode::U, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::J,                 ModifierFlag::NONE,                      KeyCode::K,KeyCode::U, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::J,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::K,KeyCode::U, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::K,                 ModifierFlag::NONE,                      KeyCode::N,KeyCode::O, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::K,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::N,KeyCode::O, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::L,                 ModifierFlag::NONE,                      KeyCode::K,KeyCode::O, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::L,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::K,KeyCode::O, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::SEMICOLON,         ModifierFlag::NONE,                      KeyCode::S,KeyCode::O, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::SEMICOLON,         ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::S,KeyCode::O, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::JIS_COLON,         ModifierFlag::NONE,                      KeyCode::R,KeyCode::O, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_COLON,         ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::R,KeyCode::O, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::NONE,                      KeyCode::END,          KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::END,          KeyCode::VK_NONE            </autogen>

          <!-- 右シフト下段(ぱぐみざ＊むをつもぼ次) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::Z,              ModifierFlag::NONE,                      KeyCode::P,KeyCode::A,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::Z,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::P,KeyCode::A,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::X,              ModifierFlag::NONE,                      KeyCode::G,KeyCode::U,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::X,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::G,KeyCode::U,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::C,              ModifierFlag::NONE,                      KeyCode::M,KeyCode::I,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::C,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::M,KeyCode::I,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::V,              ModifierFlag::NONE,                      KeyCode::Z,KeyCode::A,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::V,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::Z,KeyCode::A,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::B,              ModifierFlag::NONE,                      KeyCode::JIS_COLON,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::B,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::JIS_COLON,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::N,              ModifierFlag::NONE,                      KeyCode::M,KeyCode::U,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::N,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::M,KeyCode::U,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::M,              ModifierFlag::NONE,                      KeyCode::W,KeyCode::O,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::M,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::W,KeyCode::O,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::COMMA,          ModifierFlag::NONE,                      KeyCode::T,KeyCode::U,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::COMMA,          ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::T,KeyCode::U,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::DOT,            ModifierFlag::NONE,                      KeyCode::M,KeyCode::O,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::DOT,            ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::M,KeyCode::O,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::SLASH,          ModifierFlag::NONE,                      KeyCode::B,KeyCode::O,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::SLASH,          ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::B,KeyCode::O,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE,                      KeyCode::PAGEDOWN,                        KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_UNDERSCORE, ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::PAGEDOWN,                        KeyCode::VK_NONE            </autogen>
        </item>
        <item>
          <name>＜ローマ字モード＞ 左シフト＝英数, 右シフト＝スペース</name>
          <appendix>数字段のシフト面は未定義</appendix>
          <identifier>remap.jis_asuka_roman_eisuu_space</identifier>
          <inputsource_only>JAPANESE</inputsource_only>
          <!--
              ======================================================================
              全体的な注意点

              母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
              キーが離されるまでそのキーが解放されない。

              そのため、たとえば以下の順番でキーを入力した場合、
              実際には (2) の KeyDown U が IM に無視されてしまう。
              （キーイベント自体は出力されるが、IM 側で破棄される）

              (1) KeyDown D (→ KeyDown U)
              (2) KeyDown H (→ KeyDown Y, KeyUp Y, KeyDown U, KeyUp U)
              (3) KeyUp   H (→ NOP)
              (4) KeyUp   D (→ KeyUp U)

              こうなると「うy」という状態で止まってしまい、
              本来入力したい「うゆ」とならない。

              そこで、KeyToKey の末尾に KeyCode::VK_NONE を追加することで、
              キーを押したときに KeyDown と KeyUp イベントを出力するようにする。

              (1) KeyDown D (→ KeyDown U, KeyUp U)
              (2) KeyDown H (→ KeyDown Y, KeyUp Y, KeyDown U, KeyUp U)
              (3) KeyUp   H (→ NOP)
              (4) KeyUp   D (→ NOP)
              ======================================================================
            -->

          <!-- SpaceとKanaをモディファイアキーに(親指から先に打鍵した場合のみ連続シフト可能に) -->
          <autogen>__KeyOverlaidModifier__ KeyCode::JIS_EISUU,  KeyCode::VK_MODIFIER_EXTRA1, KeyCode::JIS_EISUU</autogen>
          <autogen>__KeyOverlaidModifier__ KeyCode::SPACE, KeyCode::VK_MODIFIER_EXTRA2, KeyCode::SPACE</autogen>

          <!-- Deleteを右親指シフトの右に -->
          <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::DELETE</autogen>

          <!-- シフトなし上段(「ー入び％消逃とはぽ」左) -->
          <autogen>__KeyToKey__ KeyCode::Q,                ModifierFlag::NONE, KeyCode::JIS_BRACKET_LEFT,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::W,                ModifierFlag::NONE, KeyCode::MINUS,                       KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::E,                ModifierFlag::NONE, KeyCode::ENTER,                       KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::R,                ModifierFlag::NONE, KeyCode::B,KeyCode::I,                KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::T,                ModifierFlag::NONE, KeyCode::KEY_5,ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Y,                ModifierFlag::NONE, KeyCode::DELETE,                      KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::U,                ModifierFlag::NONE, KeyCode::ESCAPE,                      KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::I,                ModifierFlag::NONE, KeyCode::T,KeyCode::O,                KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::O,                ModifierFlag::NONE, KeyCode::H,KeyCode::A,                KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::P,                ModifierFlag::NONE, KeyCode::P,KeyCode::O,                KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK,       ModifierFlag::NONE, KeyCode::JIS_BRACKET_RIGHT,           KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE, KeyCode::CURSOR_LEFT,                 KeyCode::VK_NONE</autogen>

          <!-- シフトなし中段(きしうてぎゆんいかたほ・) -->
          <autogen>__KeyToKey__ KeyCode::A,                 ModifierFlag::NONE, KeyCode::K,KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::S,                 ModifierFlag::NONE, KeyCode::S,KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::D,                 ModifierFlag::NONE, KeyCode::U,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F,                 ModifierFlag::NONE, KeyCode::T,KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::G,                 ModifierFlag::NONE, KeyCode::G,KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::H,                 ModifierFlag::NONE, KeyCode::Y,KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::J,                 ModifierFlag::NONE, KeyCode::N,KeyCode::N, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::K,                 ModifierFlag::NONE, KeyCode::I,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::L,                 ModifierFlag::NONE, KeyCode::K,KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON,         ModifierFlag::NONE, KeyCode::T,KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON,         ModifierFlag::NONE, KeyCode::H,KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::NONE, KeyCode::SLASH,        KeyCode::VK_NONE</autogen>

          <!-- シフトなし下段(じちにりぶゃっょゅさ下) -->
          <autogen>__KeyToKey__ KeyCode::Z,              ModifierFlag::NONE, KeyCode::J, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::X,              ModifierFlag::NONE, KeyCode::T, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::C,              ModifierFlag::NONE, KeyCode::N, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::V,              ModifierFlag::NONE, KeyCode::R, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::B,              ModifierFlag::NONE, KeyCode::B, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::N,              ModifierFlag::NONE, KeyCode::X, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::M,              ModifierFlag::NONE, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA,          ModifierFlag::NONE, KeyCode::X, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT,            ModifierFlag::NONE, KeyCode::X, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH,          ModifierFlag::NONE, KeyCode::S, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::CURSOR_DOWN,               KeyCode::VK_NONE</autogen>


          <!-- 左シフト上段(ぃひけぁぅヴ！よふへ）右) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::Q,                ModifierFlag::NONE,                      KeyCode::X,KeyCode::I,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::Q,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::I,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::W,                ModifierFlag::NONE,                      KeyCode::H,KeyCode::I,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::W,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::H,KeyCode::I,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::E,                ModifierFlag::NONE,                      KeyCode::K,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::E,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::K,KeyCode::E,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::R,                ModifierFlag::NONE,                      KeyCode::X,KeyCode::A,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::R,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::A,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::T,                ModifierFlag::NONE,                      KeyCode::X,KeyCode::U,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::T,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::U,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::Y,                ModifierFlag::NONE,                      KeyCode::V,KeyCode::U,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::Y,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::V,KeyCode::U,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::U,                ModifierFlag::NONE,                      KeyCode::KEY_5,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::U,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::KEY_5,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::I,                ModifierFlag::NONE,                      KeyCode::Y,KeyCode::O,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::I,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::Y,KeyCode::O,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::O,                ModifierFlag::NONE,                      KeyCode::H,KeyCode::U,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::O,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::H,KeyCode::U,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::P,                ModifierFlag::NONE,                      KeyCode::H,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::P,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::H,KeyCode::E,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::JIS_ATMARK,       ModifierFlag::NONE,                      KeyCode::KEY_9,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_ATMARK,       ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::KEY_9,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE,                      KeyCode::CURSOR_RIGHT,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_BRACKET_LEFT, ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::CURSOR_RIGHT,                KeyCode::VK_NONE </autogen>

          <!-- 左シフト中段(だあがばぇずるすまでげ家) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::A,                 ModifierFlag::NONE,                      KeyCode::D, KeyCode::A, KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::A,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::D, KeyCode::A, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::S,                 ModifierFlag::NONE,                      KeyCode::A,             KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::S,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::A,             KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::D,                 ModifierFlag::NONE,                      KeyCode::G,KeyCode::A,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::D,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::G,KeyCode::A,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::F,                 ModifierFlag::NONE,                      KeyCode::B,KeyCode::A,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::F,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::B,KeyCode::A,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::G,                 ModifierFlag::NONE,                      KeyCode::X,KeyCode::E,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::G,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::E,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::H,                 ModifierFlag::NONE,                      KeyCode::Z,KeyCode::U,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::H,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::Z,KeyCode::U,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::J,                 ModifierFlag::NONE,                      KeyCode::R,KeyCode::U,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::J,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::R,KeyCode::U,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::K,                 ModifierFlag::NONE,                      KeyCode::S,KeyCode::U,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::K,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::S,KeyCode::U,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::L,                 ModifierFlag::NONE,                      KeyCode::M,KeyCode::A,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::L,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::M,KeyCode::A,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::SEMICOLON,         ModifierFlag::NONE,                      KeyCode::D,KeyCode::E,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::SEMICOLON,         ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::D,KeyCode::E,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::JIS_COLON,         ModifierFlag::NONE,                      KeyCode::G,KeyCode::E,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_COLON,         ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::G,KeyCode::E,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::NONE,                      KeyCode::HOME,          KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::HOME,          KeyCode::VK_NONE            </autogen>

          <!-- 左シフト下段(ぜねせぴぉやえ、。？上) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::Z,              ModifierFlag::NONE,                      KeyCode::Z,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::Z,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::Z,KeyCode::E,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::X,              ModifierFlag::NONE,                      KeyCode::N,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::X,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::N,KeyCode::E,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::C,              ModifierFlag::NONE,                      KeyCode::S,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::C,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::S,KeyCode::E,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::V,              ModifierFlag::NONE,                      KeyCode::P,KeyCode::I,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::V,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::P,KeyCode::I,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::B,              ModifierFlag::NONE,                      KeyCode::X,KeyCode::O,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::B,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::O,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::N,              ModifierFlag::NONE,                      KeyCode::Y,KeyCode::A,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::N,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::Y,KeyCode::A,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::M,              ModifierFlag::NONE,                      KeyCode::E,                           KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::M,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::E,                           KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::COMMA,          ModifierFlag::NONE,                      KeyCode::COMMA,                       KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::COMMA,          ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::COMMA,                       KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::DOT,            ModifierFlag::NONE,                      KeyCode::DOT,                         KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::DOT,            ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::DOT,                         KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::SLASH,          ModifierFlag::NONE,                      KeyCode::SLASH,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::SLASH,          ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::SLASH,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE,                      KeyCode::CURSOR_UP,                   KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_UNDERSCORE, ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::CURSOR_UP,                   KeyCode::VK_NONE            </autogen>

          <!-- 右シフト上段(（べれぺ〜ぢぬどめぞご前) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::Q,                ModifierFlag::NONE,                      KeyCode::KEY_8,ModifierFlag::SHIFT_L,   KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::Q,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::KEY_8,ModifierFlag::SHIFT_L,   KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::W,                ModifierFlag::NONE,                      KeyCode::B,KeyCode::E,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::W,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::B,KeyCode::E,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::E,                ModifierFlag::NONE,                      KeyCode::R,KeyCode::E,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::E,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::R,KeyCode::E,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::R,                ModifierFlag::NONE,                      KeyCode::P,KeyCode::E,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::R,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::P,KeyCode::E,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::T,                ModifierFlag::NONE,                      KeyCode::JIS_HAT,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::T,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::JIS_HAT,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::Y,                ModifierFlag::NONE,                      KeyCode::D,KeyCode::I,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::Y,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::D,KeyCode::I,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::U,                ModifierFlag::NONE,                      KeyCode::N,KeyCode::U,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::U,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::N,KeyCode::U,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::I,                ModifierFlag::NONE,                      KeyCode::D,KeyCode::O,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::I,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::D,KeyCode::O,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::O,                ModifierFlag::NONE,                      KeyCode::M,KeyCode::E,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::O,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::M,KeyCode::E,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::P,                ModifierFlag::NONE,                      KeyCode::Z,KeyCode::O,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::P,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::Z,KeyCode::O,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::JIS_ATMARK,       ModifierFlag::NONE,                      KeyCode::G,KeyCode::O,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_ATMARK,       ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::G,KeyCode::O,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE,                      KeyCode::PAGEUP,                        KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_BRACKET_LEFT, ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::PAGEUP,                        KeyCode::VK_NONE            </autogen>


          <!-- 右シフト中段(わおならぷづくのこそろ終) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::A,                 ModifierFlag::NONE,                      KeyCode::W,KeyCode::A, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::A,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::W,KeyCode::A, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::S,                 ModifierFlag::NONE,                      KeyCode::O,            KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::S,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::O,            KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::D,                 ModifierFlag::NONE,                      KeyCode::N,KeyCode::A, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::D,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::N,KeyCode::A, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::F,                 ModifierFlag::NONE,                      KeyCode::R,KeyCode::A, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::F,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::R,KeyCode::A, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::G,                 ModifierFlag::NONE,                      KeyCode::P,KeyCode::U, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::G,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::P,KeyCode::U, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::H,                 ModifierFlag::NONE,                      KeyCode::D,KeyCode::U, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::H,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::D,KeyCode::U, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::J,                 ModifierFlag::NONE,                      KeyCode::K,KeyCode::U, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::J,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::K,KeyCode::U, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::K,                 ModifierFlag::NONE,                      KeyCode::N,KeyCode::O, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::K,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::N,KeyCode::O, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::L,                 ModifierFlag::NONE,                      KeyCode::K,KeyCode::O, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::L,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::K,KeyCode::O, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::SEMICOLON,         ModifierFlag::NONE,                      KeyCode::S,KeyCode::O, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::SEMICOLON,         ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::S,KeyCode::O, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::JIS_COLON,         ModifierFlag::NONE,                      KeyCode::R,KeyCode::O, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_COLON,         ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::R,KeyCode::O, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::NONE,                      KeyCode::END,          KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::END,          KeyCode::VK_NONE            </autogen>

          <!-- 右シフト下段(ぱぐみざ＊むをつもぼ次) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::Z,              ModifierFlag::NONE,                      KeyCode::P,KeyCode::A,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::Z,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::P,KeyCode::A,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::X,              ModifierFlag::NONE,                      KeyCode::G,KeyCode::U,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::X,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::G,KeyCode::U,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::C,              ModifierFlag::NONE,                      KeyCode::M,KeyCode::I,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::C,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::M,KeyCode::I,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::V,              ModifierFlag::NONE,                      KeyCode::Z,KeyCode::A,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::V,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::Z,KeyCode::A,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::B,              ModifierFlag::NONE,                      KeyCode::JIS_COLON,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::B,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::JIS_COLON,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::N,              ModifierFlag::NONE,                      KeyCode::M,KeyCode::U,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::N,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::M,KeyCode::U,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::M,              ModifierFlag::NONE,                      KeyCode::W,KeyCode::O,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::M,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::W,KeyCode::O,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::COMMA,          ModifierFlag::NONE,                      KeyCode::T,KeyCode::U,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::COMMA,          ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::T,KeyCode::U,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::DOT,            ModifierFlag::NONE,                      KeyCode::M,KeyCode::O,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::DOT,            ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::M,KeyCode::O,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::SLASH,          ModifierFlag::NONE,                      KeyCode::B,KeyCode::O,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::SLASH,          ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::B,KeyCode::O,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SPACE,KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE,                      KeyCode::PAGEDOWN,                        KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_UNDERSCORE, ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::PAGEDOWN,                        KeyCode::VK_NONE            </autogen>
        </item>
        <item>
          <name>＜ローマ字モード＞ 左シフト＝英数, 右シフト＝かな</name>
          <appendix>数字段のシフト面は未定義</appendix>
          <identifier>remap.jis_asuka_roman_eisuu_kana</identifier>
          <!--
              ======================================================================
              全体的な注意点

              母音のキー（あいうえお）や記号のキーなどについては通常の KeyToKey だと、
              キーが離されるまでそのキーが解放されない。

              そのため、たとえば以下の順番でキーを入力した場合、
              実際には (2) の KeyDown U が IM に無視されてしまう。
              （キーイベント自体は出力されるが、IM 側で破棄される）

              (1) KeyDown D (→ KeyDown U)
              (2) KeyDown H (→ KeyDown Y, KeyUp Y, KeyDown U, KeyUp U)
              (3) KeyUp   H (→ NOP)
              (4) KeyUp   D (→ KeyUp U)

              こうなると「うy」という状態で止まってしまい、
              本来入力したい「うゆ」とならない。

              そこで、KeyToKey の末尾に KeyCode::VK_NONE を追加することで、
              キーを押したときに KeyDown と KeyUp イベントを出力するようにする。

              (1) KeyDown D (→ KeyDown U, KeyUp U)
              (2) KeyDown H (→ KeyDown Y, KeyUp Y, KeyDown U, KeyUp U)
              (3) KeyUp   H (→ NOP)
              (4) KeyUp   D (→ NOP)
              ======================================================================
            -->

          <!-- SpaceとKanaをモディファイアキーに(親指から先に打鍵した場合のみ連続シフト可能に) -->
          <autogen>__KeyOverlaidModifier__ KeyCode::JIS_EISUU,  KeyCode::VK_MODIFIER_EXTRA1, KeyCode::JIS_EISUU</autogen>
          <autogen>__KeyOverlaidModifier__ KeyCode::JIS_KANA, KeyCode::VK_MODIFIER_EXTRA2, KeyCode::JIS_KANA</autogen>

          <!-- Deleteを右親指シフトの右に -->
          <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::DELETE</autogen>

          <!-- シフトなし上段(「ー入び％消逃とはぽ」左) -->
          <autogen>__KeyToKey__ KeyCode::Q,                ModifierFlag::NONE, KeyCode::JIS_BRACKET_LEFT,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::W,                ModifierFlag::NONE, KeyCode::MINUS,                       KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::E,                ModifierFlag::NONE, KeyCode::ENTER,                       KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::R,                ModifierFlag::NONE, KeyCode::B,KeyCode::I,                KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::T,                ModifierFlag::NONE, KeyCode::KEY_5,ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Y,                ModifierFlag::NONE, KeyCode::DELETE,                      KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::U,                ModifierFlag::NONE, KeyCode::ESCAPE,                      KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::I,                ModifierFlag::NONE, KeyCode::T,KeyCode::O,                KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::O,                ModifierFlag::NONE, KeyCode::H,KeyCode::A,                KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::P,                ModifierFlag::NONE, KeyCode::P,KeyCode::O,                KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK,       ModifierFlag::NONE, KeyCode::JIS_BRACKET_RIGHT,           KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE, KeyCode::CURSOR_LEFT,                 KeyCode::VK_NONE</autogen>

          <!-- シフトなし中段(きしうてぎゆんいかたほ・) -->
          <autogen>__KeyToKey__ KeyCode::A,                 ModifierFlag::NONE, KeyCode::K,KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::S,                 ModifierFlag::NONE, KeyCode::S,KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::D,                 ModifierFlag::NONE, KeyCode::U,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F,                 ModifierFlag::NONE, KeyCode::T,KeyCode::E, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::G,                 ModifierFlag::NONE, KeyCode::G,KeyCode::I, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::H,                 ModifierFlag::NONE, KeyCode::Y,KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::J,                 ModifierFlag::NONE, KeyCode::N,KeyCode::N, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::K,                 ModifierFlag::NONE, KeyCode::I,            KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::L,                 ModifierFlag::NONE, KeyCode::K,KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON,         ModifierFlag::NONE, KeyCode::T,KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON,         ModifierFlag::NONE, KeyCode::H,KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::NONE, KeyCode::SLASH,        KeyCode::VK_NONE</autogen>

          <!-- シフトなし下段(じちにりぶゃっょゅさ下) -->
          <autogen>__KeyToKey__ KeyCode::Z,              ModifierFlag::NONE, KeyCode::J, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::X,              ModifierFlag::NONE, KeyCode::T, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::C,              ModifierFlag::NONE, KeyCode::N, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::V,              ModifierFlag::NONE, KeyCode::R, KeyCode::I,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::B,              ModifierFlag::NONE, KeyCode::B, KeyCode::U,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::N,              ModifierFlag::NONE, KeyCode::X, KeyCode::Y, KeyCode::A, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::M,              ModifierFlag::NONE, KeyCode::X, KeyCode::T, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA,          ModifierFlag::NONE, KeyCode::X, KeyCode::Y, KeyCode::O, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT,            ModifierFlag::NONE, KeyCode::X, KeyCode::Y, KeyCode::U, KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH,          ModifierFlag::NONE, KeyCode::S, KeyCode::A,             KeyCode::VK_NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::CURSOR_DOWN,               KeyCode::VK_NONE</autogen>


          <!-- 左シフト上段(ぃひけぁぅヴ！よふへ）右) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::Q,                ModifierFlag::NONE,                      KeyCode::X,KeyCode::I,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::Q,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::I,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::W,                ModifierFlag::NONE,                      KeyCode::H,KeyCode::I,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::W,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::H,KeyCode::I,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::E,                ModifierFlag::NONE,                      KeyCode::K,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::E,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::K,KeyCode::E,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::R,                ModifierFlag::NONE,                      KeyCode::X,KeyCode::A,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::R,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::A,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::T,                ModifierFlag::NONE,                      KeyCode::X,KeyCode::U,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::T,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::U,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::Y,                ModifierFlag::NONE,                      KeyCode::V,KeyCode::U,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::Y,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::V,KeyCode::U,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::U,                ModifierFlag::NONE,                      KeyCode::KEY_5,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::U,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::KEY_5,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::I,                ModifierFlag::NONE,                      KeyCode::Y,KeyCode::O,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::I,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::Y,KeyCode::O,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::O,                ModifierFlag::NONE,                      KeyCode::H,KeyCode::U,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::O,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::H,KeyCode::U,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::P,                ModifierFlag::NONE,                      KeyCode::H,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::P,                ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::H,KeyCode::E,                KeyCode::VK_NONE </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::JIS_ATMARK,       ModifierFlag::NONE,                      KeyCode::KEY_9,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_ATMARK,       ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::KEY_9,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE,                      KeyCode::CURSOR_RIGHT,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_BRACKET_LEFT, ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::CURSOR_RIGHT,                KeyCode::VK_NONE </autogen>

          <!-- 左シフト中段(だあがばぇずるすまでげ家) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::A,                 ModifierFlag::NONE,                      KeyCode::D, KeyCode::A, KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::A,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::D, KeyCode::A, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::S,                 ModifierFlag::NONE,                      KeyCode::A,             KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::S,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::A,             KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::D,                 ModifierFlag::NONE,                      KeyCode::G,KeyCode::A,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::D,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::G,KeyCode::A,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::F,                 ModifierFlag::NONE,                      KeyCode::B,KeyCode::A,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::F,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::B,KeyCode::A,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::G,                 ModifierFlag::NONE,                      KeyCode::X,KeyCode::E,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::G,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::E,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::H,                 ModifierFlag::NONE,                      KeyCode::Z,KeyCode::U,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::H,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::Z,KeyCode::U,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::J,                 ModifierFlag::NONE,                      KeyCode::R,KeyCode::U,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::J,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::R,KeyCode::U,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::K,                 ModifierFlag::NONE,                      KeyCode::S,KeyCode::U,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::K,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::S,KeyCode::U,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::L,                 ModifierFlag::NONE,                      KeyCode::M,KeyCode::A,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::L,                 ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::M,KeyCode::A,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::SEMICOLON,         ModifierFlag::NONE,                      KeyCode::D,KeyCode::E,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::SEMICOLON,         ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::D,KeyCode::E,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::JIS_COLON,         ModifierFlag::NONE,                      KeyCode::G,KeyCode::E,  KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_COLON,         ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::G,KeyCode::E,  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::NONE,                      KeyCode::HOME,          KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::HOME,          KeyCode::VK_NONE            </autogen>

          <!-- 左シフト下段(ぜねせぴぉやえ、。？上) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::Z,              ModifierFlag::NONE,                      KeyCode::Z,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::Z,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::Z,KeyCode::E,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::X,              ModifierFlag::NONE,                      KeyCode::N,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::X,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::N,KeyCode::E,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::C,              ModifierFlag::NONE,                      KeyCode::S,KeyCode::E,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::C,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::S,KeyCode::E,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::V,              ModifierFlag::NONE,                      KeyCode::P,KeyCode::I,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::V,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::P,KeyCode::I,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::B,              ModifierFlag::NONE,                      KeyCode::X,KeyCode::O,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::B,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::X,KeyCode::O,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::N,              ModifierFlag::NONE,                      KeyCode::Y,KeyCode::A,                KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::N,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::Y,KeyCode::A,                KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::M,              ModifierFlag::NONE,                      KeyCode::E,                           KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::M,              ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::E,                           KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::COMMA,          ModifierFlag::NONE,                      KeyCode::COMMA,                       KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::COMMA,          ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::COMMA,                       KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::DOT,            ModifierFlag::NONE,                      KeyCode::DOT,                         KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::DOT,            ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::DOT,                         KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::SLASH,          ModifierFlag::NONE,                      KeyCode::SLASH,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::SLASH,          ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::SLASH,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU,KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE,                      KeyCode::CURSOR_UP,                   KeyCode::VK_MODIFIER_EXTRA1 </autogen>
          <autogen>__KeyToKey__                          KeyCode::JIS_UNDERSCORE, ModifierFlag::EXTRA1|ModifierFlag::NONE, KeyCode::CURSOR_UP,                   KeyCode::VK_NONE            </autogen>

          <!-- 右シフト上段(（べれぺ〜ぢぬどめぞご前) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::Q,                ModifierFlag::NONE,                      KeyCode::KEY_8,ModifierFlag::SHIFT_L,   KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::Q,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::KEY_8,ModifierFlag::SHIFT_L,   KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::W,                ModifierFlag::NONE,                      KeyCode::B,KeyCode::E,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::W,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::B,KeyCode::E,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::E,                ModifierFlag::NONE,                      KeyCode::R,KeyCode::E,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::E,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::R,KeyCode::E,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::R,                ModifierFlag::NONE,                      KeyCode::P,KeyCode::E,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::R,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::P,KeyCode::E,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::T,                ModifierFlag::NONE,                      KeyCode::JIS_HAT,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::T,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::JIS_HAT,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::Y,                ModifierFlag::NONE,                      KeyCode::D,KeyCode::I,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::Y,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::D,KeyCode::I,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::U,                ModifierFlag::NONE,                      KeyCode::N,KeyCode::U,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::U,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::N,KeyCode::U,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::I,                ModifierFlag::NONE,                      KeyCode::D,KeyCode::O,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::I,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::D,KeyCode::O,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::O,                ModifierFlag::NONE,                      KeyCode::M,KeyCode::E,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::O,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::M,KeyCode::E,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::P,                ModifierFlag::NONE,                      KeyCode::Z,KeyCode::O,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::P,                ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::Z,KeyCode::O,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::JIS_ATMARK,       ModifierFlag::NONE,                      KeyCode::G,KeyCode::O,                  KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_ATMARK,       ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::G,KeyCode::O,                  KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE,                      KeyCode::PAGEUP,                        KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_BRACKET_LEFT, ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::PAGEUP,                        KeyCode::VK_NONE            </autogen>


          <!-- 右シフト中段(わおならぷづくのこそろ終) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::A,                 ModifierFlag::NONE,                      KeyCode::W,KeyCode::A, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::A,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::W,KeyCode::A, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::S,                 ModifierFlag::NONE,                      KeyCode::O,            KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::S,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::O,            KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::D,                 ModifierFlag::NONE,                      KeyCode::N,KeyCode::A, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::D,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::N,KeyCode::A, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::F,                 ModifierFlag::NONE,                      KeyCode::R,KeyCode::A, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::F,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::R,KeyCode::A, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::G,                 ModifierFlag::NONE,                      KeyCode::P,KeyCode::U, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::G,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::P,KeyCode::U, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::H,                 ModifierFlag::NONE,                      KeyCode::D,KeyCode::U, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::H,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::D,KeyCode::U, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::J,                 ModifierFlag::NONE,                      KeyCode::K,KeyCode::U, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::J,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::K,KeyCode::U, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::K,                 ModifierFlag::NONE,                      KeyCode::N,KeyCode::O, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::K,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::N,KeyCode::O, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::L,                 ModifierFlag::NONE,                      KeyCode::K,KeyCode::O, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::L,                 ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::K,KeyCode::O, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::SEMICOLON,         ModifierFlag::NONE,                      KeyCode::S,KeyCode::O, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::SEMICOLON,         ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::S,KeyCode::O, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::JIS_COLON,         ModifierFlag::NONE,                      KeyCode::R,KeyCode::O, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_COLON,         ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::R,KeyCode::O, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::NONE,                      KeyCode::END,          KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::END,          KeyCode::VK_NONE            </autogen>

          <!-- 右シフト下段(ぱぐみざ＊むをつもぼ次) -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::Z,              ModifierFlag::NONE,                      KeyCode::P,KeyCode::A,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::Z,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::P,KeyCode::A,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::X,              ModifierFlag::NONE,                      KeyCode::G,KeyCode::U,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::X,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::G,KeyCode::U,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::C,              ModifierFlag::NONE,                      KeyCode::M,KeyCode::I,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::C,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::M,KeyCode::I,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::V,              ModifierFlag::NONE,                      KeyCode::Z,KeyCode::A,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::V,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::Z,KeyCode::A,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::B,              ModifierFlag::NONE,                      KeyCode::JIS_COLON,ModifierFlag::SHIFT_L, KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::B,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::JIS_COLON,ModifierFlag::SHIFT_L, KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::N,              ModifierFlag::NONE,                      KeyCode::M,KeyCode::U,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::N,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::M,KeyCode::U,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::M,              ModifierFlag::NONE,                      KeyCode::W,KeyCode::O,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::M,              ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::W,KeyCode::O,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::COMMA,          ModifierFlag::NONE,                      KeyCode::T,KeyCode::U,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::COMMA,          ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::T,KeyCode::U,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::DOT,            ModifierFlag::NONE,                      KeyCode::M,KeyCode::O,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::DOT,            ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::M,KeyCode::O,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::SLASH,          ModifierFlag::NONE,                      KeyCode::B,KeyCode::O,                    KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::SLASH,          ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::B,KeyCode::O,                    KeyCode::VK_NONE            </autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_KANA,KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE,                      KeyCode::PAGEDOWN,                        KeyCode::VK_MODIFIER_EXTRA2 </autogen>
          <autogen>__KeyToKey__                           KeyCode::JIS_UNDERSCORE, ModifierFlag::EXTRA2|ModifierFlag::NONE, KeyCode::PAGEDOWN,                        KeyCode::VK_NONE            </autogen>
        </item>
      </item>
      <item>
        <name>Use Windows Kana-Input Layout on US Keyboard</name>
        <inputsource_not>ROMAN</inputsource_not>
        <autogen>__KeyToKey__ KeyCode::MINUS, VK_SHIFT, KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, VK_SHIFT, KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_SHIFT, KeyCode::EQUAL, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::EQUAL, VK_SHIFT, KeyCode::MINUS, ModifierFlag::SHIFT_L</autogen>

        <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, ModifierFlag::NONE, KeyCode::EQUAL</autogen>
        <autogen>__KeyToKey__ KeyCode::EQUAL, ModifierFlag::NONE, KeyCode::BACKSLASH</autogen>
        <autogen>__KeyToKey__ KeyCode::BACKSLASH, ModifierFlag::NONE, KeyCode::BRACKET_RIGHT</autogen>
        <identifier>remap.jis_layout_windowskanainput</identifier>
      </item>
      <item>
        <name>キーボード天地逆Dvorak配列（USキーボード向け）</name>
        <appendix>http://pi200k.blog35.fc2.com/?no=70</appendix>
        <item>
          <name>UpDown.EXTRA_Keys_mouse</name>
          <identifier>remap.jis_UpDown_EXTRA_Keys_mouse</identifier>
          <autogen>__KeyToPointingButton__ KeyCode::SEMICOLON, VK_COMMAND, ModifierFlag::EXTRA5, PointingButton::LEFT</autogen>
          <autogen>__KeyToPointingButton__ KeyCode::L, VK_COMMAND, ModifierFlag::EXTRA5, PointingButton::RIGHT</autogen>
        </item>

        <item>
          <name>UpDown.DvorakJP</name>
          <identifier>remap.jis_UpDown_DvorakJP</identifier>
          <inputsourcedetail_only>JAPANESE_HIRAGANA, JAPANESE, JAPANESE_KATAKANA, JAPANESE_FULLWIDTH_ROMAN</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::K, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::Y, ModifierFlag::NONE, KeyCode::I, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::Y, ModifierFlag::NONE, KeyCode::U, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::Y, ModifierFlag::NONE, KeyCode::E, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::Y, ModifierFlag::NONE, KeyCode::O, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::Y, ModifierFlag::NONE, KeyCode::A, ModifierFlag::NONE</autogen>
        </item>

        <item>
          <name>UpDown.Remap.Dvorak</name>
          <identifier>remap.jis_UpDown_Remap_Dvorak</identifier>
          <autogen>__KeyToKey__ KeyCode::F4, ModifierFlag::NONE, KeyCode::CONTROL_R, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, ModifierFlag::NONE, KeyCode::SHIFT_R, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, ModifierFlag::NONE, KeyCode::SPACE, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F7, ModifierFlag::NONE, KeyCode::SHIFT_L, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, ModifierFlag::NONE, KeyCode::CONTROL_L, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::NONE, KeyCode::F4, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::NONE, KeyCode::F5, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::NONE, KeyCode::F6, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::NONE, KeyCode::FORWARD_DELETE, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::NONE, KeyCode::VK_JIS_TOGGLE_EISUU_KANA, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::NONE, KeyCode::F7, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::NONE, KeyCode::F8, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::EQUAL, ModifierFlag::NONE, KeyCode::F9, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::Z, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::V, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::W, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::M, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::B, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::X, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::K, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::J, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::Q, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::SEMICOLON, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::S, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::N, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::T, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::H, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::D, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::I, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::U, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::E, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::O, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::A, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::NONE, KeyCode::L, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::R, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::C, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::NONE, KeyCode::G, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::F, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::Y, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::NONE, KeyCode::P, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::NONE, KeyCode::QUOTE, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SPACE, ModifierFlag::NONE, KeyCode::TAB, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, ModifierFlag::NONE, KeyCode::ESCAPE, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, VK_SHIFT, KeyCode::CONTROL_R, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, VK_SHIFT, KeyCode::SHIFT_R, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, VK_SHIFT, KeyCode::SPACE, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F7, VK_SHIFT, KeyCode::SHIFT_L, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, VK_SHIFT, KeyCode::CONTROL_L, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, VK_SHIFT, KeyCode::F4, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, VK_SHIFT, KeyCode::F5, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, VK_SHIFT, KeyCode::F6, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, VK_SHIFT, KeyCode::FORWARD_DELETE, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, VK_SHIFT, KeyCode::VK_JIS_TOGGLE_EISUU_KANA, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, VK_SHIFT, KeyCode::F7, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, VK_SHIFT, KeyCode::F8, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::EQUAL, VK_SHIFT, KeyCode::F9, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, VK_SHIFT, KeyCode::Z, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::W, VK_SHIFT, KeyCode::V, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_SHIFT, KeyCode::W, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::R, VK_SHIFT, KeyCode::M, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::T, VK_SHIFT, KeyCode::B, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, VK_SHIFT, KeyCode::X, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::U, VK_SHIFT, KeyCode::K, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::I, VK_SHIFT, KeyCode::J, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::O, VK_SHIFT, KeyCode::Q, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::P, VK_SHIFT, KeyCode::SEMICOLON, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_SHIFT, KeyCode::S, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::S, VK_SHIFT, KeyCode::N, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::D, VK_SHIFT, KeyCode::T, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_SHIFT, KeyCode::H, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::G, VK_SHIFT, KeyCode::D, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::H, VK_SHIFT, KeyCode::I, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::J, VK_SHIFT, KeyCode::U, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::K, VK_SHIFT, KeyCode::E, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::L, VK_SHIFT, KeyCode::O, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_SHIFT, KeyCode::A, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, VK_SHIFT, KeyCode::L, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::X, VK_SHIFT, KeyCode::R, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::C, VK_SHIFT, KeyCode::C, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::V, VK_SHIFT, KeyCode::G, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_SHIFT, KeyCode::F, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_SHIFT, KeyCode::Y, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::M, VK_SHIFT, KeyCode::P, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, VK_SHIFT, KeyCode::DOT, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, VK_SHIFT, KeyCode::COMMA, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, VK_SHIFT, KeyCode::QUOTE, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::SPACE, VK_SHIFT, KeyCode::TAB, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_SHIFT, KeyCode::ESCAPE, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, VK_CONTROL, KeyCode::CONTROL_R, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, VK_CONTROL, KeyCode::SHIFT_R, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, VK_CONTROL, KeyCode::SPACE, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F7, VK_CONTROL, KeyCode::SHIFT_L, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, VK_CONTROL, KeyCode::CONTROL_L, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, VK_CONTROL, KeyCode::F4, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, VK_CONTROL, KeyCode::F5, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, VK_CONTROL, KeyCode::F6, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, VK_CONTROL, KeyCode::FORWARD_DELETE, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, VK_CONTROL, KeyCode::VK_JIS_TOGGLE_EISUU_KANA, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, VK_CONTROL, KeyCode::F7, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, VK_CONTROL, KeyCode::F8, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::EQUAL, VK_CONTROL, KeyCode::F9, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, VK_CONTROL, KeyCode::Z, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::W, VK_CONTROL, KeyCode::V, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::W, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::R, VK_CONTROL, KeyCode::M, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::T, VK_CONTROL, KeyCode::B, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, VK_CONTROL, KeyCode::X, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::U, VK_CONTROL, KeyCode::K, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::I, VK_CONTROL, KeyCode::J, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::O, VK_CONTROL, KeyCode::Q, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::SEMICOLON, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::S, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::S, VK_CONTROL, KeyCode::N, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::D, VK_CONTROL, KeyCode::T, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::H, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::G, VK_CONTROL, KeyCode::D, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::H, VK_CONTROL, KeyCode::I, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::J, VK_CONTROL, KeyCode::U, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::K, VK_CONTROL, KeyCode::E, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::L, VK_CONTROL, KeyCode::O, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_CONTROL, KeyCode::A, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, VK_CONTROL, KeyCode::L, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::X, VK_CONTROL, KeyCode::R, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::C, VK_CONTROL, KeyCode::C, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::V, VK_CONTROL, KeyCode::G, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::F, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::Y, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::M, VK_CONTROL, KeyCode::P, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, VK_CONTROL, KeyCode::DOT, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, VK_CONTROL, KeyCode::COMMA, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, VK_CONTROL, KeyCode::QUOTE, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::SPACE, VK_CONTROL, KeyCode::TAB, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_CONTROL, KeyCode::ESCAPE, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, VK_OPTION, KeyCode::CONTROL_R, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, VK_OPTION, KeyCode::SHIFT_R, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, VK_OPTION, KeyCode::SPACE, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F7, VK_OPTION, KeyCode::SHIFT_L, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, VK_OPTION, KeyCode::CONTROL_L, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, VK_OPTION, KeyCode::F4, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, VK_OPTION, KeyCode::F5, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, VK_OPTION, KeyCode::F6, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, VK_OPTION, KeyCode::FORWARD_DELETE, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, VK_OPTION, KeyCode::VK_JIS_TOGGLE_EISUU_KANA, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, VK_OPTION, KeyCode::F7, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, VK_OPTION, KeyCode::F8, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::EQUAL, VK_OPTION, KeyCode::F9, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, VK_OPTION, KeyCode::Z, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::W, VK_OPTION, KeyCode::V, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_OPTION, KeyCode::W, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::R, VK_OPTION, KeyCode::M, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::T, VK_OPTION, KeyCode::B, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, VK_OPTION, KeyCode::X, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::U, VK_OPTION, KeyCode::K, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::I, VK_OPTION, KeyCode::J, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::O, VK_OPTION, KeyCode::Q, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::P, VK_OPTION, KeyCode::SEMICOLON, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_OPTION, KeyCode::S, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::S, VK_OPTION, KeyCode::N, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::D, VK_OPTION, KeyCode::T, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_OPTION, KeyCode::H, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::G, VK_OPTION, KeyCode::D, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::H, VK_OPTION, KeyCode::I, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::J, VK_OPTION, KeyCode::U, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::K, VK_OPTION, KeyCode::E, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::L, VK_OPTION, KeyCode::O, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_OPTION, KeyCode::A, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, VK_OPTION, KeyCode::L, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::X, VK_OPTION, KeyCode::R, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::C, VK_OPTION, KeyCode::C, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::V, VK_OPTION, KeyCode::G, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_OPTION, KeyCode::F, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_OPTION, KeyCode::Y, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::M, VK_OPTION, KeyCode::P, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, VK_OPTION, KeyCode::DOT, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, VK_OPTION, KeyCode::COMMA, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, VK_OPTION, KeyCode::QUOTE, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::SPACE, VK_OPTION, KeyCode::TAB, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_OPTION, KeyCode::ESCAPE, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, VK_COMMAND, KeyCode::CONTROL_R, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, VK_COMMAND, KeyCode::SHIFT_R, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, VK_COMMAND, KeyCode::SPACE, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F7, VK_COMMAND, KeyCode::SHIFT_L, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, VK_COMMAND, KeyCode::CONTROL_L, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, VK_COMMAND, KeyCode::F4, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, VK_COMMAND, KeyCode::F5, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, VK_COMMAND, KeyCode::F6, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, VK_COMMAND, KeyCode::FORWARD_DELETE, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, VK_COMMAND, KeyCode::VK_JIS_TOGGLE_EISUU_KANA, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, VK_COMMAND, KeyCode::F7, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, VK_COMMAND, KeyCode::F8, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::EQUAL, VK_COMMAND, KeyCode::F9, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, VK_COMMAND, KeyCode::Z, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::W, VK_COMMAND, KeyCode::V, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_COMMAND, KeyCode::W, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::R, VK_COMMAND, KeyCode::M, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::T, VK_COMMAND, KeyCode::B, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, VK_COMMAND, KeyCode::X, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::U, VK_COMMAND, KeyCode::K, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::I, VK_COMMAND, KeyCode::J, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::O, VK_COMMAND, KeyCode::Q, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::P, VK_COMMAND, KeyCode::SEMICOLON, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::A, VK_COMMAND, KeyCode::S, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::S, VK_COMMAND, KeyCode::N, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::D, VK_COMMAND, KeyCode::T, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_COMMAND, KeyCode::H, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::G, VK_COMMAND, KeyCode::D, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::H, VK_COMMAND, KeyCode::I, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::J, VK_COMMAND, KeyCode::U, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::K, VK_COMMAND, KeyCode::E, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::L, VK_COMMAND, KeyCode::O, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_COMMAND, KeyCode::A, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, VK_COMMAND, KeyCode::L, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::X, VK_COMMAND, KeyCode::R, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::C, VK_COMMAND, KeyCode::C, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::V, VK_COMMAND, KeyCode::G, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::B, VK_COMMAND, KeyCode::F, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_COMMAND, KeyCode::Y, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::M, VK_COMMAND, KeyCode::P, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, VK_COMMAND, KeyCode::DOT, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, VK_COMMAND, KeyCode::COMMA, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, VK_COMMAND, KeyCode::QUOTE, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::SPACE, VK_COMMAND, KeyCode::TAB, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_COMMAND, KeyCode::ESCAPE, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, ModifierFlag::FN, KeyCode::CONTROL_R, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, ModifierFlag::FN, KeyCode::SHIFT_R, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, ModifierFlag::FN, KeyCode::SPACE, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F7, ModifierFlag::FN, KeyCode::SHIFT_L, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, ModifierFlag::FN, KeyCode::CONTROL_L, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::FN, KeyCode::F4, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::FN, KeyCode::F5, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::FN, KeyCode::F6, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::FN, KeyCode::FORWARD_DELETE, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::FN, KeyCode::VK_JIS_TOGGLE_EISUU_KANA, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::FN, KeyCode::F7, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::FN, KeyCode::F8, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::EQUAL, ModifierFlag::FN, KeyCode::F9, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::FN, KeyCode::Z, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::FN, KeyCode::V, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::FN, KeyCode::W, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::FN, KeyCode::M, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::FN, KeyCode::B, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::FN, KeyCode::X, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::FN, KeyCode::K, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::FN, KeyCode::J, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::FN, KeyCode::Q, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::FN, KeyCode::SEMICOLON, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::FN, KeyCode::S, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::FN, KeyCode::N, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::FN, KeyCode::T, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::FN, KeyCode::H, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::FN, KeyCode::D, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::FN, KeyCode::I, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::FN, KeyCode::U, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::FN, KeyCode::E, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::FN, KeyCode::O, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::FN, KeyCode::A, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::FN, KeyCode::L, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::FN, KeyCode::R, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::FN, KeyCode::C, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::FN, KeyCode::G, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::FN, KeyCode::F, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::FN, KeyCode::Y, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::FN, KeyCode::P, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::FN, KeyCode::DOT, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::FN, KeyCode::COMMA, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::FN, KeyCode::QUOTE, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::SPACE, ModifierFlag::FN, KeyCode::TAB, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, ModifierFlag::FN, KeyCode::ESCAPE, ModifierFlag::FN</autogen>
          <autogen>__KeyOverlaidModifier__ KeyCode::KEY_5, KeyCode::VK_MODIFIER_EXTRA1, KeyCode::DELETE</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, ModifierFlag::EXTRA1, KeyCode::CONTROL_R</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, ModifierFlag::EXTRA1, KeyCode::SHIFT_R</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, ModifierFlag::EXTRA1, KeyCode::SPACE</autogen>
          <autogen>__KeyToKey__ KeyCode::F7, ModifierFlag::EXTRA1, KeyCode::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, ModifierFlag::EXTRA1, KeyCode::CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::EXTRA1, KeyCode::VK_JIS_YEN</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::EXTRA1, KeyCode::KEYPAD_EQUAL</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::EXTRA1, KeyCode::KEYPAD_PLUS</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::EXTRA1, KeyCode::KEYPAD_MULTIPLY</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::EXTRA1, KeyCode::BACKQUOTE, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::EXTRA1, KeyCode::BACKQUOTE</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::EXTRA1, KeyCode::KEY_1, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::EXTRA1, KeyCode::KEY_6, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::EXTRA1, KeyCode::SLASH</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::EXTRA1, KeyCode::SLASH, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::EXTRA1, KeyCode::DOT, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA1, KeyCode::COMMA, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::EXTRA1, KeyCode::BRACKET_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::EXTRA1, KeyCode::BRACKET_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::EXTRA1, KeyCode::MINUS, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::EXTRA1, KeyCode::MINUS</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::EXTRA1, KeyCode::BRACKET_RIGHT, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::EXTRA1, KeyCode::BRACKET_LEFT, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::EXTRA1, KeyCode::KEY_0, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::EXTRA1, KeyCode::KEY_9, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::EXTRA1, KeyCode::DELETE</autogen>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::EXTRA1, KeyCode::RETURN</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::EXTRA1, KeyCode::BACKSLASH, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::EXTRA1, KeyCode::KEY_7, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::EXTRA1, KeyCode::F12</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::EXTRA1, KeyCode::F11</autogen>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::EXTRA1, KeyCode::KEY_5, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::EXTRA1, KeyCode::KEY_4, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::EXTRA1, KeyCode::KEY_3, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::EXTRA1, KeyCode::KEY_2, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, ModifierFlag::EXTRA1, KeyCode::ESCAPE</autogen>
          <autogen>__KeyOverlaidModifier__ KeyCode::KEY_7, KeyCode::VK_MODIFIER_EXTRA2, KeyCode::RETURN</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, ModifierFlag::EXTRA2, KeyCode::CONTROL_R</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, ModifierFlag::EXTRA2, KeyCode::SHIFT_R</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, ModifierFlag::EXTRA2, KeyCode::SPACE</autogen>
          <autogen>__KeyToKey__ KeyCode::F7, ModifierFlag::EXTRA2, KeyCode::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, ModifierFlag::EXTRA2, KeyCode::CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::EXTRA2, KeyCode::F10</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::EXTRA2, KeyCode::F9</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::EXTRA2, KeyCode::F8</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::EXTRA2, KeyCode::F7</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::EXTRA2, KeyCode::F6</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::EXTRA2, KeyCode::F5</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::EXTRA2, KeyCode::F4</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::EXTRA2, KeyCode::F3</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::EXTRA2, KeyCode::F2</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::EXTRA2, KeyCode::F1</autogen>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::EXTRA2, KeyCode::KEY_0</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA2, KeyCode::KEY_9</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::EXTRA2, KeyCode::KEY_8</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::EXTRA2, KeyCode::KEY_7</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::EXTRA2, KeyCode::KEY_6</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::EXTRA2, KeyCode::KEY_5</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::EXTRA2, KeyCode::KEY_4</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::EXTRA2, KeyCode::KEY_3</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::EXTRA2, KeyCode::KEY_2</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::EXTRA2, KeyCode::KEY_1</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::EXTRA2, KeyCode::PAGEDOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::EXTRA2, KeyCode::PAGEUP</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::EXTRA2, KeyCode::END</autogen>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::EXTRA2, KeyCode::HOME</autogen>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::EXTRA2, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::EXTRA2, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::EXTRA2, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::EXTRA2, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyOverlaidModifier__ KeyCode::KEY_8, KeyCode::VK_MODIFIER_EXTRA3, KeyCode::SPACE</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, ModifierFlag::EXTRA3, KeyCode::CONTROL_R</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, ModifierFlag::EXTRA3, KeyCode::SHIFT_R</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, ModifierFlag::EXTRA3, KeyCode::SPACE</autogen>
          <autogen>__KeyToKey__ KeyCode::F7, ModifierFlag::EXTRA3, KeyCode::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, ModifierFlag::EXTRA3, KeyCode::CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::EXTRA3, KeyCode::SEMICOLON</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::EXTRA3, KeyCode::Q</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::EXTRA3, KeyCode::J</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::EXTRA3, KeyCode::K</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::EXTRA3, KeyCode::X</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::EXTRA3, KeyCode::B</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::EXTRA3, KeyCode::M</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::EXTRA3, KeyCode::W</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::EXTRA3, KeyCode::V</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::EXTRA3, KeyCode::Z</autogen>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::EXTRA3, KeyCode::A</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA3, KeyCode::O</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::EXTRA3, KeyCode::E</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::EXTRA3, KeyCode::U</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::EXTRA3, KeyCode::I</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::EXTRA3, KeyCode::D</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::EXTRA3, KeyCode::H</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::EXTRA3, KeyCode::T</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::EXTRA3, KeyCode::N</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::EXTRA3, KeyCode::S</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::EXTRA3, KeyCode::QUOTE</autogen>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::EXTRA3, KeyCode::COMMA</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::EXTRA3, KeyCode::DOT</autogen>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::EXTRA3, KeyCode::P</autogen>
          <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::EXTRA3, KeyCode::Y</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::EXTRA3, KeyCode::F</autogen>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::EXTRA3, KeyCode::G</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::EXTRA3, KeyCode::C</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::EXTRA3, KeyCode::R</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::EXTRA3, KeyCode::L</autogen>
          <autogen>__KeyOverlaidModifier__ KeyCode::BRACKET_LEFT, KeyCode::VK_MODIFIER_EXTRA4, KeyCode::DELETE</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, ModifierFlag::EXTRA4, KeyCode::CONTROL_R</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, ModifierFlag::EXTRA4, KeyCode::SHIFT_R</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, ModifierFlag::EXTRA4, KeyCode::SPACE</autogen>
          <autogen>__KeyToKey__ KeyCode::F7, ModifierFlag::EXTRA4, KeyCode::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, ModifierFlag::EXTRA4, KeyCode::CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::EXTRA4, KeyCode::F4</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::EXTRA4, KeyCode::F5</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::EXTRA4, KeyCode::F6</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::EXTRA4, KeyCode::FORWARD_DELETE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::EXTRA4, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::EXTRA4, KeyCode::VK_MODIFIER_EXTRA3</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::EXTRA4, KeyCode::F7</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::EXTRA4, KeyCode::F8</autogen>
          <autogen>__KeyToKey__ KeyCode::EQUAL, ModifierFlag::EXTRA4, KeyCode::F9</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::EXTRA4, KeyCode::Z</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::EXTRA4, KeyCode::V</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::EXTRA4, KeyCode::W</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::EXTRA4, KeyCode::M</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::EXTRA4, KeyCode::B</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::EXTRA4, KeyCode::X</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::EXTRA4, KeyCode::K</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::EXTRA4, KeyCode::J</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::EXTRA4, KeyCode::Q</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::EXTRA4, KeyCode::SEMICOLON</autogen>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::EXTRA4, KeyCode::VK_MODIFIER_EXTRA4</autogen>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::EXTRA4, KeyCode::S</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA4, KeyCode::N</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::EXTRA4, KeyCode::T</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::EXTRA4, KeyCode::H</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::EXTRA4, KeyCode::D</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::EXTRA4, KeyCode::I</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::EXTRA4, KeyCode::U</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::EXTRA4, KeyCode::E</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::EXTRA4, KeyCode::O</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::EXTRA4, KeyCode::A</autogen>
          <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::EXTRA4, KeyCode::VK_MODIFIER_EXTRA5</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::EXTRA4, KeyCode::L</autogen>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::EXTRA4, KeyCode::R</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::EXTRA4, KeyCode::C</autogen>
          <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::EXTRA4, KeyCode::G</autogen>
          <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::EXTRA4, KeyCode::F</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::EXTRA4, KeyCode::Y</autogen>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::EXTRA4, KeyCode::P</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::EXTRA4, KeyCode::DOT</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::EXTRA4, KeyCode::COMMA</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::EXTRA4, KeyCode::QUOTE</autogen>
          <autogen>__KeyToKey__ KeyCode::SPACE, ModifierFlag::EXTRA4, KeyCode::TAB</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, ModifierFlag::EXTRA4, KeyCode::ESCAPE</autogen>
          <autogen>__KeyOverlaidModifier__ KeyCode::QUOTE, KeyCode::VK_MODIFIER_EXTRA5, KeyCode::DELETE</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, ModifierFlag::EXTRA5, KeyCode::CONTROL_R</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, ModifierFlag::EXTRA5, KeyCode::SHIFT_R</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, ModifierFlag::EXTRA5, KeyCode::SPACE</autogen>
          <autogen>__KeyToKey__ KeyCode::F7, ModifierFlag::EXTRA5, KeyCode::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, ModifierFlag::EXTRA5, KeyCode::CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::EXTRA5, KeyCode::KEY_0</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::EXTRA5, KeyCode::KEY_9</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::EXTRA5, KeyCode::KEY_8</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::EXTRA5, KeyCode::KEY_7</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::EXTRA5, KeyCode::KEY_6</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::EXTRA5, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::EXTRA5, KeyCode::ESCAPE</autogen>
          <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::EXTRA5, KeyCode::S, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::EXTRA5, KeyCode::Z, VK_COMMAND, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::EXTRA5, KeyCode::V, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::EXTRA5, KeyCode::C, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::EXTRA5, KeyCode::X, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::EXTRA5, KeyCode::Z, VK_COMMAND</autogen>
        </item>

        <item>
          <name>HomeMoved.EXTRA_Keys_mouse</name>
          <identifier>remap.jis_HomeMoved_EXTRA_Keys_mouse</identifier>
          <autogen>__KeyToPointingButton__ KeyCode::W, VK_COMMAND, ModifierFlag::EXTRA5, PointingButton::LEFT</autogen>
          <autogen>__KeyToPointingButton__ KeyCode::E, VK_COMMAND, ModifierFlag::EXTRA5, PointingButton::RIGHT</autogen>
        </item>

        <item>
          <name>HomeMoved.DvorakJP</name>
          <identifier>remap.jis_HomeMoved_DvorakJP</identifier>
          <inputsourcedetail_only>JAPANESE_HIRAGANA, JAPANESE, JAPANESE_KATAKANA, JAPANESE_FULLWIDTH_ROMAN</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::NONE, KeyCode::K, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::Y, ModifierFlag::NONE, KeyCode::I, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::Y, ModifierFlag::NONE, KeyCode::U, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::Y, ModifierFlag::NONE, KeyCode::E, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::Y, ModifierFlag::NONE, KeyCode::O, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::Y, ModifierFlag::NONE, KeyCode::A, ModifierFlag::NONE</autogen>
          <!-- for left-hand mode -->
          <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::EXTRA3, KeyCode::K, ModifierFlag::NONE</autogen>
        </item>

        <item>
          <name>HomeMoved.Remap.Dvorak</name>
          <identifier>remap.jis_HomeMoved_Remap_Dvorak</identifier>
          <autogen>__KeyToKey__ KeyCode::F1, ModifierFlag::NONE, KeyCode::ESCAPE, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F2, ModifierFlag::NONE, KeyCode::ESCAPE, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F3, ModifierFlag::NONE, KeyCode::COMMAND_L, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, ModifierFlag::NONE, KeyCode::DELETE, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, ModifierFlag::NONE, KeyCode::FORWARD_DELETE, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, ModifierFlag::NONE, KeyCode::TAB, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F9, ModifierFlag::NONE, KeyCode::TAB, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F10, ModifierFlag::NONE, KeyCode::TAB, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F11, ModifierFlag::NONE, KeyCode::TAB, VK_COMMAND|VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F12, ModifierFlag::NONE, KeyCode::CONTROL_R, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::NONE, KeyCode::VK_MODIFIER_EXTRA5, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::NONE, KeyCode::KEY_7, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::NONE, KeyCode::P, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::NONE, KeyCode::Y, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::NONE, KeyCode::F, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::NONE, KeyCode::G, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::NONE, KeyCode::C, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::NONE, KeyCode::R, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::NONE, KeyCode::L, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_HAT, ModifierFlag::NONE, KeyCode::SLASH, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_YEN, ModifierFlag::NONE, KeyCode::COMMAND_R, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::NONE, KeyCode::VK_MODIFIER_EXTRA4, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::NONE, KeyCode::A, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::O, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::NONE, KeyCode::E, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::NONE, KeyCode::U, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::NONE, KeyCode::I, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::NONE, KeyCode::D, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::NONE, KeyCode::H, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::NONE, KeyCode::T, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::NONE, KeyCode::N, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::S, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, ModifierFlag::NONE, KeyCode::MINUS, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::NONE, KeyCode::SEMICOLON, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::NONE, KeyCode::Q, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::J, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::NONE, KeyCode::K, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::NONE, KeyCode::X, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::NONE, KeyCode::B, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE, KeyCode::M, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::NONE, KeyCode::W, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::V, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON, ModifierFlag::NONE, KeyCode::Z, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::NONE, KeyCode::JIS_YEN, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, KeyCode::COMMAND_L, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::NONE, KeyCode::COMMAND_L, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::NONE, KeyCode::COMMAND_L, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::NONE, KeyCode::VK_JIS_TOGGLE_EISUU_KANA, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::NONE, KeyCode::FORWARD_DELETE, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::COMMAND_R</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::COMMAND_R, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_UNDERSCORE, KeyCode::COMMAND_L, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_EISUU, ModifierFlag::NONE, KeyCode::OPTION_R, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_KANA, ModifierFlag::NONE, KeyCode::SHIFT_R, ModifierFlag::NONE</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::CONTROL_R</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, ModifierFlag::NONE, KeyCode::ESCAPE, ModifierFlag::NONE</autogen>
          <!-- with shift -->
          <autogen>__KeyToKey__ KeyCode::F2, VK_SHIFT, KeyCode::ESCAPE, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F3, VK_SHIFT, KeyCode::OPTION_L, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, VK_SHIFT, KeyCode::COMMAND_L, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, VK_SHIFT, KeyCode::DELETE, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, VK_SHIFT, KeyCode::FORWARD_DELETE, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, VK_SHIFT, KeyCode::TAB, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F9, VK_SHIFT, KeyCode::TAB, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F10, VK_SHIFT, KeyCode::COMMAND_R, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F11, VK_SHIFT, KeyCode::OPTION_R, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F12, VK_SHIFT, KeyCode::CONTROL_R, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, VK_SHIFT, KeyCode::VK_MODIFIER_EXTRA5, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, VK_SHIFT, KeyCode::COMMA, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, VK_SHIFT, KeyCode::DOT, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, VK_SHIFT, KeyCode::P, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, VK_SHIFT, KeyCode::Y, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, VK_SHIFT, KeyCode::F, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, VK_SHIFT, KeyCode::G, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, VK_SHIFT, KeyCode::C, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, VK_SHIFT, KeyCode::R, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, VK_SHIFT, KeyCode::L, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_HAT, VK_SHIFT, KeyCode::SLASH, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, VK_SHIFT, KeyCode::VK_MODIFIER_EXTRA4, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::W, VK_SHIFT, KeyCode::A, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_SHIFT, KeyCode::O, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::R, VK_SHIFT, KeyCode::E, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::T, VK_SHIFT, KeyCode::U, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, VK_SHIFT, KeyCode::I, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::U, VK_SHIFT, KeyCode::D, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::I, VK_SHIFT, KeyCode::H, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::O, VK_SHIFT, KeyCode::T, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::P, VK_SHIFT, KeyCode::N, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, VK_SHIFT, KeyCode::S, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_SHIFT, KeyCode::JIS_UNDERSCORE</autogen>
          <autogen>__KeyToKey__ KeyCode::S, VK_SHIFT, KeyCode::JIS_COLON</autogen>
          <autogen>__KeyToKey__ KeyCode::D, VK_SHIFT, KeyCode::Q, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_SHIFT, KeyCode::J, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::G, VK_SHIFT, KeyCode::K, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::H, VK_SHIFT, KeyCode::X, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::J, VK_SHIFT, KeyCode::B, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::K, VK_SHIFT, KeyCode::M, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::L, VK_SHIFT, KeyCode::W, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_SHIFT, KeyCode::V, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON, VK_SHIFT, KeyCode::Z, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, VK_SHIFT, KeyCode::JIS_YEN, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_SHIFT, KeyCode::VK_JIS_TOGGLE_EISUU_KANA, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, VK_SHIFT, KeyCode::FORWARD_DELETE, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_EISUU, VK_SHIFT, KeyCode::OPTION_R, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_KANA, VK_SHIFT, KeyCode::SHIFT_R, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_SHIFT, KeyCode::ESCAPE, VK_SHIFT</autogen>
          <!-- with control -->
          <autogen>__KeyToKey__ KeyCode::F2, VK_CONTROL, KeyCode::ESCAPE, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F3, VK_CONTROL, KeyCode::OPTION_L, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, VK_CONTROL, KeyCode::COMMAND_L, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, VK_CONTROL, KeyCode::DELETE, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, VK_CONTROL, KeyCode::FORWARD_DELETE, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, VK_CONTROL, KeyCode::TAB, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F9, VK_CONTROL, KeyCode::TAB, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F10, VK_CONTROL, KeyCode::COMMAND_R, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F11, VK_CONTROL, KeyCode::OPTION_R, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F12, VK_CONTROL, KeyCode::CONTROL_R, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, VK_CONTROL, KeyCode::VK_MODIFIER_EXTRA5, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, VK_CONTROL, KeyCode::KEY_7, VK_CONTROL | VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, VK_CONTROL, KeyCode::COMMA, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, VK_CONTROL, KeyCode::DOT, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, VK_CONTROL, KeyCode::P, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, VK_CONTROL, KeyCode::Y, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, VK_CONTROL, KeyCode::F, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, VK_CONTROL, KeyCode::G, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, VK_CONTROL, KeyCode::C, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, VK_CONTROL, KeyCode::R, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, VK_CONTROL, KeyCode::L, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_HAT, VK_CONTROL, KeyCode::SLASH, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, VK_CONTROL, KeyCode::VK_MODIFIER_EXTRA4, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::W, VK_CONTROL, KeyCode::A, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::O, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::R, VK_CONTROL, KeyCode::E, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::T, VK_CONTROL, KeyCode::U, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, VK_CONTROL, KeyCode::I, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::U, VK_CONTROL, KeyCode::D, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::I, VK_CONTROL, KeyCode::H, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::O, VK_CONTROL, KeyCode::T, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::P, VK_CONTROL, KeyCode::N, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, VK_CONTROL, KeyCode::S, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_CONTROL, KeyCode::MINUS, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::S, VK_CONTROL, KeyCode::SEMICOLON, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::D, VK_CONTROL, KeyCode::Q, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::J, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::G, VK_CONTROL, KeyCode::K, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::H, VK_CONTROL, KeyCode::X, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::J, VK_CONTROL, KeyCode::B, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::K, VK_CONTROL, KeyCode::M, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::L, VK_CONTROL, KeyCode::W, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_CONTROL, KeyCode::V, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON, VK_CONTROL, KeyCode::Z, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, VK_CONTROL, KeyCode::JIS_YEN, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::VK_JIS_TOGGLE_EISUU_KANA, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, VK_CONTROL, KeyCode::FORWARD_DELETE, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_EISUU, VK_CONTROL, KeyCode::OPTION_R, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_KANA, VK_CONTROL, KeyCode::SHIFT_R, VK_CONTROL</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_CONTROL, KeyCode::ESCAPE, VK_CONTROL</autogen>
          <!-- with option -->
          <autogen>__KeyToKey__ KeyCode::F2, VK_OPTION, KeyCode::ESCAPE, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F3, VK_OPTION, KeyCode::OPTION_L, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, VK_OPTION, KeyCode::COMMAND_L, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, VK_OPTION, KeyCode::DELETE, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, VK_OPTION, KeyCode::FORWARD_DELETE, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, VK_OPTION, KeyCode::TAB, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F9, VK_OPTION, KeyCode::TAB, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F10, VK_OPTION, KeyCode::COMMAND_R, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F11, VK_OPTION, KeyCode::OPTION_R, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F12, VK_OPTION, KeyCode::CONTROL_R, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, VK_OPTION, KeyCode::VK_MODIFIER_EXTRA5, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, VK_OPTION, KeyCode::KEY_7, VK_OPTION | VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, VK_OPTION, KeyCode::COMMA, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, VK_OPTION, KeyCode::DOT, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, VK_OPTION, KeyCode::P, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, VK_OPTION, KeyCode::Y, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, VK_OPTION, KeyCode::F, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, VK_OPTION, KeyCode::G, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, VK_OPTION, KeyCode::C, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, VK_OPTION, KeyCode::R, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, VK_OPTION, KeyCode::L, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_HAT, VK_OPTION, KeyCode::SLASH, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, VK_OPTION, KeyCode::VK_MODIFIER_EXTRA4, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::W, VK_OPTION, KeyCode::A, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_OPTION, KeyCode::O, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::R, VK_OPTION, KeyCode::E, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::T, VK_OPTION, KeyCode::U, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, VK_OPTION, KeyCode::I, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::U, VK_OPTION, KeyCode::D, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::I, VK_OPTION, KeyCode::H, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::O, VK_OPTION, KeyCode::T, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::P, VK_OPTION, KeyCode::N, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, VK_OPTION, KeyCode::S, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_OPTION, KeyCode::MINUS, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::S, VK_OPTION, KeyCode::SEMICOLON, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::D, VK_OPTION, KeyCode::Q, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_OPTION, KeyCode::J, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::G, VK_OPTION, KeyCode::K, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::H, VK_OPTION, KeyCode::X, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::J, VK_OPTION, KeyCode::B, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::K, VK_OPTION, KeyCode::M, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::L, VK_OPTION, KeyCode::W, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_OPTION, KeyCode::V, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON, VK_OPTION, KeyCode::Z, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, VK_OPTION, KeyCode::JIS_YEN, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_OPTION, KeyCode::VK_JIS_TOGGLE_EISUU_KANA, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, VK_OPTION, KeyCode::FORWARD_DELETE, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_EISUU, VK_OPTION, KeyCode::OPTION_R, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_KANA, VK_OPTION, KeyCode::SHIFT_R, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_OPTION, KeyCode::ESCAPE, VK_OPTION</autogen>
          <!-- with command -->
          <autogen>__KeyToKey__ KeyCode::F2, VK_COMMAND, KeyCode::ESCAPE, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F3, VK_COMMAND, KeyCode::OPTION_L, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, VK_COMMAND, KeyCode::COMMAND_L, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, VK_COMMAND, KeyCode::DELETE, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, VK_COMMAND, KeyCode::FORWARD_DELETE, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, VK_COMMAND, KeyCode::TAB, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F9, VK_COMMAND, KeyCode::TAB, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F10, VK_COMMAND, KeyCode::COMMAND_R, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F11, VK_COMMAND, KeyCode::OPTION_R, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F12, VK_COMMAND, KeyCode::CONTROL_R, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, VK_COMMAND, KeyCode::VK_MODIFIER_EXTRA5, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, VK_COMMAND, KeyCode::KEY_7, VK_COMMAND | VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, VK_COMMAND, KeyCode::COMMA, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, VK_COMMAND, KeyCode::DOT, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, VK_COMMAND, KeyCode::P, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, VK_COMMAND, KeyCode::Y, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, VK_COMMAND, KeyCode::F, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, VK_COMMAND, KeyCode::G, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, VK_COMMAND, KeyCode::C, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, VK_COMMAND, KeyCode::R, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, VK_COMMAND, KeyCode::L, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_HAT, VK_COMMAND, KeyCode::SLASH, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, VK_COMMAND, KeyCode::VK_MODIFIER_EXTRA4, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::W, VK_COMMAND, KeyCode::A, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::E, VK_COMMAND, KeyCode::O, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::R, VK_COMMAND, KeyCode::E, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::T, VK_COMMAND, KeyCode::U, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, VK_COMMAND, KeyCode::I, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::U, VK_COMMAND, KeyCode::D, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::I, VK_COMMAND, KeyCode::H, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::O, VK_COMMAND, KeyCode::T, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::P, VK_COMMAND, KeyCode::N, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, VK_COMMAND, KeyCode::S, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, VK_COMMAND, KeyCode::MINUS, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::S, VK_COMMAND, KeyCode::SEMICOLON, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::D, VK_COMMAND, KeyCode::Q, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::F, VK_COMMAND, KeyCode::J, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::G, VK_COMMAND, KeyCode::K, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::H, VK_COMMAND, KeyCode::X, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::J, VK_COMMAND, KeyCode::B, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::K, VK_COMMAND, KeyCode::M, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::L, VK_COMMAND, KeyCode::W, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, VK_COMMAND, KeyCode::V, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON, VK_COMMAND, KeyCode::Z, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, VK_COMMAND, KeyCode::JIS_YEN, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::N, VK_COMMAND, KeyCode::VK_JIS_TOGGLE_EISUU_KANA, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, VK_COMMAND, KeyCode::FORWARD_DELETE, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_EISUU, VK_COMMAND, KeyCode::OPTION_R, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_KANA, VK_COMMAND, KeyCode::SHIFT_R, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, VK_COMMAND, KeyCode::ESCAPE, VK_COMMAND</autogen>
          <!-- with function -->
          <autogen>__KeyToKey__ KeyCode::F2, ModifierFlag::FN, KeyCode::ESCAPE, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F3, ModifierFlag::FN, KeyCode::OPTION_L, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F4, ModifierFlag::FN, KeyCode::COMMAND_L, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, ModifierFlag::FN, KeyCode::DELETE, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, ModifierFlag::FN, KeyCode::FORWARD_DELETE, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, ModifierFlag::FN, KeyCode::TAB, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F9, ModifierFlag::FN, KeyCode::TAB, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F10, ModifierFlag::FN, KeyCode::COMMAND_R, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F11, ModifierFlag::FN, KeyCode::OPTION_R, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F12, ModifierFlag::FN, KeyCode::CONTROL_R, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::FN, KeyCode::VK_MODIFIER_EXTRA5, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::FN, KeyCode::KEY_7, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::FN, KeyCode::COMMA, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::FN, KeyCode::DOT, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::FN, KeyCode::P, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::FN, KeyCode::Y, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::FN, KeyCode::F, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::FN, KeyCode::G, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::FN, KeyCode::C, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::FN, KeyCode::R, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::FN, KeyCode::L, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_HAT, ModifierFlag::FN, KeyCode::SLASH, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::FN, KeyCode::VK_MODIFIER_EXTRA4, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::FN, KeyCode::A, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::FN, KeyCode::O, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::FN, KeyCode::E, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::FN, KeyCode::U, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::FN, KeyCode::I, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::FN, KeyCode::D, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::FN, KeyCode::H, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::FN, KeyCode::T, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::FN, KeyCode::N, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::FN, KeyCode::S, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, ModifierFlag::FN, KeyCode::MINUS, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::FN, KeyCode::SEMICOLON, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::FN, KeyCode::Q, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::FN, KeyCode::J, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::FN, KeyCode::K, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::FN, KeyCode::X, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::FN, KeyCode::B, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::FN, KeyCode::M, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::FN, KeyCode::W, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::FN, KeyCode::V, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON, ModifierFlag::FN, KeyCode::Z, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::FN, KeyCode::JIS_YEN, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::FN, KeyCode::VK_JIS_TOGGLE_EISUU_KANA, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::FN, KeyCode::FORWARD_DELETE, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_EISUU, ModifierFlag::FN, KeyCode::OPTION_R, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_KANA, ModifierFlag::FN, KeyCode::SHIFT_R, ModifierFlag::FN</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, ModifierFlag::FN, KeyCode::ESCAPE, ModifierFlag::FN</autogen>
          <!-- EXTRA1 - symbols -->
          <autogen>__KeyOverlaidModifier__ KeyCode::M, KeyCode::VK_MODIFIER_EXTRA1, KeyCode::DELETE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::EXTRA1, KeyCode::JIS_ATMARK</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::EXTRA1, KeyCode::KEY_3, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::EXTRA1, KeyCode::KEY_4, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::EXTRA1, KeyCode::KEY_5, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::EXTRA1, KeyCode::F11</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::EXTRA1, KeyCode::F12</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::EXTRA1, KeyCode::KEY_6, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::EXTRA1, KeyCode::JIS_YEN, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::EXTRA1, KeyCode::RETURN</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::EXTRA1, KeyCode::DELETE</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::EXTRA1, KeyCode::KEY_8, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::EXTRA1, KeyCode::KEY_9, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::EXTRA1, KeyCode::JIS_BRACKET_LEFT, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::EXTRA1, KeyCode::JIS_BRACKET_RIGHT, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::EXTRA1, KeyCode::MINUS</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::EXTRA1, KeyCode::JIS_UNDERSCORE</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::EXTRA1, KeyCode::JIS_BRACKET_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::EXTRA1, KeyCode::JIS_BRACKET_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::EXTRA1, KeyCode::COMMA, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::EXTRA1, KeyCode::DOT, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA1, KeyCode::SLASH, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::EXTRA1, KeyCode::SLASH</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::EXTRA1, KeyCode::JIS_HAT</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::EXTRA1, KeyCode::KEY_1, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::EXTRA1, KeyCode::JIS_ATMARK, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::EXTRA1, KeyCode::JIS_HAT, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::EXTRA1, KeyCode::JIS_COLON, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::EXTRA1, KeyCode::SEMICOLON, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::EXTRA1, KeyCode::KEYPAD_EQUAL</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON, ModifierFlag::EXTRA1, KeyCode::JIS_YEN</autogen>
          <!-- EXTRA2 - manipulation -->
          <autogen>__KeyOverlaidModifier__ KeyCode::B, KeyCode::VK_MODIFIER_EXTRA2, KeyCode::RETURN</autogen>
          <!-- cursors -->
          <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::EXTRA2, KeyCode::CURSOR_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::EXTRA2, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::EXTRA2, KeyCode::CURSOR_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::EXTRA2, KeyCode::CURSOR_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::EXTRA2, KeyCode::HOME</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::EXTRA2, KeyCode::END</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::EXTRA2, KeyCode::PAGEUP</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::EXTRA2, KeyCode::PAGEDOWN</autogen>
          <!-- nums -->
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::EXTRA2, KeyCode::KEY_1</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::EXTRA2, KeyCode::KEY_2</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::EXTRA2, KeyCode::KEY_3</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::EXTRA2, KeyCode::KEY_4</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::EXTRA2, KeyCode::KEY_5</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::EXTRA2, KeyCode::KEY_6</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::EXTRA2, KeyCode::KEY_7</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::EXTRA2, KeyCode::KEY_8</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::EXTRA2, KeyCode::KEY_9</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::EXTRA2, KeyCode::KEY_0</autogen>
          <!-- F keys -->
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA2, KeyCode::F1</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::EXTRA2, KeyCode::F2</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::EXTRA2, KeyCode::F3</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::EXTRA2, KeyCode::F4</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::EXTRA2, KeyCode::F5</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::EXTRA2, KeyCode::F6</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::EXTRA2, KeyCode::F7</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::EXTRA2, KeyCode::F8</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::EXTRA2, KeyCode::F9</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON, ModifierFlag::EXTRA2, KeyCode::F10</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::EXTRA2, KeyCode::F11</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_BRACKET_LEFT, ModifierFlag::EXTRA2, KeyCode::F12</autogen>
          <!-- switch window -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::B, KeyCode::KEY_6, KeyCode::F9</autogen>

          <!-- EXTRA3 one-hand input -->
          <autogen>__KeyOverlaidModifier__ KeyCode::V, KeyCode::VK_MODIFIER_EXTRA3, KeyCode::SPACE</autogen>
          <autogen>__KeyToKey__ KeyCode::F5, ModifierFlag::EXTRA3, KeyCode::CONTROL_R</autogen>
          <autogen>__KeyToKey__ KeyCode::F6, ModifierFlag::EXTRA3, KeyCode::SHIFT_R</autogen>
          <autogen>__KeyToKey__ KeyCode::F7, ModifierFlag::EXTRA3, KeyCode::SPACE</autogen>
          <autogen>__KeyToKey__ KeyCode::F8, ModifierFlag::EXTRA3, KeyCode::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::F9, ModifierFlag::EXTRA3, KeyCode::CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::EXTRA3, KeyCode::L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::EXTRA3, KeyCode::R</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::EXTRA3, KeyCode::C</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::EXTRA3, KeyCode::G</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::EXTRA3, KeyCode::F</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::EXTRA3, KeyCode::Y</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::EXTRA3, KeyCode::P</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::EXTRA3, KeyCode::DOT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::EXTRA3, KeyCode::COMMA</autogen>
          <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::EXTRA3, KeyCode::QUOTE</autogen>
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::EXTRA3, KeyCode::S</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::EXTRA3, KeyCode::N</autogen>
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::EXTRA3, KeyCode::T</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::EXTRA3, KeyCode::H</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::EXTRA3, KeyCode::D</autogen>
          <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::EXTRA3, KeyCode::I</autogen>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::EXTRA3, KeyCode::U</autogen>
          <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::EXTRA3, KeyCode::E</autogen>
          <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::EXTRA3, KeyCode::O</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_ATMARK, ModifierFlag::EXTRA3, KeyCode::A</autogen>
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA3, KeyCode::Z</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::EXTRA3, KeyCode::V</autogen>
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::EXTRA3, KeyCode::W</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::EXTRA3, KeyCode::M</autogen>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::EXTRA3, KeyCode::B</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::EXTRA3, KeyCode::X</autogen>
          <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::EXTRA3, KeyCode::K</autogen>
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::EXTRA3, KeyCode::J</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::EXTRA3, KeyCode::Q</autogen>
          <autogen>__KeyToKey__ KeyCode::JIS_COLON, ModifierFlag::EXTRA3, KeyCode::SEMICOLON</autogen>

          <!-- EXTRA4 -->
          <autogen>__KeyOverlaidModifier__ KeyCode::Q, KeyCode::VK_MODIFIER_EXTRA4, KeyCode::DELETE</autogen>
          <!-- select by charactor -->
          <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::EXTRA4, KeyCode::CURSOR_LEFT, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::EXTRA4, KeyCode::CURSOR_RIGHT, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::EXTRA4, KeyCode::CURSOR_DOWN, VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::EXTRA4, KeyCode::CURSOR_UP, VK_SHIFT</autogen>
          <!-- move by line -->
          <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::EXTRA4, KeyCode::CURSOR_LEFT, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::EXTRA4, KeyCode::CURSOR_RIGHT, VK_COMMAND</autogen>
          <!-- select by line -->
          <autogen>__KeyToKey__ KeyCode::R, ModifierFlag::EXTRA4, KeyCode::CURSOR_LEFT, VK_COMMAND|VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::EXTRA4, KeyCode::CURSOR_RIGHT, VK_COMMAND|VK_SHIFT</autogen>
          <!-- move by word -->
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA4, KeyCode::CURSOR_LEFT, VK_OPTION</autogen>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::EXTRA4, KeyCode::CURSOR_RIGHT, VK_OPTION</autogen>
          <!-- select by word -->
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::EXTRA4, KeyCode::CURSOR_LEFT, VK_OPTION|VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::EXTRA4, KeyCode::CURSOR_RIGHT, VK_OPTION|VK_SHIFT</autogen>
          <!-- show full windows -->
          <autogen>__KeyToKey__ KeyCode::Y, ModifierFlag::EXTRA4, KeyCode::F, VK_COMMAND|VK_SHIFT</autogen>
          <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::EXTRA4, KeyCode::KEYPAD_MINUS, VK_COMMAND</autogen>
          <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::EXTRA4, KeyCode::KEYPAD_PLUS, VK_COMMAND</autogen>

          <!-- EXTRA5 -->
          <autogen>__KeyOverlaidModifier__ KeyCode::KEY_1, KeyCode::VK_MODIFIER_EXTRA5, KeyCode::DELETE</autogen>
          <!-- undo -->
          <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::EXTRA5, KeyCode::Z, VK_COMMAND</autogen>
          <!-- cut -->
          <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::EXTRA5, KeyCode::X, VK_COMMAND</autogen>
          <!-- copy -->
          <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::EXTRA5, KeyCode::C, VK_COMMAND</autogen>
          <!-- paste -->
          <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::EXTRA5, KeyCode::V, VK_COMMAND</autogen>
          <!-- undo - undo -->
          <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::EXTRA5, KeyCode::Z, VK_COMMAND, VK_SHIFT</autogen>
          <!-- save -->
          <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::EXTRA5, KeyCode::S, VK_COMMAND</autogen>
          <!-- switch input mode -->
          <autogen>__KeyToKey__ KeyCode::T, ModifierFlag::EXTRA5, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
          <!-- select all -->
          <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA5, KeyCode::A, VK_COMMAND</autogen>
          <!-- search -->
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::EXTRA5, KeyCode::F, VK_COMMAND</autogen>
          <!-- delete file -->
          <autogen>__KeyToKey__ KeyCode::SPACE, ModifierFlag::EXTRA5, KeyCode::DELETE, VK_COMMAND</autogen>
          <!-- Alternative EXTRA6 -->
          <!-- quit window -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::KEY_6, KeyCode::W, VK_COMMAND</autogen>
          <!-- switch tab [] -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::KEY_2, KeyCode::JIS_BRACKET_LEFT, VK_COMMAND|VK_SHIFT</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::KEY_3, KeyCode::JIS_BRACKET_RIGHT, VK_COMMAND|VK_SHIFT</autogen>
          <!-- switch tab -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::KEY_4, KeyCode::CURSOR_LEFT, VK_COMMAND|VK_SHIFT</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::KEY_5, KeyCode::CURSOR_RIGHT, VK_COMMAND|VK_SHIFT</autogen>
          <!-- browser - back, forward -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::W, KeyCode::JIS_BRACKET_LEFT, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::E, KeyCode::JIS_BRACKET_RIGHT, VK_COMMAND</autogen>
          <!--  show ClipMenu -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::D, KeyCode::V, VK_COMMAND|VK_SHIFT</autogen>
          <!-- for num,f key + modifier key -->
          <!-- num with option -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::U, KeyCode::KEY_6, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::I, KeyCode::KEY_7, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::O, KeyCode::KEY_8, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::P, KeyCode::KEY_9, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::JIS_ATMARK, KeyCode::KEY_0, VK_OPTION</autogen>
          <!-- f with option -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::J, KeyCode::F6, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::K, KeyCode::F7, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::L, KeyCode::F8, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::SEMICOLON, KeyCode::F9, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::JIS_COLON, KeyCode::F10, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::JIS_BRACKET_RIGHT, KeyCode::F11, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::V, KeyCode::JIS_BRACKET_LEFT, KeyCode::F12, VK_OPTION</autogen>
          <!-- num with command -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::U, KeyCode::KEY_6, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::I, KeyCode::KEY_7, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::O, KeyCode::KEY_8, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::P, KeyCode::KEY_9, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::JIS_ATMARK, KeyCode::KEY_0, VK_COMMAND</autogen>
          <!-- f with command -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::J, KeyCode::F6, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::K, KeyCode::F7, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::L, KeyCode::F8, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::SEMICOLON, KeyCode::F9, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::JIS_COLON, KeyCode::F10, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::JIS_BRACKET_RIGHT, KeyCode::F11, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::JIS_BRACKET_LEFT, KeyCode::F12, VK_COMMAND</autogen>
          <!-- num with control -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::U, KeyCode::KEY_6, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::I, KeyCode::KEY_7, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::O, KeyCode::KEY_8, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::P, KeyCode::KEY_9, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::JIS_ATMARK, KeyCode::KEY_0, VK_CONTROL</autogen>
          <!-- f with control -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::J, KeyCode::F6, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::K, KeyCode::F7, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::L, KeyCode::F8, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::SEMICOLON, KeyCode::F9, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::JIS_COLON, KeyCode::F10, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::JIS_BRACKET_RIGHT, KeyCode::F11, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::JIS_BRACKET_LEFT, KeyCode::F12, VK_CONTROL</autogen>
          <!-- num with shift + command -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::Z, KeyCode::U, KeyCode::KEY_6, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::Z, KeyCode::I, KeyCode::KEY_7, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::Z, KeyCode::O, KeyCode::KEY_8, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::Z, KeyCode::P, KeyCode::KEY_9, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::Z, KeyCode::JIS_ATMARK, KeyCode::KEY_0, VK_SHIFT|VK_COMMAND</autogen>
          <!-- f with shift + command -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::Z, KeyCode::J, KeyCode::F6, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::Z, KeyCode::K, KeyCode::F7, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::Z, KeyCode::L, KeyCode::F8, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::Z, KeyCode::SEMICOLON, KeyCode::F9, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::Z, KeyCode::JIS_COLON, KeyCode::F10, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::Z, KeyCode::JIS_BRACKET_RIGHT, KeyCode::F11, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::Z, KeyCode::JIS_BRACKET_LEFT, KeyCode::F12, VK_SHIFT|VK_COMMAND</autogen>

          <!-- num with option -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, KeyCode::W, KeyCode::KEY_1, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, KeyCode::E, KeyCode::KEY_2, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, KeyCode::R, KeyCode::KEY_3, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, KeyCode::T, KeyCode::KEY_4, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, KeyCode::Y, KeyCode::KEY_5, VK_OPTION</autogen>
          <!-- f with option -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, KeyCode::S, KeyCode::F1, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, KeyCode::D, KeyCode::F2, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, KeyCode::F, KeyCode::F3, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, KeyCode::G, KeyCode::F4, VK_OPTION</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::COMMA, KeyCode::H, KeyCode::F5, VK_OPTION</autogen>
          <!-- num with command -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, KeyCode::W, KeyCode::KEY_1, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, KeyCode::E, KeyCode::KEY_2, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, KeyCode::R, KeyCode::KEY_3, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, KeyCode::T, KeyCode::KEY_4, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, KeyCode::Y, KeyCode::KEY_5, VK_COMMAND</autogen>
          <!-- f with command -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, KeyCode::S, KeyCode::F1, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, KeyCode::D, KeyCode::F2, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, KeyCode::F, KeyCode::F3, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, KeyCode::G, KeyCode::F4, VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::DOT, KeyCode::H, KeyCode::F5, VK_COMMAND</autogen>
          <!-- num with control -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::SLASH, KeyCode::W, KeyCode::KEY_1, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SLASH, KeyCode::E, KeyCode::KEY_2, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SLASH, KeyCode::R, KeyCode::KEY_3, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SLASH, KeyCode::T, KeyCode::KEY_4, VK_CONTROL</autogen>
          <!-- f with control -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::SLASH, KeyCode::S, KeyCode::F1, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SLASH, KeyCode::D, KeyCode::F2, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SLASH, KeyCode::F, KeyCode::F3, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SLASH, KeyCode::G, KeyCode::F4, VK_CONTROL</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::SLASH, KeyCode::H, KeyCode::F5, VK_CONTROL</autogen>
          <!-- num with shift + command -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_UNDERSCORE, KeyCode::W, KeyCode::KEY_1, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_UNDERSCORE, KeyCode::E, KeyCode::KEY_2, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_UNDERSCORE, KeyCode::R, KeyCode::KEY_3, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_UNDERSCORE, KeyCode::T, KeyCode::KEY_4, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_UNDERSCORE, KeyCode::Y, KeyCode::KEY_5, VK_SHIFT|VK_COMMAND</autogen>
          <!-- f with shift + command -->
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_UNDERSCORE, KeyCode::S, KeyCode::F1, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_UNDERSCORE, KeyCode::D, KeyCode::F2, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_UNDERSCORE, KeyCode::F, KeyCode::F3, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_UNDERSCORE, KeyCode::G, KeyCode::F4, VK_SHIFT|VK_COMMAND</autogen>
          <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_UNDERSCORE, KeyCode::H, KeyCode::F5, VK_SHIFT|VK_COMMAND</autogen>
        </item>
      </item>
      <item>
        <name>AIU配列</name>
        <appendix>1段目: X-EQ/ YGRWP</appendix>
        <appendix>2段目: AIUFO HJKST</appendix>
        <appendix>3段目: ,.CVL NMDBZ</appendix>
        <item>
          <name>日本語入力のときだけAIU配列にする</name>
          <appendix>（Command+CなどのショートカットはQWERTY配列のまま）</appendix>
          <identifier>remap.jis_layout_aiu</identifier>
          <inputsourcedetail_only>
            JAPANESE,
            JAPANESE_HIRAGANA,
            JAPANESE_KATAKANA,
            JAPANESE_HALFWIDTH_KANA,
            AINU
          </inputsourcedetail_only>
          <modifier_not>
            ModifierFlag::COMMAND_L,
            ModifierFlag::COMMAND_R,
            ModifierFlag::CONTROL_L,
            ModifierFlag::CONTROL_R,
            ModifierFlag::FN,
            ModifierFlag::OPTION_L,
            ModifierFlag::OPTION_R
          </modifier_not>
          <autogen>__KeyToKey__ KeyCode::S, KeyCode::I</autogen>
          <autogen>__KeyToKey__ KeyCode::D, KeyCode::U</autogen>
          <autogen>__KeyToKey__ KeyCode::R, KeyCode::Q</autogen>
          <autogen>__KeyToKey__ KeyCode::G, KeyCode::O</autogen>
          <autogen>__KeyToKey__ KeyCode::U, KeyCode::G</autogen>
          <autogen>__KeyToKey__ KeyCode::I, KeyCode::R</autogen>
          <autogen>__KeyToKey__ KeyCode::O, KeyCode::W</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, KeyCode::COMMA</autogen>
          <autogen>__KeyToKey__ KeyCode::X, KeyCode::DOT</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, KeyCode::X</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::Z</autogen>
          <autogen>__KeyToKey__ KeyCode::T, KeyCode::SLASH</autogen>
          <autogen>__KeyToKey__ KeyCode::B, KeyCode::L</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::T</autogen>
          <autogen>__KeyToKey__ KeyCode::L, KeyCode::S</autogen>
          <autogen>__KeyToKey__ KeyCode::W, KeyCode::MINUS</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::D</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::B</autogen>
        </item>
        <item>
          <name>いつでもAIU配列</name>
          <identifier>remap.jis_layout_aiu_anytime</identifier>
          <autogen>__KeyToKey__ KeyCode::S, KeyCode::I</autogen>
          <autogen>__KeyToKey__ KeyCode::D, KeyCode::U</autogen>
          <autogen>__KeyToKey__ KeyCode::R, KeyCode::Q</autogen>
          <autogen>__KeyToKey__ KeyCode::G, KeyCode::O</autogen>
          <autogen>__KeyToKey__ KeyCode::U, KeyCode::G</autogen>
          <autogen>__KeyToKey__ KeyCode::I, KeyCode::R</autogen>
          <autogen>__KeyToKey__ KeyCode::O, KeyCode::W</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, KeyCode::COMMA</autogen>
          <autogen>__KeyToKey__ KeyCode::X, KeyCode::DOT</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, KeyCode::X</autogen>
          <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::Z</autogen>
          <autogen>__KeyToKey__ KeyCode::T, KeyCode::SLASH</autogen>
          <autogen>__KeyToKey__ KeyCode::B, KeyCode::L</autogen>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::T</autogen>
          <autogen>__KeyToKey__ KeyCode::L, KeyCode::S</autogen>
          <autogen>__KeyToKey__ KeyCode::W, KeyCode::MINUS</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::D</autogen>
          <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::B</autogen>
        </item>
      </item>
    </item>
    <item>
      <name>Simultaneous Key Presses</name>
      <item>
        <name>Simultaneous Key Presses [EISUU+KANA] to toggle Vi Mode</name>
        <identifier>remap.vimode_toggle_eisuukana</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::JIS_KANA, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
      </item>
      <item>
        <name>Simultaneous Key Presses [EISUU+KANA] to Return</name>
        <appendix>(We can change the key once again)</appendix>
        <identifier>remap.simultaneouskeypresses_eisuukana2return</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::JIS_EISUU, KeyCode::JIS_KANA, KeyCode::RETURN, SimultaneousKeyPresses::Option::RAW</autogen>
      </item>
      <item>
        <name>(7), 8, 9, 0 for IME</name>
        <item>
          <name>8+9 for Shift+Left</name>
          <identifier>remap.key8_plus_key9_for_shift_left</identifier>
          <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_8, KeyCode::KEY_9,
            KeyCode::CURSOR_LEFT, ModifierFlag::SHIFT_L</autogen>
        </item>

        <item>
          <name>9+0 for Shift+Right</name>
          <identifier>remap.key9_plus_key0_for_shift_right</identifier>
          <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_9, KeyCode::KEY_0,
            KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L</autogen>
        </item>

        <item>
          <name>8+0 for Right</name>
          <identifier>remap.key8_plus_key0_for_right</identifier>
          <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_8, KeyCode::KEY_0, KeyCode::CURSOR_RIGHT</autogen>
        </item>

        <item>
          <name>7+9 for Left</name>
          <identifier>remap.key7_plus_key9_for_right</identifier>
          <autogen>__SimultaneousKeyPresses__ KeyCode::KEY_7, KeyCode::KEY_9, KeyCode::CURSOR_LEFT</autogen>
        </item>

        <item>
          <name>Optional Cursors</name>
          <item>
            <name>Y+U for Up</name>
            <identifier>remap.u_plus_u</identifier>
            <autogen>__SimultaneousKeyPresses__ KeyCode::Y, KeyCode::U, KeyCode::CURSOR_UP</autogen>
          </item>
          <item>
            <name>N+M for Down</name>
            <identifier>remap.n_plus_m_for_right</identifier>
            <autogen>__SimultaneousKeyPresses__ KeyCode::N, KeyCode::M, KeyCode::CURSOR_DOWN</autogen>
          </item>
        </item>
      </item>
    </item>
    <item>
      <name>Kotoeri Hacks</name>
      <item>
        <name>Control+I to Control+K (Control+I でカタカナ変換)</name>
        <appendix>(Except in Virtual Machine, RDC)</appendix>
        <identifier>remap.jis_controlItocontrolK</identifier>
        <inputsource_only>JAPANESE</inputsource_only>
        <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
        <autogen>__KeyToKey__ KeyCode::I, VK_CONTROL | ModifierFlag::NONE, KeyCode::K, ModifierFlag::CONTROL_L</autogen>
      </item>
      <item>
        <name>Control+I to F7 (Control+I でカタカナ変換)</name>
        <appendix>(Except in Virtual Machine, RDC)</appendix>
        <identifier>remap.jis_controlItof7</identifier>
        <inputsource_only>JAPANESE</inputsource_only>
        <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
        <autogen>__KeyToKey__ KeyCode::I, VK_CONTROL | ModifierFlag::NONE, KeyCode::F7</autogen>
      </item>
    </item>
    <item>
      <name>Hack for the bug of Mac OS X</name>
      <item>
        <name>Disable Command/Control/Option/Shift+EISUU, Command/Control/Option/Shift+KANA</name>
        <appendix>(to prevent the system hangup at Snow Leopard)</appendix>
        <identifier>option.jis_drop_eisuukana_with_modifiers</identifier>
        <autogen>__DropKeyAfterRemap__ KeyCode::JIS_EISUU, VK_COMMAND</autogen>
        <autogen>__DropKeyAfterRemap__ KeyCode::JIS_KANA,  VK_COMMAND</autogen>
        <autogen>__DropKeyAfterRemap__ KeyCode::JIS_EISUU, VK_CONTROL</autogen>
        <autogen>__DropKeyAfterRemap__ KeyCode::JIS_KANA,  VK_CONTROL</autogen>
        <autogen>__DropKeyAfterRemap__ KeyCode::JIS_EISUU, VK_OPTION</autogen>
        <autogen>__DropKeyAfterRemap__ KeyCode::JIS_KANA,  VK_OPTION</autogen>
        <autogen>__DropKeyAfterRemap__ KeyCode::JIS_EISUU, VK_SHIFT</autogen>
        <autogen>__DropKeyAfterRemap__ KeyCode::JIS_KANA,  VK_SHIFT</autogen>
      </item>
    </item>
  </item>
  <item>
    <name>For Korean</name>
    <item>
      <name>Change HanEng And Hanja Key</name>
      <item>
        <name>Toggle HanEng Key(to Command_L(R)+Space)</name>
        <identifier>remap.ksc_haneng2commandLSpace</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_KANA, KeyCode::COMMAND_L, KeyCode::SPACE, ModifierFlag::COMMAND_R</autogen>
      </item>
      <item>
        <name>Toggle Hanja Key(to Option_L(R)+Return)</name>
        <identifier>remap.ksc_hanja2optionLreturn</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::JIS_EISUU, KeyCode::OPTION_L, KeyCode::RETURN, ModifierFlag::OPTION_R</autogen>
      </item>
      <item>
        <name>Toggle Option_R(Alt_R) Key(to Option_L(R)+Enter)</name>
        <identifier>remap.ksc_optionR2optionLreturn</identifier>
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::ENTER, ModifierFlag::OPTION_L</autogen>
      </item>
    </item>
  </item>
  <item>
    <name>For Russian</name>
    <item>
      <name>Change Backquote(`) Key</name>
      <item>
        <name>Backquote(`) to Paragraph(§)</name>
        <identifier>remap.russian_backquote2paragraph</identifier>
        <autogen>__KeyToKey__ KeyCode::BACKQUOTE, KeyCode::RUSSIAN_PARAGRAPH</autogen>
      </item>
    </item>
    <item>
      <name>Change Command_L Key</name>
      <item>
        <name>Command_L to Command_L</name>
        <appendix>(+ When you type Command_L only, change inputsource to english)</appendix>
        <identifier>remap.russian_commandL2commandL_english</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH</autogen>
      </item>
    </item>
    <item>
      <name>Change Command_R Key</name>
      <item>
        <name>Command_R to Command_R</name>
        <appendix>(+ When you type Command_R only, change inputsource to russian)</appendix>
        <identifier>remap.russian_commandR2commandR_russian</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_CHANGE_INPUTSOURCE_RUSSIAN</autogen>
      </item>
    </item>
    <item>
      <name>Change Paragraph(§) Key</name>
      <item>
        <name>Paragraph(§) to 1</name>
        <identifier>remap.russian_paragraph2one</identifier>
        <autogen>__KeyToKey__ KeyCode::RUSSIAN_PARAGRAPH, KeyCode::KEY_1</autogen>
      </item>
      <item>
        <name>Paragraph(§) to Backquote(`)</name>
        <identifier>remap.russian_paragraph2backquote</identifier>
        <autogen>__KeyToKey__ KeyCode::RUSSIAN_PARAGRAPH, KeyCode::BACKQUOTE</autogen>
      </item>
      <item>
        <name>Paragraph(§) to Escape</name>
        <identifier>remap.russian_paragraph2escape</identifier>
        <autogen>__KeyToKey__ KeyCode::RUSSIAN_PARAGRAPH, KeyCode::ESCAPE</autogen>
      </item>
      <item>
        <name>Paragraph(§) to Forward Delete</name>
        <identifier>remap.russian_paragraph2forwarddelete</identifier>
        <autogen>__KeyToKey__ KeyCode::RUSSIAN_PARAGRAPH, KeyCode::FORWARD_DELETE</autogen>
      </item>
    </item>
    <item>
      <name>Change Shift_L Key</name>
      <item>
        <name>Shift_L to Shift_L</name>
        <appendix>(+ When you type Shift_L only, change inputsource to english)</appendix>
        <identifier>remap.russian_shiftL2shiftL_english</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH</autogen>
      </item>
      <item>
        <name>Shift_L to Shift_L</name>
        <appendix>(+ When you type Shift_L only, change inputsource to english)</appendix>
        <appendix></appendix>
        <appendix>(+ When you type Command+Shift_L only,</appendix>
        <appendix>change inputsource to "English - Ilya Birman Typography".)</appendix>
        <identifier>remap.russian_shiftL2shiftL_english_typography</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, VK_COMMAND, KeyCode::SHIFT_L, ModifierFlag::COMMAND_L, KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH_TYPOGRAPHIC</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L,             KeyCode::SHIFT_L,                          KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH</autogen>
      </item>
    </item>
    <item>
      <name>Change Shift_R Key</name>
      <item>
        <name>Shift_R to Shift_R</name>
        <appendix>(+ When you type Shift_R only, change inputsource to russian)</appendix>
        <identifier>remap.russian_shiftR2shiftR_russian</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::VK_CHANGE_INPUTSOURCE_RUSSIAN</autogen>
      </item>
      <item>
        <name>Shift_R to Shift_R</name>
        <appendix>(+ When you type Shift_R only, change inputsource to russian)</appendix>
        <appendix></appendix>
        <appendix>(+ When you type Command+Shift_R only,</appendix>
        <appendix>change inputsource to "Russian - Ilya Birman Typography".)</appendix>
        <identifier>remap.russian_shiftR2shiftR_russian_typography</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, VK_COMMAND, KeyCode::SHIFT_R, ModifierFlag::COMMAND_L, KeyCode::VK_CHANGE_INPUTSOURCE_RUSSIAN_TYPOGRAPHIC</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R,             KeyCode::SHIFT_R,                          KeyCode::VK_CHANGE_INPUTSOURCE_RUSSIAN</autogen>
      </item>
    </item>
    <item>
      <name>Change Tilde(~) Key</name>
      <item>
        <name>Tilde(~) to Shift_L</name>
        <identifier>remap.russian_tilda2shiftL</identifier>
        <autogen>__KeyToKey__ KeyCode::RUSSIAN_TILDE, KeyCode::SHIFT_L</autogen>
      </item>
    </item>

    <item>
      <name>Change Option_R+,(≤) to Comma(,) Key for Russian</name>
      <identifier>remap.change_option_r_plus_comma_to_comma_for_russian</identifier>
      <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::OPTION_R,
        KeyCode::KEY_6, VK_SHIFT</autogen>
    </item>
    <item>
      <name>Change Option_R+.(≥) to Dot(.) Key for Russian</name>
      <identifier>remap.change_option_r_plus_dot_to_dot_for_russian</identifier>
      <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::OPTION_R,
        KeyCode::KEY_7, VK_SHIFT</autogen>
    </item>
  </item>
  <item>
    <name>For Slovenian</name>
    <item>
      <name>Remap keyboard (symbol) shortcuts to standard Windows/Linux style</name>
      <appendix>(important characters only)</appendix>
      <appendix></appendix>
      <identifier>remap.slovenian_win_style_shortcuts</identifier>

      <inputsource_only>SLOVENIAN</inputsource_only>

      <appendix>Option_R (AltGr) + 1 = ~</appendix>
      <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::OPTION_R,
        KeyCode::N, ModifierFlag::OPTION_L</autogen>

      <appendix>Option_R (AltGr) + 5 = °</appendix>
      <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::OPTION_R,
        KeyCode::KEY_8, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>

      <appendix>Shift_L + 7 = / and / = ' (plus hack for ? - second line)</appendix>
      <autogen>__KeyToKey__ KeyCode::KEY_7, VK_SHIFT,
        KeyCode::MINUS</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS, VK_SHIFT,
        KeyCode::MINUS, VK_SHIFT</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS,
        KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>

      <appendix>Key between Y and Shift_L = &lt; &gt;</appendix>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, VK_SHIFT,
        KeyCode::RUSSIAN_TILDE, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::RUSSIAN_TILDE</autogen>

      <appendix>Option_R (AltGr) + Q = \</appendix>
      <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::OPTION_R,
        KeyCode::BACKSLASH, ModifierFlag::OPTION_L</autogen>

      <appendix>Option_R (AltGr) + W = |</appendix>
      <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::OPTION_R,
        KeyCode::BACKSLASH, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>

      <appendix>Option_R (AltGr) + E = €</appendix>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::OPTION_R,
        KeyCode::KEY_5, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>

      <appendix>Option_R (AltGr) + F = [ ... Option_R (AltGr) + G = ]</appendix>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::OPTION_R,
        KeyCode::BRACKET_LEFT, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::OPTION_R,
        KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_L</autogen>

      <appendix>Option_R (AltGr) + V = @</appendix>
      <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::OPTION_R,
        KeyCode::KEY_2, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>

      <appendix>Option_R (AltGr) + B = { ... Option_R (AltGr) + N = }</appendix>
      <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::OPTION_R,
        KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>

      <autogen>__KeyToKey__ KeyCode::N, ModifierFlag::OPTION_R,
        KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
    </item>
  </item>

  <item>
    <name>For Spanish</name>
    <item>
      <name>Change Option_R+4 to Ñ (Option_R+;)</name>
      <identifier>remap.pc_applicationoption4n</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::OPTION_R, KeyCode::SEMICOLON, ModifierFlag::OPTION_R</autogen>
    </item>
    <item>
      <name>Swap Ordinal-indicator(º) and Less-Than(&lt;)</name>
      <identifier>remap.spanish_swap_ordinal_indicator_lessthan</identifier>
      <autogen>__KeyToKey__ KeyCode::SPANISH_ORDINAL_INDICATOR, KeyCode::SPANISH_LESS_THAN</autogen>
      <autogen>__KeyToKey__ KeyCode::SPANISH_LESS_THAN, KeyCode::SPANISH_ORDINAL_INDICATOR</autogen>
    </item>
  </item>
  <item>
    <name>For Swedish</name>
    <item>
      <name>Space to Option_L (when inputsource == swedish)</name>
      <identifier>remap.swedish_space2optionL_swedish</identifier>
      <inputsource_only>SWEDISH</inputsource_only>
      <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::OPTION_L</autogen>
    </item>
    <item>
      <name>Command_L to Command_L</name>
      <appendix>(+ When you type Command_L only, change inputsource to english)</appendix>
      <identifier>remap.swedish_commandL2commandL_english</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH</autogen>
    </item>
    <item>
      <name>Command_R to Command_R</name>
      <appendix>(+ When you type Command_R only, change inputsource to swedish)</appendix>
      <identifier>remap.swedish_commandR2commandR_swedish</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_CHANGE_INPUTSOURCE_SWEDISH</autogen>
    </item>
    <item>
      <name>Swap Section(§) and Less-Than(&lt;)</name>
      <appendix>(only in virtual machine)</appendix>
      <identifier>remap.swedish_swap_section_lessthan_vm</identifier>
      <only>VIRTUALMACHINE</only>
      <autogen>__KeyToKey__ KeyCode::SWEDISH_SECTION, KeyCode::SWEDISH_LESS_THAN</autogen>
      <autogen>__KeyToKey__ KeyCode::SWEDISH_LESS_THAN, KeyCode::SWEDISH_SECTION</autogen>
    </item>
  </item>
  <item>
    <name>For Swiss</name>
    <item>
      <name>Swap Y and Z</name>
      <identifier>remap.swiss_swap_y_z</identifier>
      <autogen>__KeyToKey__ KeyCode::Y, KeyCode::Z</autogen>
      <autogen>__KeyToKey__ KeyCode::Z, KeyCode::Y</autogen>
    </item>
    <item>
      <name>Swap Section(§) and Less-Than(&lt;)</name>
      <appendix>(only in virtual machine)</appendix>
      <identifier>remap.swiss_swap_section_lessthan_vm</identifier>
      <only>VIRTUALMACHINE</only>
      <autogen>__KeyToKey__ KeyCode::SWISS_SECTION, KeyCode::SWISS_LESS_THAN</autogen>
      <autogen>__KeyToKey__ KeyCode::SWISS_LESS_THAN, KeyCode::SWISS_SECTION</autogen>
    </item>
    <item>
      <name>Change Section(§) to SHIFT+PC_INSERT</name>
      <appendix>(only in Citrix Online Plug-in for Mac)</appendix>
      <identifier>remap.swiss_section_insert_citrix</identifier>
      <only>CITRIX_ONLINE_PLUG_IN</only>
      <autogen>__KeyToKey__ KeyCode::SWISS_SECTION, KeyCode::PC_INSERT, ModifierFlag::SHIFT_L</autogen>
    </item>
  </item>

  <item>
    <name>For Ukrainian</name>
    <item>
      <name>Swap и and і</name>
      <identifier>remap.ukrainian_swap_s_b</identifier>
      <autogen>__KeyToKey__ KeyCode::S, KeyCode::B</autogen>
      <autogen>__KeyToKey__ KeyCode::B, KeyCode::S</autogen>
    </item>
    <item>
      <name>Command_L+Shift_L to Command_L+Shift_L (when inputsource == ukrainian)</name>
      <appendix>(+ When you type Command_L+Shift_L only, change inputsource to english)</appendix>
      <inputsource_only>UKRAINIAN</inputsource_only>
      <identifier>remap.ukrainian_shiftcommandL2shiftLcommandL_english</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, VK_COMMAND, KeyCode::SHIFT_L, ModifierFlag::COMMAND_L, KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH</autogen>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, VK_SHIFT, KeyCode::COMMAND_L, ModifierFlag::SHIFT_L, KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH</autogen>
    </item>
    <item>
      <name>Command_L+Shift_L to Command_L+Shift_L</name>
      <appendix>(+ When you type Command_L+Shift_L only, change inputsource to ukrainian)</appendix>
      <!-- <inputsource_only>ENGLISH</inputsource_only> -->
      <identifier>remap.ukrainian_shiftcommandL2shiftLcommandL_ukrainian</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_L, VK_COMMAND, KeyCode::SHIFT_L, ModifierFlag::COMMAND_L, KeyCode::VK_CHANGE_INPUTSOURCE_UKRAINIAN</autogen>
      <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_L, VK_SHIFT, KeyCode::COMMAND_L, ModifierFlag::SHIFT_L, KeyCode::VK_CHANGE_INPUTSOURCE_UKRAINIAN</autogen>
    </item>
  </item>

  <item>
    <name>Samples for KeyRemap4MacBook Developer</name>
    <item>
      <name>SetKeyboardType</name>
      <item>
        <name>Set keyboardType = KeyboardType::MACBOOK</name>
        <identifier>remap.samples_setkeyboardtype_macbook</identifier>
        <autogen>__SetKeyboardType__ KeyboardType::MACBOOK</autogen>
      </item>
      <item>
        <name>Set keyboardType = KeyboardType::MACBOOK_3_1</name>
        <identifier>remap.samples_setkeyboardtype_macbook_3_1</identifier>
        <autogen>__SetKeyboardType__ KeyboardType::MACBOOK_3_1</autogen>
      </item>
      <item>
        <name>Set keyboardType = KeyboardType::JIS_MACBOOK_2008</name>
        <identifier>remap.samples_setkeyboardtype_jis_macbook_2008</identifier>
        <autogen>__SetKeyboardType__ KeyboardType::JIS_MACBOOK_2008</autogen>
      </item>
    </item>
    <item>
      <name>Pass Through Mode</name>
      <item>
        <name>Core</name>
        <appendix>Change A to toggle "Pass Through Mode"</appendix>
        <identifier>passthrough.samples</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::VK_CONFIG_TOGGLE_notsave_passthrough</autogen>
      </item>
      <item>
        <name>Samples</name>
        <appendix>B to C</appendix>
        <appendix>Volume Mute to A</appendix>
        <appendix>RightClick+CursorMove to ScrollWheel</appendix>
        <appendix>Simultaneous Key Presses [D+F] to Escape</appendix>
        <identifier>remap.samples_passthrough</identifier>
        <autogen>__ShowStatusMessage__ Samples</autogen>
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::C</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, KeyCode::A</autogen>
        <autogen>__PointingRelativeToScroll__ PointingButton::RIGHT</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::D, KeyCode::ESCAPE</autogen>
      </item>
    </item>

    <item>
      <name>ShowStatusMessage</name>
      <item>
        <name>Sample1</name>
        <identifier>remap.samples_showstatusmessage_sample1</identifier>
        <autogen>__ShowStatusMessage__ Sample1</autogen>
      </item>
      <item>
        <name>Sample2</name>
        <identifier>remap.samples_showstatusmessage_sample2</identifier>
        <autogen>__ShowStatusMessage__ Sample2</autogen>
      </item>
      <item>
        <name>(Empty)</name>
        <identifier>remap.samples_showstatusmessage_empty</identifier>
        <autogen>__ShowStatusMessage__</autogen>
      </item>
    </item>

    <item>
      <name>KeyToKey</name>
      <item>
        <name>Standard</name>
        <appendix>A to B (KeyToKey)</appendix>
        <appendix>S to SHIFT_L (KeyToModifier)</appendix>
        <appendix>SHIFT_L to Return (ModifierToKey)</appendix>
        <appendix>Option_L to Command_L</appendix>
        <identifier>remap.samples_keytokey_standard</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::B</autogen>
        <autogen>__KeyToKey__ KeyCode::S, KeyCode::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::RETURN</autogen>
        <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
      </item>

      <item>
        <name>VK_SHIFT is alias to ModifierFlag::SHIFT_L, ModifierFlag::SHIFT_R</name>
        <appendix>__KeyToKey__ KeyCode::A, VK_SHIFT, KeyCode::B</appendix>
        <appendix>==&gt; __KeyToKey__ KeyCode::A, ModifierFlag::SHIFT_L, KeyCode::B</appendix>
        <appendix>==&gt; __KeyToKey__ KeyCode::A, ModifierFlag::SHIFT_R, KeyCode::B</appendix>
        <appendix></appendix>
        <appendix>Multiple VK_* in one definition are replaced same value.</appendix>
        <appendix>__KeyToKey__ KeyCode::C, VK_MOD_ANY, KeyCode::D, VK_MOD_ANY, KeyCode::E</appendix>
        <appendix>==&gt; 2 VK_MOD_ANYs are replaced to ModifierFlag::COMMAND_L</appendix>
        <appendix>==&gt; 2 VK_MOD_ANYs are replaced to ModifierFlag::COMMAND_R</appendix>
        <appendix>==&gt; 2 VK_MOD_ANYs are replaced to ModifierFlag::CONTROL_L</appendix>
        <appendix>==&gt; 2 VK_MOD_ANYs are replaced to ModifierFlag::CONTROL_R</appendix>
        <appendix>==&gt; 2 VK_MOD_ANYs are replaced to ModifierFlag::COMMAND_L|ModifierFlag::CONTROL_L</appendix>
        <appendix>==&gt; ...</appendix>
        <identifier>remap.samples_keytokey_vk_modifier</identifier>
        <autogen>__KeyToKey__ KeyCode::A, VK_SHIFT, KeyCode::B</autogen>
        <autogen>__KeyToKey__ KeyCode::C, VK_MOD_ANY, KeyCode::D, VK_MOD_ANY, KeyCode::E</autogen>
      </item>

      <item>
        <name>Key To XXX</name>
        <appendix>A to Shift_L+B (Key to Key+Modifier)</appendix>
        <appendix>B to Command_L+Shift_L (Key to Modifier+Modifier)</appendix>
        <appendix>S to Shift_L+Shift_R</appendix>
        <appendix>Shift+C to Space (Key+Modifier To Key)</appendix>
        <appendix>Shift+D to Option_L (Key+Modifier To Modifier)</appendix>
        <appendix>Shift+E to Control_L+Space (Key+Modifier To Key+Modifier)</appendix>
        <appendix>Shift+F to Option_L+Shift_L (Key+Modifier To Modifier+Modifier)</appendix>
        <appendix>G to CapsLock (To CapsLock)</appendix>
        <appendix>Shift+Control+H to Option_L+Space</appendix>
        <appendix>Fn+hjkl to Left/Down/Up/Right (Key+Fn to Key) (around KeyPad)</appendix>
        <appendix>1 to A (only if no Modifiers)</appendix>
        <appendix>2 to A (only if ModifierFlag == Shift_L)</appendix>
        <identifier>remap.samples_keytokey_key2xxx</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::B, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::COMMAND_L, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::S, KeyCode::SHIFT_R, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::C, VK_SHIFT, KeyCode::SPACE</autogen>
        <autogen>__KeyToKey__ KeyCode::D, VK_SHIFT, KeyCode::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::E, VK_SHIFT, KeyCode::SPACE, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::F, VK_SHIFT, KeyCode::SHIFT_L, ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::G, KeyCode::CAPSLOCK</autogen>
        <autogen>__KeyToKey__ KeyCode::H, VK_CONTROL | VK_SHIFT, KeyCode::SPACE, ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::FN, KeyCode::CURSOR_LEFT</autogen>
        <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::FN, KeyCode::CURSOR_DOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::FN, KeyCode::CURSOR_UP</autogen>
        <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::FN, KeyCode::CURSOR_RIGHT</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::NONE, KeyCode::A</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::A</autogen>
      </item>

      <item>
        <name>Key To XXX(2)</name>
        <appendix>Option+A to Command_L+Shift_L+Tab</appendix>
        <appendix>Option+S to Command_L+Tab</appendix>
        <identifier>remap.samples_keytokey_key2xxx_2</identifier>
        <autogen>__KeyToKey__ KeyCode::A, VK_OPTION, KeyCode::TAB, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::S, VK_OPTION, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
      </item>

      <item>
        <name>Key To XXX(3)</name>
        <appendix>A to CapsLock</appendix>
        <appendix>CapsLock+S to Shift_L+1</appendix>
        <appendix>CapsLock+O to Option_L+2</appendix>
        <appendix>CapsLock+C to Command_L+3</appendix>
        <appendix></appendix>
        <appendix>Change Shift_L key to turning CapsLock off</appendix>
        <appendix>(Retain Shift_L movement when CapsLock is off)</appendix>
        <appendix></appendix>
        <appendix>Change Shift_R key to turning CapsLock off</appendix>
        <appendix>(Retain Shift_R movement at all times)</appendix>
        <identifier>remap.samples_keytokey_key2xxx_3</identifier>
        <autogen>__KeyToKey__ KeyCode::A,                               KeyCode::CAPSLOCK</autogen>
        <autogen>__KeyToKey__ KeyCode::S,       ModifierFlag::CAPSLOCK, KeyCode::KEY_1, ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::O,       ModifierFlag::CAPSLOCK, KeyCode::KEY_2, ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::C,       ModifierFlag::CAPSLOCK, KeyCode::KEY_3, ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::SHIFT_L, ModifierFlag::CAPSLOCK, KeyCode::CAPSLOCK, KeyCode::VK_NONE</autogen>
        <block>
          <modifier_only>ModifierFlag::CAPSLOCK</modifier_only>
          <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::CAPSLOCK, KeyCode::SHIFT_R</autogen>
        </block>
      </item>

      <item>
        <name>Key To XXX(4)</name>
        <appendix>A to Shift_L</appendix>
        <appendix>Shift_L+A to B</appendix>
        <identifier>remap.samples_keytokey_key2xxx_4</identifier>
        <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::SHIFT_L, KeyCode::B</autogen>
        <autogen>__KeyToKey__ KeyCode::A,                        KeyCode::SHIFT_L</autogen>
      </item>

      <item>
        <name>Modifier To XXX</name>
        <appendix>Shift_R to Command_L+Option_L (Modifier to Modifier+Modifier)</appendix>
        <appendix>Fn+Option_L to Command_L (Modifier+Modifier To Modifier)</appendix>
        <identifier>remap.samples_keytokey_modifier2xxx</identifier>
        <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::COMMAND_L, ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToKey__ KeyCode::OPTION_L, ModifierFlag::FN, KeyCode::COMMAND_L</autogen>
      </item>

      <item>
        <name>Modifier To XXX(2)</name>
        <appendix>Shift_L to Shift_L (if no other modifiers pressed)</appendix>
        <appendix>Shift_L to Command_L</appendix>
        <appendix>Shift+A to B</appendix>
        <appendix>Shift_R to Shift_R+A (if no other modifiers pressed)</appendix>
        <appendix>Command_L+Command_R to Command_L+Command_R (if no other modifiers pressed)</appendix>
        <appendix>Command_L+Command_R+A to B</appendix>
        <appendix>Command_R to Option_R</appendix>
        <identifier>remap.samples_keytokey_modifier2xxx_2</identifier>
        <autogen>__KeyToKey__ KeyCode::SHIFT_L, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::A, VK_SHIFT, KeyCode::B</autogen>
        <autogen>__KeyToKey__ KeyCode::SHIFT_R, ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::A, ModifierFlag::SHIFT_R</autogen>
        <autogen>__KeyToKey__ KeyCode::COMMAND_R, ModifierFlag::COMMAND_L | ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::COMMAND_R, ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::COMMAND_L | ModifierFlag::COMMAND_R, KeyCode::B</autogen>
        <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
      </item>

      <item>
        <name>Modifier To XXX(3)</name>
        <appendix>Shift_R to A</appendix>
        <appendix>Shift_L+Shift_R to B</appendix>
        <appendix>Command_R to A</appendix>
        <appendix>Command_L+Command_R to B</appendix>
        <identifier>remap.samples_keytokey_modifier2xxx_3</identifier>
        <!-- including self modifier (ModifierFlag::SHIFT_R) -->
        <autogen>__KeyToKey__ KeyCode::SHIFT_R, ModifierFlag::SHIFT_L | ModifierFlag::SHIFT_R, KeyCode::B</autogen>
        <autogen>__KeyToKey__ KeyCode::SHIFT_R, KeyCode::A</autogen>
        <!-- excluding self modifier (ModifierFlag::COMMAND_R) -->
        <autogen>__KeyToKey__ KeyCode::COMMAND_R, ModifierFlag::COMMAND_L, KeyCode::B</autogen>
        <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::A</autogen>
      </item>

      <item>
        <name>Combination</name>
        <appendix>A to B,C (Standard)</appendix>
        <appendix>B to A,B,Shift_L+C,D,Control_L+P (Key To)</appendix>
        <appendix>C to JIS_KANA,A,I,JIS_EISUU,U (Key To with Japanese)</appendix>
        <appendix>Shift_L to A,B,Control_L+B,Shift_L+C,D (Modifier To)</appendix>
        <appendix>Control+D to Shift_L+A, Control_L+F (Key+Modifier To)</appendix>
        <appendix>E to Type "http://pqrs.org/macosx/keyremap4macbook/"</appendix>
        <appendix>F to CapsLock,A,S,D,CapsLock</appendix>
        <appendix>G to Option_L,Shift_L,A,S</appendix>
        <appendix></appendix>
        <appendix>H to A,KeyCode::VK_NONE</appendix>
        <appendix>(KeyDown and KeyUp will be fired at the same time when H key is pressed)</appendix>
        <identifier>remap.samples_keytokey_combination</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::B, KeyCode::C</autogen>
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::A, KeyCode::B, KeyCode::C, ModifierFlag::SHIFT_L, KeyCode::D, KeyCode::P, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::C, KeyCode::JIS_KANA, KeyCode::A, KeyCode::I, KeyCode::JIS_EISUU, KeyCode::U</autogen>
        <autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::A, KeyCode::B, KeyCode::B, ModifierFlag::CONTROL_L, KeyCode::C, ModifierFlag::SHIFT_L, KeyCode::D</autogen>
        <autogen>__KeyToKey__ KeyCode::D, VK_CONTROL, KeyCode::A, ModifierFlag::SHIFT_L, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::H, KeyCode::T, KeyCode::T, KeyCode::P, KeyCode::SEMICOLON, ModifierFlag::SHIFT_L, KeyCode::SLASH, KeyCode::SLASH, KeyCode::P, KeyCode::Q, KeyCode::R, KeyCode::S, KeyCode::DOT, KeyCode::O, KeyCode::R, KeyCode::G, KeyCode::SLASH, KeyCode::M, KeyCode::A, KeyCode::C, KeyCode::O, KeyCode::S, KeyCode::X, KeyCode::SLASH, KeyCode::K, KeyCode::E, KeyCode::Y, KeyCode::R, KeyCode::E, KeyCode::M, KeyCode::A, KeyCode::P, KeyCode::KEY_4, KeyCode::M, KeyCode::A, KeyCode::C, KeyCode::B, KeyCode::O, KeyCode::O, KeyCode::K, KeyCode::SLASH</autogen>
        <autogen>__KeyToKey__ KeyCode::F, KeyCode::CAPSLOCK, KeyCode::A, KeyCode::S, KeyCode::D, KeyCode::CAPSLOCK</autogen>
        <autogen>__KeyToKey__ KeyCode::G, KeyCode::OPTION_L, KeyCode::SHIFT_L, KeyCode::A, KeyCode::S</autogen>
        <autogen>__KeyToKey__ KeyCode::H, KeyCode::A, KeyCode::VK_NONE</autogen>
      </item>

      <item>
        <name>Combination (2)</name>
        <appendix>A to A,S,Shift_L (Shift_L is active while we're pressing A key)</appendix>
        <appendix>Shift_R to A,S,Control_L (Control_L is active while we're pressing Shift_R key)</appendix>
        <appendix>Command+B to A,S,Shift_L (Shift_L is active while we're pressing B key)</appendix>
        <appendix>Control_L+Option_L to A,S,Shift_L (Shift_L is active while we're pressing Option_L key)</appendix>
        <identifier>remap.samples_keytokey_combination1</identifier>
        <autogen>__KeyToKey__ KeyCode::A,                                 KeyCode::A, KeyCode::S, KeyCode::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::SHIFT_R,                           KeyCode::A, KeyCode::S, KeyCode::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::B,        VK_COMMAND,              KeyCode::A, KeyCode::S, KeyCode::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::OPTION_L, ModifierFlag::CONTROL_L, KeyCode::A, KeyCode::S, KeyCode::SHIFT_L</autogen>
      </item>

      <item>
        <name>Combination(3)</name>
        <appendix>Shift_L to A,Shift_L+S,D (if no other modifiers pressed)</appendix>
        <identifier>remap.samples_keytokey_combination_3</identifier>
        <autogen>__KeyToKey__ KeyCode::SHIFT_L, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::A, KeyCode::S, ModifierFlag::SHIFT_L, KeyCode::D</autogen>
      </item>

      <item>
        <name>Combination(4)</name>
        <appendix>A to CapsLock,A,S</appendix>
        <appendix>// This has a issue with key repeat.</appendix>
        <appendix>// In key repeat, CapsLock status is not changed.</appendix>
        <identifier>remap.samples_keytokey_combination_4</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::CAPSLOCK, KeyCode::A, KeyCode::S</autogen>
      </item>

      <item>
        <name>NoRepeat</name>
        <appendix>1 to A (with Option::NOREPEAT)</appendix>
        <appendix>2 to A,B,C (with Option::NOREPEAT)</appendix>
        <appendix>3 to Shift_L (with Option::NOREPEAT)</appendix>
        <identifier>remap.samples_keytokey_norepeat</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::A, Option::NOREPEAT</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::A, KeyCode::B, KeyCode::C, Option::NOREPEAT</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3, KeyCode::SHIFT_L, Option::NOREPEAT</autogen>
      </item>

      <item>
        <name>BeforeKeyDown, AfterKeyUp</name>
        <appendix>1 to A (BeforeKeyDown Return, AfterKeyUp Tab)</appendix>
        <appendix>Shift_R to A (BeforeKeyDown Control+B,C AfterKeyUp Option+D,E)</appendix>
        <appendix></appendix>
        <appendix>Control_L+2 to Control+Option+A</appendix>
        <appendix>(BeforeKeyDown Shift+B,C AfterKeyUp Option+D,E,Control+F)</appendix>
        <appendix></appendix>
        <appendix>Control_L+Shift_L to A,B</appendix>
        <appendix>(BeforeKeyDown C AfterKeyUp D)</appendix>
        <appendix></appendix>
        <appendix>Change Input Source while pressing right option key.</appendix>
        <appendix>(Sending Command+Space when pressing/releasing right option key.)</appendix>
        <identifier>remap.samples_keytokey_beforekeydown</identifier>
        <autogen>__KeyToKey__
          KeyCode::KEY_1, KeyCode::A,
          Option::KEYTOKEY_BEFORE_KEYDOWN, KeyCode::RETURN,
          Option::KEYTOKEY_AFTER_KEYUP, KeyCode::TAB
        </autogen>
        <autogen>__KeyToKey__
          KeyCode::SHIFT_R, KeyCode::A,
          Option::KEYTOKEY_BEFORE_KEYDOWN, KeyCode::B, ModifierFlag::CONTROL_L, KeyCode::C,
          Option::KEYTOKEY_AFTER_KEYUP,    KeyCode::D, ModifierFlag::OPTION_L,  KeyCode::E
        </autogen>
        <autogen>__KeyToKey__
          KeyCode::KEY_2, ModifierFlag::CONTROL_L, KeyCode::A, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L,
          Option::KEYTOKEY_BEFORE_KEYDOWN, KeyCode::B, ModifierFlag::SHIFT_R,  KeyCode::C,
          Option::KEYTOKEY_AFTER_KEYUP,    KeyCode::D, ModifierFlag::OPTION_L, KeyCode::E, KeyCode::F, ModifierFlag::CONTROL_L
        </autogen>
        <autogen>__KeyToKey__
          KeyCode::SHIFT_L, ModifierFlag::CONTROL_L, KeyCode::A, KeyCode::B,
          Option::KEYTOKEY_BEFORE_KEYDOWN, KeyCode::C,
          Option::KEYTOKEY_AFTER_KEYUP,    KeyCode::D
        </autogen>
        <!-- Hack: Sending Command_L key event after send Command+Space to release Command key -->
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::VK_NONE,
          Option::KEYTOKEY_BEFORE_KEYDOWN, KeyCode::SPACE, ModifierFlag::COMMAND_L, KeyCode::COMMAND_L,
          Option::KEYTOKEY_AFTER_KEYUP,    KeyCode::SPACE, ModifierFlag::COMMAND_L, KeyCode::COMMAND_L
        </autogen>
      </item>

      <item>
        <name>Apply from the top sequentially.</name>
        <appendix>1 to A</appendix>
        <appendix>1 to B (skipped)</appendix>
        <appendix>2 to B </appendix>
        <appendix>2 to C (skipped)</appendix>
        <identifier>remap.samples_keytokey_apply_from_to_top</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::A</autogen>
        <block>
          <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::B</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::B</autogen>
        </block>
        <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::C</autogen>
      </item>

      <item>
        <name>Apply from the top sequentially (&lt;list&gt; and &lt;item&gt;)</name>
        <appendix>(Turn on all settings. The settings labeled "skipped" will be ignored.)</appendix>
        <item>
          <name>1 to A</name>
          <identifier>remap.samples_keytokey_apply_from_to_top_item1</identifier>
          <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::A</autogen>
        </item>
        <item>
          <name>list</name>
          <item>
            <name>1 to B (skipped)</name>
            <identifier>remap.samples_keytokey_apply_from_to_top_item2</identifier>
            <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::B</autogen>
          </item>
          <item>
            <name>2 to B</name>
            <identifier>remap.samples_keytokey_apply_from_to_top_item3</identifier>
            <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::B</autogen>
          </item>
        </item>
        <item>
          <name>2 to C (skipped)</name>
          <identifier>remap.samples_keytokey_apply_from_to_top_item4</identifier>
          <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::C</autogen>
        </item>
      </item>
    </item>

    <item>
      <name>KeyToConsumer</name>
      <item>
        <name>Standard</name>
        <appendix>A to Volume Mute</appendix>
        <appendix>Shift+B to Volume Mute (With Modifier)</appendix>
        <appendix>Shift_L to Volume Mute (Modifier To)</appendix>
        <appendix>C to Option_L+Volume Mute (To Key+Modifier)</appendix>
        <appendix>D to Volume Up, Brightness Up</appendix>
        <identifier>remap.samples_keytoconsumer</identifier>
        <autogen>__KeyToConsumer__ KeyCode::A, ConsumerKeyCode::VOLUME_MUTE</autogen>
        <autogen>__KeyToConsumer__ KeyCode::B, VK_SHIFT, ConsumerKeyCode::VOLUME_MUTE</autogen>
        <autogen>__KeyToConsumer__ KeyCode::SHIFT_L, ConsumerKeyCode::VOLUME_MUTE</autogen>
        <autogen>__KeyToConsumer__ KeyCode::C, ConsumerKeyCode::VOLUME_MUTE, ModifierFlag::OPTION_L</autogen>
        <autogen>__KeyToConsumer__ KeyCode::D, ConsumerKeyCode::VOLUME_UP, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
      </item>
      <item>
        <name>NoRepeat</name>
        <appendix>A to Volume Up (with Option::NOREPEAT)</appendix>
        <appendix>S to Volume Up</appendix>
        <identifier>remap.samples_keytoconsumer_norepeat</identifier>
        <autogen>__KeyToConsumer__ KeyCode::A, ConsumerKeyCode::VOLUME_UP, Option::NOREPEAT</autogen>
        <autogen>__KeyToConsumer__ KeyCode::S, ConsumerKeyCode::VOLUME_UP</autogen>
      </item>
    </item>

    <item>
      <name>ConsumerToKey</name>
      <item>
        <name>Standard</name>
        <appendix>Command+Volume Down to A,S,Shift_L+D,Control_L+F,G</appendix>
        <appendix>Volume Down to A</appendix>
        <appendix>Option+Volume Up to Shift_L (Key+Modifier to Modifier)</appendix>
        <appendix>Shift+Volume Up to B (with Modifier)</appendix>
        <appendix>Volume Up to Control_L (to Modifier)</appendix>
        <appendix>Option+Volume Mute to Shift_L+C (to Key+Modifier)</appendix>
        <appendix>NumLock to A</appendix>
        <!-- Note: -->
        <!-- NumLock is a special key. When we press "A" key with holding NumLock key, there is no key down event occurred -->
        <!-- Therefore we cannot change NumLock to Modifier -->
        <identifier>remap.samples_consumertokey</identifier>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN, VK_COMMAND, KeyCode::A, KeyCode::S, KeyCode::D, ModifierFlag::SHIFT_L, KeyCode::F, ModifierFlag::CONTROL_L, KeyCode::G</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN, KeyCode::A</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP, VK_OPTION, KeyCode::SHIFT_L</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP, VK_SHIFT, KeyCode::B</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_UP, KeyCode::CONTROL_L</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, VK_OPTION, KeyCode::C, ModifierFlag::SHIFT_L</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::NUMLOCK, KeyCode::A</autogen>
      </item>
      <item>
        <name>NoRepeat</name>
        <appendix>Volume Down to A (with Option::NOREPEAT)</appendix>
        <identifier>remap.samples_consumertokey_norepeat</identifier>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_DOWN, KeyCode::A, Option::NOREPEAT</autogen>
      </item>
    </item>

    <item>
      <name>ConsumerToConsumer</name>
      <item>
        <name>Standard</name>
        <appendix>Volume Down to Volume Mute</appendix>
        <appendix>Shift+Volume Up to Volume Mute (with Modifier)</appendix>
        <appendix>NumLock to Volume Mute</appendix>
        <identifier>remap.samples_consumertoconsumer</identifier>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_DOWN, ConsumerKeyCode::VOLUME_MUTE</autogen>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_UP, VK_SHIFT, ConsumerKeyCode::VOLUME_MUTE</autogen>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::NUMLOCK, ConsumerKeyCode::VOLUME_MUTE</autogen>
      </item>
      <item>
        <name>Standard(2)</name>
        <appendix>Volume Mute to Volume Up</appendix>
        <identifier>remap.samples_consumertoconsumer_2</identifier>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_MUTE, ConsumerKeyCode::VOLUME_UP</autogen>
      </item>
      <item>
        <name>Combination</name>
        <appendix>Volume Mute to Volume Up,Brightness Up</appendix>
        <identifier>remap.samples_consumertoconsumer_combination</identifier>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_MUTE, ConsumerKeyCode::VOLUME_UP, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
      </item>
      <item>
        <name>NoRepeat</name>
        <appendix>Volume Mute to Volume Down (with NoRepeat)</appendix>
        <appendix>Volume Down to Volume Up,Brightness Up (with NoRepeat)</appendix>
        <identifier>remap.samples_consumertoconsumer_norepeat</identifier>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_MUTE, ConsumerKeyCode::VOLUME_DOWN, Option::NOREPEAT</autogen>
        <autogen>__ConsumerToConsumer__ ConsumerKeyCode::VOLUME_DOWN, ConsumerKeyCode::VOLUME_UP, ConsumerKeyCode::BRIGHTNESS_UP, Option::NOREPEAT</autogen>
      </item>
    </item>

    <item>
      <name>KeyOverlaidModifier</name>
      <item>
        <name>Standard</name>
        <appendix>A to Shift_L (When type only, send Space) (Standard)</appendix>
        <appendix>Option_L to Shift_L (When type only, send Space) (Modifier)</appendix>
        <appendix>Control+B to Shift_L (When type only, send Space) (Key+Modifier)</appendix>
        <appendix>C to Shift_L (When type only, send Space) + [KeyRepeat]</appendix>
        <appendix>Command+D to Shift_L (When type only, send Control_L+F) + [KeyRepeat]</appendix>
        <appendix>E to KeyCode::VK_NONE</appendix>
        <appendix>F to Shift_L (When type only, send CapsLock)</appendix>
        <appendix>G to Shift_L (When type only, send A,B,Shift_L+C,Control_L+B)</appendix>
        <appendix>H to Shift_L (When type only, send A,B,Shift_L+C,Control_L+B) + [KeyRepeat]</appendix>
        <appendix>I to Shift_L (When type only, send Option_L)</appendix>
        <appendix>J to Shift_L+Option_L (When type only, send Space)</appendix>
        <appendix>Command_R to Shift_L (When type only without other modifiers, send Space)</appendix>
        <identifier>remap.samples_keyoverlaidmodifier</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::A, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_L, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::B, VK_CONTROL, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::C, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::D, VK_COMMAND, KeyCode::SHIFT_L, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyToKey__ KeyCode::E, KeyCode::VK_NONE</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::F, KeyCode::SHIFT_L, KeyCode::CAPSLOCK</autogen>
        <autogen>__KeyOverlaidModifier__           KeyCode::G, KeyCode::SHIFT_L, KeyCode::A, KeyCode::B, KeyCode::C, ModifierFlag::SHIFT_L, KeyCode::B, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyOverlaidModifierWithRepeat__ KeyCode::H, KeyCode::SHIFT_L, KeyCode::A, KeyCode::B, KeyCode::C, ModifierFlag::SHIFT_L, KeyCode::B, ModifierFlag::CONTROL_L</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::I, KeyCode::SHIFT_L, KeyCode::OPTION_L</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::J, KeyCode::SHIFT_L, ModifierFlag::OPTION_L, KeyCode::SPACE</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
      </item>
      <item>
        <name>Standard2</name>
        <appendix>A to Shift_L (Without other modifiers) (When type only, send Space)</appendix>
        <appendix>Command_R to Command_R (When type only without other modifiers, send Space)</appendix>
        <identifier>remap.samples_keyoverlaidmodifier2</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::A, ModifierFlag::NONE, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::COMMAND_R, KeyCode::SPACE</autogen>
      </item>
    </item>

    <item>
      <name>HoldingKeyToKey</name>
      <item>
        <name>Standard</name>
        <identifier>remap.samples_holdingkeytokey</identifier>
        <appendix>Escape to Tab (+ Holding Escape to Space)</appendix>
        <appendix>Tab to A,S,Control_L+D,F (+ Holding Tab to Q,W,Shift_L+E,R)</appendix>
        <appendix>Option+Shift_R to Return (+ Holding Option+Shift_R to Space)</appendix>
        <appendix>Shift+A to Option_L+B (+ Holding Shift+A to Command_L+Return)</appendix>
        <appendix>Control+B to Option_L+B,C (+ Holding Control+B to Space)</appendix>
        <appendix>C to Space (+ Holding C to Shift_L)</appendix>
        <appendix>D to Shift_L (+ Holding D to Option_L)</appendix>
        <appendix>Shift+E to Control_L (+ Holding Shift+E to Option_L)</appendix>
        <!-- Note: Use KeyCode::VK_NONE as a separator of parameters -->
        <autogen>__HoldingKeyToKey__ KeyCode::ESCAPE, KeyCode::TAB, KeyCode::VK_NONE, KeyCode::SPACE</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::TAB, KeyCode::A, KeyCode::S, KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::F, KeyCode::VK_NONE, KeyCode::Q, KeyCode::W, KeyCode::E, ModifierFlag::SHIFT_L, KeyCode::R</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::SHIFT_R, VK_OPTION, KeyCode::RETURN, KeyCode::VK_NONE, KeyCode::SPACE</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::A, VK_SHIFT, KeyCode::B, ModifierFlag::OPTION_L, KeyCode::VK_NONE, KeyCode::RETURN, ModifierFlag::COMMAND_L</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::B, VK_CONTROL, KeyCode::B, ModifierFlag::OPTION_L, KeyCode::C, KeyCode::VK_NONE, KeyCode::SPACE</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::C, KeyCode::SPACE, KeyCode::VK_NONE, KeyCode::SHIFT_L</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::D, KeyCode::SHIFT_L, KeyCode::VK_NONE, KeyCode::OPTION_L</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::E, VK_SHIFT, KeyCode::CONTROL_L, KeyCode::VK_NONE, KeyCode::OPTION_L</autogen>
      </item>
      <item>
        <name>with ModifierFlag::NONE</name>
        <appendix>Escape to Tab (without any modifiers) (+ Holding Escape to Space)</appendix>
        <appendix>Shift_R to Return (without other modifiers) (+ Holding Shift_R to Space)</appendix>
        <identifier>remap.samples_holdingkeytokey_modifierflag_none</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::ESCAPE, ModifierFlag::NONE, KeyCode::TAB, KeyCode::VK_NONE, KeyCode::SPACE</autogen>
        <autogen>__HoldingKeyToKey__ KeyCode::SHIFT_R, ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::RETURN, KeyCode::VK_NONE, KeyCode::SPACE</autogen>
      </item>
      <item>
        <name>NoRepeat</name>
        <appendix>Escape to Tab (+ Holding Escape to Space)</appendix>
        <identifier>remap.samples_holdingkeytokey_norepeat</identifier>
        <autogen>__HoldingKeyToKey__ KeyCode::ESCAPE, KeyCode::TAB, KeyCode::VK_NONE, KeyCode::SPACE, Option::NOREPEAT</autogen>
      </item>
    </item>

    <item>
      <name>DoublePressModifier</name>
      <item>
        <name>Standard</name>
        <appendix>Shift_L x2 to RETURN</appendix>
        <appendix>(A to Control_L) + (A x2 to Shift_L+RETURN)</appendix>
        <appendix>(Shift+B to Control_L+Option_L) + (Shift+B x2 to A,S,Command_L+D)</appendix>
        <appendix>(C to KeyCode::VK_NONE) + (C x2 to SPACE)</appendix>
        <identifier>remap.samples_doublepressmodifier</identifier>
        <autogen>__DoublePressModifier__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::RETURN</autogen>
        <autogen>__DoublePressModifier__ KeyCode::A, KeyCode::CONTROL_L, KeyCode::RETURN, ModifierFlag::SHIFT_L</autogen>
        <autogen>__DoublePressModifier__ KeyCode::B, VK_SHIFT, KeyCode::CONTROL_L, ModifierFlag::OPTION_L, KeyCode::A, KeyCode::S, KeyCode::D, ModifierFlag::COMMAND_L</autogen>
        <autogen>__DoublePressModifier__ KeyCode::C, KeyCode::VK_NONE, KeyCode::SPACE</autogen>
      </item>
      <item>
        <name>Extra</name>
        <appendix>KEY_0 x3 to Equal(=)</appendix>
        <appendix>(retain KEY_0)</appendix>
        <identifier>remap.samples_doublepressmodifier_extra</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::EXTRA1, KeyCode::EQUAL</autogen>
        <autogen>__DoublePressModifier__ KeyCode::KEY_0, KeyCode::KEY_0, KeyCode::DELETE, KeyCode::DELETE, KeyCode::VK_STICKY_EXTRA1</autogen>
      </item>
    </item>

    <item>
      <name>DropKeyAfterRemap</name>
      <item>
        <name>Standard</name>
        <appendix>Drop Tab</appendix>
        <appendix>Drop Shift+Return</appendix>
        <appendix>Change A to Tab (== dropped)</appendix>
        <appendix>Change B to Shift_L+Return (== dropped)</appendix>
        <identifier>remap.samples_dropkeyafterremap</identifier>
        <autogen>__DropKeyAfterRemap__ KeyCode::TAB</autogen>
        <autogen>__DropKeyAfterRemap__ KeyCode::RETURN, VK_SHIFT</autogen>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::TAB</autogen>
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::RETURN, ModifierFlag::SHIFT_L</autogen>
      </item>
    </item>

    <item>
      <name>DropPointingRelativeCursorMove</name>
      <item>
        <name>Standard</name>
        <appendix>A to toggle DropPointingRelativeCursorMove</appendix>
        <identifier>remap.samples_droppointingrelativecursormove_config</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::VK_CONFIG_TOGGLE_remap_samples_droppointingrelativecursormove</autogen>
      </item>
      <item>
        <name>Core</name>
        <appendix>(You need enable above setting.)</appendix>
        <identifier vk_config="true">remap.samples_droppointingrelativecursormove</identifier>
        <config_only>remap.samples_droppointingrelativecursormove_config</config_only>
        <autogen>__ShowStatusMessage__ DropCursorMove</autogen>
        <autogen>__DropPointingRelativeCursorMove__</autogen>
      </item>
    </item>

    <item>
      <name>DropScrollWheel</name>
      <item>
        <appendix>Drop ScrollWheel at Emacs</appendix>
        <identifier>remap.samples_dropscrollwheel</identifier>
        <only>EMACS</only>
        <autogen>__DropScrollWheel__</autogen>
      </item>
    </item>

    <item>
      <name>IgnoreMultipleSameKeyPress</name>
      <item>
        <name>Standard</name>
        <appendix>Ignore the multiple press of 'A'</appendix>
        <appendix>Ignore the multiple press of 'Shift+B' (with Modifier)</appendix>
        <appendix>Ignore the multiple press of 'Shift+Option+C' (with Modifier)</appendix>
        <identifier>remap.samples_ignoremultiplesamekeypress</identifier>
        <autogen>__IgnoreMultipleSameKeyPress__ KeyCode::A</autogen>
        <autogen>__IgnoreMultipleSameKeyPress__ KeyCode::B, VK_SHIFT</autogen>
        <autogen>__IgnoreMultipleSameKeyPress__ KeyCode::C, VK_SHIFT | VK_OPTION</autogen>
      </item>
    </item>

    <item>
      <name>StripModifierFromScrollWheel</name>
      <item>
        <name>Standard</name>
        <appendix>Shift_L+ScrollWheel to ScrollWheel (strip Shift)</appendix>
        <appendix>Option+ScrollWheel to ScrollWheel (strip Option)</appendix>
        <identifier>remap.samples_stripmodifierfromscrollwheel</identifier>
        <autogen>__StripModifierFromScrollWheel__ ModifierFlag::SHIFT_L</autogen>
        <autogen>__StripModifierFromScrollWheel__ VK_OPTION</autogen>
      </item>
      <item>
        <name>VK_MOD_ANY</name>
        <appendix>Any Modifiers+ScrollWheel to ScrollWheel (strip Any Modifiers)</appendix>
        <identifier>remap.samples_stripmodifierfromscrollwheel_any</identifier>
        <autogen>__StripModifierFromScrollWheel__ VK_MOD_ANY</autogen>
      </item>
    </item>

    <item>
      <name>ScrollWheelToScrollWheel</name>
      <item>
        <name>Standard</name>
        <appendix>Shift_L+ScrollWheel to Control_L+ScrollWheel</appendix>
        <identifier>remap.samples_ScrollWheelToScrollWheel</identifier>
        <autogen>__ScrollWheelToScrollWheel__ ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L</autogen>
      </item>
    </item>

    <item>
      <name>ScrollWheelToKey</name>
      <item>
        <name>Standard</name>
        <appendix>ScrollWheel to Left/Right</appendix>
        <appendix>Shift+ScrollWheel to Option+Up/Down/Left/Right</appendix>
        <identifier>remap.samples_ScrollWheelToKey</identifier>
        <autogen>__ScrollWheelToKey__ ScrollWheel::LEFT,  ModifierFlag::NONE, KeyCode::CURSOR_LEFT</autogen>
        <autogen>__ScrollWheelToKey__ ScrollWheel::RIGHT, ModifierFlag::NONE, KeyCode::CURSOR_RIGHT</autogen>

        <autogen>__ScrollWheelToKey__ ScrollWheel::UP,    VK_SHIFT, KeyCode::CURSOR_UP,    ModifierFlag::OPTION_L</autogen>
        <autogen>__ScrollWheelToKey__ ScrollWheel::DOWN,  VK_SHIFT, KeyCode::CURSOR_DOWN,  ModifierFlag::OPTION_L</autogen>
        <autogen>__ScrollWheelToKey__ ScrollWheel::LEFT,  VK_SHIFT, KeyCode::CURSOR_LEFT,  ModifierFlag::OPTION_L</autogen>
        <autogen>__ScrollWheelToKey__ ScrollWheel::RIGHT, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
      </item>
    </item>

    <item>
      <name>SimultaneousKeyPresses</name>
      <item>
        <name>KeyToKey</name>
        <appendix>(A+J to Down)</appendix>
        <appendix>(A+K to Up)</appendix>
        <appendix>(A+S to A,S,A,J)</appendix>
        <appendix>(A+D to A,Shift_L+S,Control_L+D,F)</appendix>
        <appendix>(A+G to Shift_L)</appendix>
        <appendix>(Command_R+[E+R] to Space)</appendix>
        <appendix>(Command_R+[R+T] to Space)</appendix>
        <appendix>(Control_L+[R+T] to Shift_L)</appendix>
        <appendix>(R+T to Delete)</appendix>
        <appendix>(Fn+[K+L] to Space)</appendix>
        <appendix>(Shift_L+Shift_R to Space)</appendix>
        <appendix>(Control_L+Option_L to Fn)</appendix>
        <appendix>Return to Space</appendix>
        <appendix>(Z+X to Return (== to Return))</appendix>
        <appendix>(X+C to Return with Option::RAW (== to Space))</appendix>
        <appendix>(W+E to Escape if application == TERMINAL)</appendix>
        <appendix>(Q+W to Escape if inputsource == ROMAN)</appendix>
        <identifier>remap.samples_simultaneouskeypresses_keytokey</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::A, KeyCode::CURSOR_DOWN</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::A, KeyCode::CURSOR_UP</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::A, KeyCode::A, KeyCode::S, KeyCode::A, KeyCode::J</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::A, KeyCode::A, KeyCode::S, ModifierFlag::SHIFT_L, KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::F</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::G, KeyCode::A, KeyCode::SHIFT_L</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::R, KeyCode::E, ModifierFlag::COMMAND_R, KeyCode::SPACE</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::T, KeyCode::R, ModifierFlag::COMMAND_R, KeyCode::SPACE</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::T, KeyCode::R, ModifierFlag::CONTROL_L, KeyCode::SHIFT_L</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::T, KeyCode::R, KeyCode::DELETE</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::L, KeyCode::K, ModifierFlag::FN, KeyCode::SPACE</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::SHIFT_L, KeyCode::SHIFT_R, KeyCode::SPACE</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::CONTROL_L, KeyCode::OPTION_L, KeyCode::FN</autogen>
        <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::SPACE</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::Z, KeyCode::RETURN</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::C, KeyCode::X, KeyCode::RETURN, SimultaneousKeyPresses::Option::RAW</autogen>
        <block>
          <only>TERMINAL</only>
          <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::W, KeyCode::ESCAPE</autogen>
        </block>
        <block>
          <inputsource_only>ROMAN</inputsource_only>
          <autogen>__SimultaneousKeyPresses__ KeyCode::W, KeyCode::Q, KeyCode::ESCAPE</autogen>
        </block>
      </item>
      <item>
        <name>ButtonToButton</name>
        <appendix>Shift+LeftClick+RightClick to Button4</appendix>
        <appendix>LeftClick+RightClick to MiddleClick</appendix>
        <identifier>remap.samples_simultaneouskeypresses_buttontobutton</identifier>
        <autogen>__SimultaneousKeyPresses__ PointingButton::LEFT, PointingButton::RIGHT, VK_SHIFT, PointingButton::BUTTON4</autogen>
        <autogen>__SimultaneousKeyPresses__ PointingButton::LEFT, PointingButton::RIGHT, PointingButton::MIDDLE</autogen>
      </item>
      <item>
        <name>KeyToButton</name>
        <appendix>[A+S] to RightClick</appendix>
        <appendix>Shift+[S+D] to MiddleClick</appendix>
        <identifier>remap.samples_simultaneouskeypresses_keytobutton</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::A, PointingButton::RIGHT</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::S, VK_SHIFT, PointingButton::MIDDLE</autogen>
      </item>
      <item>
        <name>ButtonToKey</name>
        <appendix>Shift+LeftClick+RightClick to Space</appendix>
        <appendix>LeftClick+RightClick to Return</appendix>
        <identifier>remap.samples_simultaneouskeypresses_buttontokey</identifier>
        <autogen>__SimultaneousKeyPresses__ PointingButton::LEFT, PointingButton::RIGHT, VK_SHIFT, KeyCode::SPACE</autogen>
        <autogen>__SimultaneousKeyPresses__ PointingButton::LEFT, PointingButton::RIGHT, KeyCode::RETURN</autogen>
      </item>
      <item>
        <name>NoRepeat</name>
        <appendix>(A+J to Down)</appendix>
        <appendix>LeftClick+RightClick to Return</appendix>
        <identifier>remap.samples_simultaneouskeypresses_norepeat</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::A, KeyCode::CURSOR_DOWN, Option::NOREPEAT</autogen>
        <autogen>__SimultaneousKeyPresses__ PointingButton::LEFT, PointingButton::RIGHT, KeyCode::RETURN, Option::NOREPEAT</autogen>
      </item>
    </item>

    <item>
      <name>KeyToPointingButton</name>
      <item>
        <name>Standard</name>
        <appendix>A to LeftClick (Standard)</appendix>
        <appendix>S to Double-LeftClick</appendix>
        <appendix>D to Shift_L+LeftClick,RightClick</appendix>
        <appendix>Option_L to LeftClick (Modifier)</appendix>
        <appendix>Shift_R to LeftClick,RightClick (Modifier)</appendix>
        <appendix>Shift+B to RightClick (Key+Modifier)</appendix>
        <appendix>Shift+F to RightClick,MiddleClick (Key+Modifier)</appendix>
        <appendix>Shift+Control_L to RightClick (Modifier+Modifier)</appendix>
        <appendix>Shift+Command_L to RightClick,MiddleClick (Modifier+Modifier)</appendix>
        <appendix>1 to LeftClick</appendix>
        <appendix>2 to MiddleClick</appendix>
        <appendix>3 to RightClick</appendix>
        <appendix>4 to Button4</appendix>
        <appendix>5 to Button5</appendix>
        <appendix>6 to Button6</appendix>
        <appendix>7 to Button7</appendix>
        <appendix>8 to Button8</appendix>
        <appendix>Q to Button9</appendix>
        <appendix>W to Button10</appendix>
        <appendix>E to Button11</appendix>
        <appendix>R to Button12</appendix>
        <appendix>T to Button13</appendix>
        <appendix>Y to Button14</appendix>
        <appendix>U to Button15</appendix>
        <appendix>I to Button16</appendix>
        <identifier>remap.samples_keytopointingbutton</identifier>
        <autogen>__KeyToPointingButton__ KeyCode::A, PointingButton::LEFT</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::S, PointingButton::LEFT, PointingButton::LEFT</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::D, PointingButton::LEFT, ModifierFlag::SHIFT_L, PointingButton::RIGHT</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::OPTION_L, PointingButton::LEFT</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::SHIFT_R,  PointingButton::LEFT, PointingButton::RIGHT</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::B, VK_SHIFT, PointingButton::RIGHT</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::F, VK_SHIFT, PointingButton::RIGHT, PointingButton::MIDDLE</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::CONTROL_L, VK_SHIFT, PointingButton::RIGHT</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::COMMAND_L, VK_SHIFT, PointingButton::RIGHT, PointingButton::MIDDLE</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::KEY_1, PointingButton::LEFT</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::KEY_2, PointingButton::MIDDLE</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::KEY_3, PointingButton::RIGHT</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::KEY_4, PointingButton::BUTTON4</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::KEY_5, PointingButton::BUTTON5</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::KEY_6, PointingButton::BUTTON6</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::KEY_7, PointingButton::BUTTON7</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::KEY_8, PointingButton::BUTTON8</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::Q,     PointingButton::BUTTON9</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::W,     PointingButton::BUTTON10</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::E,     PointingButton::BUTTON11</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::R,     PointingButton::BUTTON12</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::T,     PointingButton::BUTTON13</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::Y,     PointingButton::BUTTON14</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::U,     PointingButton::BUTTON15</autogen>
        <autogen>__KeyToPointingButton__ KeyCode::I,     PointingButton::BUTTON16</autogen>
      </item>
    </item>

    <item>
      <name>PointingRelativeToScroll</name>
      <item>
        <name>Standard</name>
        <appendix>MiddleClick+CursorMove to ScrollWheel (One Button)</appendix>
        <appendix>Option+CursorMove to ScrollWheel (Modifier)</appendix>
        <appendix>Shift+LeftClick+CursorMove to ScrollWheel (Button+Modifier)</appendix>
        <identifier>remap.samples_pointingrelativetoscroll</identifier>
        <autogen>__PointingRelativeToScroll__ PointingButton::MIDDLE</autogen>
        <autogen>__PointingRelativeToScroll__ PointingButton::NONE, VK_OPTION</autogen>
        <autogen>__PointingRelativeToScroll__ PointingButton::LEFT, VK_SHIFT</autogen>
      </item>
      <item>
        <name>SimultaneousKeyPresses</name>
        <appendix>LeftClick+RightClick+CursorMove to ScrollWheel</appendix>
        <identifier>remap.samples_pointingrelativetoscroll_simultaneouskeypresses</identifier>
        <autogen>__SimultaneousKeyPresses__ PointingButton::LEFT, PointingButton::RIGHT, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_pointing_relative_to_scroll</autogen>
      </item>
    </item>

    <item>
      <name>PointingButtonToPointingButton</name>
      <item>
        <name>RightClick to MiddleClick</name>
        <identifier>remap.samples_pointingbuttontopointingbutton_r2m</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::RIGHT, PointingButton::MIDDLE</autogen>
      </item>
      <item>
        <name>Option+LeftClick to MiddleClick</name>
        <identifier>remap.samples_pointingbuttontopointingbutton_ol2m</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::LEFT, VK_OPTION, PointingButton::MIDDLE</autogen>
      </item>
      <item>
        <name>Fn+LeftClick to Option_L+LeftClick</name>
        <identifier>remap.samples_pointingbuttontopointingbutton_fl2ol</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::LEFT, ModifierFlag::FN, PointingButton::LEFT, ModifierFlag::OPTION_L</autogen>
      </item>
      <item>
        <name>RightClick to Double-LeftClick</name>
        <identifier>remap.samples_pointingbuttontopointingbutton_r2dl</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::RIGHT, PointingButton::LEFT, PointingButton::LEFT</autogen>
      </item>
      <item>
        <name>RightClick to Shift_L+LeftClick, LeftClick</name>
        <identifier>remap.samples_pointingbuttontopointingbutton_r2sll</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::RIGHT, PointingButton::LEFT, ModifierFlag::SHIFT_L, PointingButton::LEFT</autogen>
      </item>
      <item>
        <name>RightClick to Shift_L+LeftClick, RightClick</name>
        <identifier>remap.samples_pointingbuttontopointingbutton_r2slr</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::RIGHT, PointingButton::LEFT, ModifierFlag::SHIFT_L, PointingButton::RIGHT</autogen>
      </item>
      <item>
        <name>Control+RightClick to Double-LeftClick</name>
        <identifier>remap.samples_pointingbuttontopointingbutton_cr2dl</identifier>
        <autogen>__PointingButtonToPointingButton__ PointingButton::RIGHT, VK_CONTROL, PointingButton::LEFT, PointingButton::LEFT</autogen>
      </item>
    </item>

    <item>
      <name>PointingButtonToKey</name>
      <item>
        <name>Standard</name>
        <appendix>MiddleClick to Return</appendix>
        <appendix>Option_L+RightClick to Shift_L</appendix>
        <appendix>Command_L+RightClick to A, Shift_L+B, Control_L+C</appendix>
        <appendix>RightClick to Control_L</appendix>
        <appendix>RightClick to Tab (if application == TERMINAL)</appendix>
        <appendix>Control_L+LeftClick to Space</appendix>
        <identifier>remap.samples_pointingbuttontokey</identifier>
        <autogen>__PointingButtonToKey__ PointingButton::MIDDLE, KeyCode::RETURN</autogen>
        <autogen>__PointingButtonToKey__ PointingButton::RIGHT, ModifierFlag::OPTION_L, KeyCode::SHIFT_L</autogen>
        <autogen>__PointingButtonToKey__ PointingButton::RIGHT, ModifierFlag::COMMAND_L, KeyCode::A, KeyCode::B, ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
        <block>
          <only>TERMINAL</only>
          <autogen>__PointingButtonToKey__ PointingButton::RIGHT, KeyCode::TAB</autogen>
        </block>
        <autogen>__PointingButtonToKey__ PointingButton::RIGHT, KeyCode::CONTROL_L</autogen>
        <autogen>__PointingButtonToKey__ PointingButton::LEFT, ModifierFlag::CONTROL_L, KeyCode::SPACE</autogen>
      </item>
      <item>
        <name>Standard2</name>
        <appendix>RightClick to CapsLock,A</appendix>
        <identifier>remap.samples_pointingbuttontokey2</identifier>
        <autogen>__PointingButtonToKey__ PointingButton::RIGHT, KeyCode::CAPSLOCK, KeyCode::A</autogen>
      </item>
      <item>
        <name>NoRepeat</name>
        <appendix>RightClick to A (with Option::NOREPEAT)</appendix>
        <identifier>remap.samples_pointingbuttontokey_norepeat</identifier>
        <autogen>__PointingButtonToKey__ PointingButton::RIGHT, KeyCode::A, Option::NOREPEAT</autogen>
      </item>
    </item>

    <item>
      <name>ForceNumLockOn</name>
      <item>
        <name>Force turn NumLock on at Apple Internal Keyboard (0x05ac,0x021a)</name>
        <identifier>remap.samples_forcenumlockon</identifier>
        <autogen>__ForceNumLockOn__ DeviceVendor::APPLE_COMPUTER, DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a</autogen>
      </item>
    </item>

    <item>
      <name>"NotSave" keymap overwriting</name>
      <item>
        <name>base mapping</name>
        <appendix>A to toggle notsave.sample</appendix>
        <appendix>B to C</appendix>
        <appendix>(B becomes D when notsave.sample is active)</appendix>
        <identifier>remap.samples_notsave</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::VK_CONFIG_TOGGLE_notsave_sample</autogen>
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::C</autogen>
      </item>
      <item>
        <name>notsave.sample</name>
        <appendix>B to D</appendix>
        <identifier vk_config="true">notsave.sample</identifier>
        <autogen>__ShowStatusMessage__ notsave.sample</autogen>
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::D</autogen>
      </item>
    </item>

    <item>
      <name>Filters</name>
      <!-- application only -->
      <item>
        <name>application</name>
        <appendix>A to B if application == TERMINAL (KeyToKey)</appendix>
        <appendix>A to C if application != TERMINAL (KeyToKey)</appendix>
        <appendix>Volume Mute to B if application == TERMINAL (ConsumerToKey)</appendix>
        <appendix>Volume Mute to C if application != TERMINAL (ConsumerToKey)</appendix>
        <identifier>remap.samples_application</identifier>
        <block>
          <only>TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::B</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, KeyCode::B</autogen>
        </block>
        <block>
          <not>TERMINAL</not>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::C</autogen>
          <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, KeyCode::C</autogen>
        </block>
      </item>

      <!-- Device only -->
      <item>
        <name>Device only</name>
        <appendix>A to B if (VendorID,ProductID) == (0x5ac,0x21a) or (0x5ac,0x222)</appendix>
        <appendix>A to C unless (VendorID,ProductID) == (0x5ac,0x21a) or (0x5ac,0x222)</appendix>
        <appendix>S to Tab if VendorID == DeviceVendor::APPLE_COMPUTER (DeviceProduct::ANY)</appendix>
        <appendix>S to Space unless VendorID == DeviceVendor::APPLE_COMPUTER (DeviceProduct::ANY)</appendix>
        <appendix>* (0x5ac,0x21a) is MacBookPro2,1</appendix>
        <appendix>* (0x5ac,0x222) is Apple Aluminum Keyboard (JIS)</appendix>
        <identifier>remap.samples_device</identifier>
        <block>
          <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a, DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_ALUMINUM_KEYBOARD_JIS</device_only>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::B</autogen>
        </block>
        <block>
          <device_not>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a, DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_ALUMINUM_KEYBOARD_JIS</device_not>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::C</autogen>
        </block>
        <block>
          <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::ANY</device_only>
          <autogen>__KeyToKey__ KeyCode::S, KeyCode::TAB</autogen>
        </block>
        <block>
          <device_not>DeviceVendor::APPLE_COMPUTER,DeviceProduct::ANY</device_not>
          <autogen>__KeyToKey__ KeyCode::S, KeyCode::SPACE</autogen>
        </block>
      </item>

      <!-- Config only -->
      <item>
        <name>Config only</name>
        <item>
          <name>Core</name>
          <identifier>remap.samples_config</identifier>
          <appendix>A to 1 if samples_config_mode1 == active</appendix>
          <appendix>B to 2 if samples_config_mode1 or samples_config_mode2 == active</appendix>
          <appendix>A to 3 if samples_config_mode1 != active</appendix>
          <appendix>B to 4 if samples_config_mode1 and samples_config_mode2 != active</appendix>
          <appendix>C to 5</appendix>
          <block>
            <config_only>option.samples_config_mode1</config_only>
            <autogen>__KeyToKey__ KeyCode::A, KeyCode::KEY_1</autogen>
          </block>
          <block>
            <config_only>option.samples_config_mode1, option.samples_config_mode2</config_only>
            <autogen>__KeyToKey__ KeyCode::B, KeyCode::KEY_2</autogen>
          </block>
          <block>
            <config_not>option.samples_config_mode1</config_not>
            <autogen>__KeyToKey__ KeyCode::A, KeyCode::KEY_3</autogen>
          </block>
          <block>
            <config_not>option.samples_config_mode1, option.samples_config_mode2</config_not>
            <autogen>__KeyToKey__ KeyCode::B, KeyCode::KEY_4</autogen>
          </block>
          <block>
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::KEY_5</autogen>
          </block>
        </item>
        <item>
          <name>Config only mode1</name>
          <identifier vk_config="true">option.samples_config_mode1</identifier>
        </item>
        <item>
          <name>Config only mode2</name>
          <identifier>option.samples_config_mode2</identifier>
        </item>
        <item><name>________________________________________</name></item>
        <item>
          <name>With KEYTOKEY_BEFORE_KEYDOWN, KEYTOKEY_AFTER_KEYUP</name>
          <appendix>Space to Tab (And Before A, After B)</appendix>
          <appendix>(If you type Space key, a sequence of "A,Tab,B" is fired.)</appendix>
          <identifier>remap.samples_config_before_keydown</identifier>

          <config_not>option.samples_config_mode1</config_not>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB,
            Option::KEYTOKEY_BEFORE_KEYDOWN, KeyCode::VK_CONFIG_FORCE_ON_option_samples_config_mode1, KeyCode::A,
            Option::KEYTOKEY_AFTER_KEYUP, KeyCode::VK_CONFIG_FORCE_OFF_option_samples_config_mode1, KeyCode::B
          </autogen>
        </item>
      </item>

      <!-- inputsource only -->
      <!-- inputsource not -->
      <item>
        <name>Inputsource</name>
        <item>
          <name>bépo</name>
          <item>
            <name>inputsource_only (bépo-*)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsource_bepo</identifier>
            <inputsource_only>BEPO</inputsource_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (bépo-normal)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_bepo</identifier>
            <inputsourcedetail_only>BEPO</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (bépo-AzertyCmd)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_bepo_azertycmd</identifier>
            <inputsourcedetail_only>BEPO_AZERTYCMD</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (bépo-AzertyCmdRoman)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_bepo_azertycmdroman</identifier>
            <inputsourcedetail_only>BEPO_AZERTYCMDROMAN</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (bépo-QwertyCmd)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_bepo_qwertycmd</identifier>
            <inputsourcedetail_only>BEPO_QWERTYCMD</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (bépo-QwertyCmdRoman)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_bepo_qwertycmdroman</identifier>
            <inputsourcedetail_only>BEPO_QWERTYCMDROMAN</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (bépo-QwertzCmd)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_bepo_qwertzcmd</identifier>
            <inputsourcedetail_only>BEPO_QWERTZCMD</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (bépo-QwertzCmdRoman)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_bepo_qwertzcmdroman</identifier>
            <inputsourcedetail_only>BEPO_QWERTZCMDROMAN</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (bépo-Roman)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_bepo_roman</identifier>
            <inputsourcedetail_only>BEPO_ROMAN</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
        </item>
        <item>
          <name>inputsource_only (Chinese Traditional-*)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_tradchinese</identifier>
          <inputsource_only>CHINESE_TRADITIONAL</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (Chinese Traditional Yahoo! KeyKey)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_tradchinese_yahoo_keykey</identifier>
          <inputsourcedetail_only>CHINESE_TRADITIONAL_YAHOO_KEYKEY</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsource_only (Chinese Simplified-*)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_simpchinese</identifier>
          <inputsource_only>CHINESE_SIMPLIFIED</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsource_only (Canadian)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_canadian</identifier>
          <inputsource_only>CANADIAN</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>Dvorak</name>
          <item>
            <name>inputsource_only (Dvorak-*)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsource_dvorak</identifier>
            <inputsource_only>DVORAK</inputsource_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (Dvorak-normal)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_dvorak</identifier>
            <inputsourcedetail_only>DVORAK</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (Dvorak-Left)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_dvorak_left</identifier>
            <inputsourcedetail_only>DVORAK_LEFT</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (Dvorak-QwertyCmd)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_dvorak_qwertycmd</identifier>
            <inputsourcedetail_only>DVORAK_QWERTYCMD</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (Dvorak-Right)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_dvorak_right</identifier>
            <inputsourcedetail_only>DVORAK_RIGHT</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
        </item>
        <item>
          <name>inputsource_only (Finnish)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_finnish</identifier>
          <inputsource_only>FINNISH</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsource_only (French-*)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_french</identifier>
          <inputsource_only>FRENCH</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>Japanese</name>
          <item>
            <name>inputsource_only (Japanese-*)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsource_japanese</identifier>
            <inputsource_only>JAPANESE</inputsource_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsource_not (Japanese-*)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsource_not_japanese</identifier>
            <inputsource_not>JAPANESE</inputsource_not>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (Japanese-Hiragana)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_japanese_hiragana</identifier>
            <!-- We need to set both JAPANESE_HIRAGANA and JAPANESE -->
            <inputsourcedetail_only>JAPANESE_HIRAGANA, JAPANESE</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_not (Japanese-Hiragana)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_not_japanese_hiragana</identifier>
            <!-- We need to set both JAPANESE_HIRAGANA and JAPANESE -->
            <inputsourcedetail_not>JAPANESE_HIRAGANA, JAPANESE</inputsourcedetail_not>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (Japanese-Katakana)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_japanese_katakana</identifier>
            <inputsourcedetail_only>JAPANESE_KATAKANA</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (Japanese-Full-width Roman)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_japanese_fullwidth_roman</identifier>
            <inputsourcedetail_only>JAPANESE_FULLWIDTH_ROMAN</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (Japanese-Half-width Katakana)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_japanese_halfwidth_kana</identifier>
            <inputsourcedetail_only>JAPANESE_HALFWIDTH_KANA</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>Enforce roman input at semicolon(;).</name>
            <identifier>remap.samples_inputsource_semicolon</identifier>
            <inputsource_only>JAPANESE</inputsource_only>
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::SEMICOLON,
              Option::KEYTOKEY_BEFORE_KEYDOWN, KeyCode::JIS_EISUU,
              Option::KEYTOKEY_AFTER_KEYUP, KeyCode::JIS_KANA
            </autogen>
          </item>
        </item>
        <item>
          <name>inputsource_only (Korean-*)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_korean</identifier>
          <inputsource_only>KOREAN</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>Polish</name>
          <item>
            <name>inputsource_only (Polish-*)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsource_polish</identifier>
            <inputsource_only>POLISH</inputsource_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (Polish)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_polish</identifier>
            <inputsourcedetail_only>POLISH</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (Polish Pro)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_polishpro</identifier>
            <inputsourcedetail_only>POLISH_PRO</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
        </item>
        <item>
          <name>inputsource_only (Swedish)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_swedish</identifier>
          <inputsource_only>SWEDISH</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>Roman</name>
          <item>
            <name>inputsource_only (Roman-*)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsource_roman</identifier>
            <inputsource_only>ROMAN</inputsource_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (Roman-JANSI)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_roman_jansi</identifier>
            <inputsourcedetail_only>ROMAN_JANSI</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
          <item>
            <name>inputsourcedetail_only (Roman others)</name>
            <appendix>Space to Tab</appendix>
            <identifier>remap.samples_inputsourcedetail_roman</identifier>
            <inputsourcedetail_only>ROMAN</inputsourcedetail_only>
            <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
          </item>
        </item>
        <item>
          <name>inputsource_only (Russian)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_russian</identifier>
          <inputsource_only>RUSSIAN</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsource_only (Thai)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_thai</identifier>
          <inputsource_only>THAI</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsource_only (German)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_german</identifier>
          <inputsource_only>GERMAN</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsource_only (Slovenian)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_slovenian</identifier>
          <inputsource_only>SLOVENIAN</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsource_only (Czech)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_czech</identifier>
          <inputsource_only>CZECH</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsource_only (British)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_british</identifier>
          <inputsource_only>BRITISH</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsource_only (Bulgarian)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_bulgarian</identifier>
          <inputsource_only>BULGARIAN</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsource_only (Unknown == User Defined keylayout)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_unknown</identifier>
          <inputsource_only>UNKNOWN</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
      </item>

      <item>
        <name>Modifier</name>
        <item>
          <name>Note:</name>
          <appendix>We cannot use VK_COMMAND,VK_CONTROL,VK_OPTION,VK_SHIFT in</appendix>
          <appendix>&lt;modifier_only&gt;, &lt;modifier_not&gt;.</appendix>
          <appendix></appendix>
          <appendix>Expand these to ModifierFlags.</appendix>
          <appendix>Example: &lt;modifier_only&gt;ModifierFlag::SHIFT_L, ModifierFlag::SHIFT_R&lt;/modifier_only&gt;</appendix>
        </item>
        <item>
          <name>Standard</name>
          <appendix>A to B if Command_L or Option_L is pressed.</appendix>
          <appendix>  // Command_L+A to Command_L+B</appendix>
          <appendix>  // Option_L+A to Option_L+B</appendix>
          <appendix>  // Command_L+Option_L+A to Command_L+Option_L+B</appendix>
          <appendix>  // Command_L+Shift_L+A to Command_L+Shift_L+B</appendix>
          <appendix></appendix>
          <appendix>A to C unless Shift_L or Control_L is pressed.</appendix>
          <appendix>  // A to C</appendix>
          <appendix>  // Shift_R+A to Shift_R+C</appendix>
          <appendix>  // Control_L+A to Control_L+A</appendix>
          <appendix>  // Shift_L+A to Shift_L+A</appendix>
          <appendix>  // Shift_L+Command_R+A to Shift_L+Command_R+A</appendix>
          <identifier>remap.samples_modifier_standard</identifier>
          <block>
            <modifier_only>ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L</modifier_only>
            <autogen>__KeyToKey__ KeyCode::A, KeyCode::B</autogen>
          </block>
          <block>
            <modifier_not>ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L</modifier_not>
            <autogen>__KeyToKey__ KeyCode::A, KeyCode::C</autogen>
          </block>
        </item>
        <item>
          <name>Combination</name>
          <appendix>B to D if "Control_L+Option_L" or "Command_L+Option_L" is pressed.</appendix>
          <appendix>  // Control_L+Option_L+B to Control_L+Option_L+D</appendix>
          <appendix>  // Command_L+Option_L+B to Command_L+Option_L+D</appendix>
          <appendix>  // Command_L+Option_L+Shift_L+B to Command_L+Option_L+Shift_L+D</appendix>
          <appendix></appendix>
          <appendix>B to E unless "COMMAND_L+SHIFT_L" or "COMMAND_L+SHIFT_R" is pressed.</appendix>
          <appendix>  // B to E</appendix>
          <appendix>  // Command_L+B to Command_L+E</appendix>
          <appendix>  // Command_L+Shift_L+B to Command_L+Shift_L+B</appendix>
          <appendix>  // Command_L+Shift_R+B to Command_L+Shift_R+B</appendix>
          <identifier>remap.samples_modifier_combination</identifier>
          <block>
            <modifier_only>ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L</modifier_only>
            <autogen>__KeyToKey__ KeyCode::B, KeyCode::D</autogen>
          </block>
          <block>
            <modifier_not>ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_R</modifier_not>
            <autogen>__KeyToKey__ KeyCode::B, KeyCode::E</autogen>
          </block>
        </item>
        <item>
          <name>With ModifierFlag::NONE</name>
          <appendix>C to F if Shift_L is pressed. (And no other modifiers are pressed.)</appendix>
          <appendix>  // C to C</appendix>
          <appendix>  // Shift_L+C to Shift_L+F</appendix>
          <appendix>  // Command_L+Shift_L+C to Command_L+Shift_L+C</appendix>
          <identifier>remap.samples_modifier_with_none</identifier>
          <block>
            <modifier_only>ModifierFlag::SHIFT_L | ModifierFlag::NONE</modifier_only>
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::F</autogen>
          </block>
        </item>
      </item>

      <!-- block -->
      <item>
        <name>block sample</name>
        <appendix>A to B if application == TERMINAL (KeyToKey)</appendix>
        <appendix>B to D if application == TERMINAL (KeyToKey)</appendix>
        <appendix>A to C if application != TERMINAL (KeyToKey)</appendix>
        <appendix>B to E if application != TERMINAL (KeyToKey)</appendix>
        <appendix>Shift+C to Y</appendix>
        <appendix>Shift+D to Z</appendix>
        <appendix>________________________________________</appendix>
        <appendix>(VendorID,ProductID) == (0x5ac,0x21a) or (0x5ac,0x222)</appendix>
        <appendix>- C to 1 if application == TERMINAL (KeyToKey)</appendix>
        <appendix>- C to 3 if application != TERMINAL (KeyToKey)</appendix>
        <appendix>________________________________________</appendix>
        <appendix>(VendorID,ProductID) != (0x5ac,0x21a) and (0x5ac,0x222)</appendix>
        <appendix>C to 2 if application == TERMINAL (KeyToKey)</appendix>
        <appendix>C to 4 if application != TERMINAL (KeyToKey)</appendix>
        <identifier>remap.samples_block</identifier>
        <block>
          <only>TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::B</autogen>
          <autogen>__KeyToKey__ KeyCode::B, KeyCode::D</autogen>
        </block>
        <block>
          <not>TERMINAL</not>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::C</autogen>
          <autogen>__KeyToKey__ KeyCode::B, KeyCode::E</autogen>
        </block>
        <autogen>__KeyToKey__ KeyCode::C, VK_SHIFT, KeyCode::Y</autogen>
        <autogen>__KeyToKey__ KeyCode::D, VK_SHIFT, KeyCode::Z</autogen>
        <block>
          <only>TERMINAL</only>
          <block>
            <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a, DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_ALUMINUM_KEYBOARD_JIS</device_only>
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::KEY_1</autogen>
          </block>
          <block>
            <device_not>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a, DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_ALUMINUM_KEYBOARD_JIS</device_not>
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::KEY_2</autogen>
          </block>
        </block>
        <block>
          <not>TERMINAL</not>
          <block>
            <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a, DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_ALUMINUM_KEYBOARD_JIS</device_only>
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::KEY_3</autogen>
          </block>
          <block>
            <device_not>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a, DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_ALUMINUM_KEYBOARD_JIS</device_not>
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::KEY_4</autogen>
          </block>
        </block>
      </item>
    </item>

    <!-- Virtual KeyCode -->
    <item>
      <name>Virtual KeyCode</name>
      <item>
        <name>VK_MODIFIER_EXTRA</name>
        <appendix>Use A as ModifierFlag::EXTRA1</appendix>
        <appendix>Use D as ModifierFlag::EXTRA5</appendix>
        <appendix>Use F as ModifierFlag::EXTRA5 (When type only, send Space)</appendix>
        <appendix>EXTRA1+S to B</appendix>
        <appendix>EXTRA5+S to C</appendix>
        <identifier>remap.samples_modifier_extra1</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::VK_MODIFIER_EXTRA1</autogen>
        <autogen>__KeyToKey__ KeyCode::D, KeyCode::VK_MODIFIER_EXTRA5</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::F, KeyCode::VK_MODIFIER_EXTRA5, KeyCode::SPACE</autogen>
        <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA1, KeyCode::B</autogen>
        <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::EXTRA5, KeyCode::C</autogen>
      </item>
      <item>
        <name>VK_WAIT</name>
        <appendix>Change KEY_1 to A,B,&lt;wait10ms&gt;,C</appendix>
        <appendix>Change KEY_2 to A,B,&lt;wait50ms&gt;,C</appendix>
        <appendix>Change KEY_3 to A,B,&lt;wait100ms&gt;,C</appendix>
        <identifier>remap.samples_vk_wait</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::A, KeyCode::B, KeyCode::VK_WAIT_10MS,  KeyCode::C</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::A, KeyCode::B, KeyCode::VK_WAIT_50MS,  KeyCode::C</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3, KeyCode::A, KeyCode::B, KeyCode::VK_WAIT_100MS, KeyCode::C</autogen>
      </item>
      <item>
        <name>VK_LOCK</name>
        <item>
          <name>Normal Modifiers</name>
          <appendix>Use 1 to Lock Command_L</appendix>
          <appendix>Use 2 to Lock Command_R</appendix>
          <appendix>Use 3 to Lock Control_L</appendix>
          <appendix>Use 4 to Lock Control_R</appendix>
          <appendix>Use 5 to Lock Fn</appendix>
          <appendix>Use 6 to Lock Option_L</appendix>
          <appendix>Use 7 to Lock Option_R</appendix>
          <appendix>Use 8 to Lock Shift_L</appendix>
          <appendix>Use 9 to Lock Shift_R</appendix>
          <appendix>Use Q to Force Lock on Command_L</appendix>
          <appendix>Use W to Force Lock on Command_R</appendix>
          <appendix>Use E to Force Lock on Control_L</appendix>
          <appendix>Use R to Force Lock on Control_R</appendix>
          <appendix>Use T to Force Lock on Fn</appendix>
          <appendix>Use Y to Force Lock on Option_L</appendix>
          <appendix>Use U to Force Lock on Option_R</appendix>
          <appendix>Use I to Force Lock on Shift_L</appendix>
          <appendix>Use O to Force Lock on Shift_R</appendix>
          <appendix>Use A to Force Lock off Command_L</appendix>
          <appendix>Use S to Force Lock off Command_R</appendix>
          <appendix>Use D to Force Lock off Control_L</appendix>
          <appendix>Use F to Force Lock off Control_R</appendix>
          <appendix>Use G to Force Lock off Fn</appendix>
          <appendix>Use H to Force Lock off Option_L</appendix>
          <appendix>Use J to Force Lock off Option_R</appendix>
          <appendix>Use K to Force Lock off Shift_L</appendix>
          <appendix>Use L to Force Lock off Shift_R</appendix>
          <appendix>Use Z to Force Lock off All</appendix>
          <identifier>remap.samples_vk_lock_normal</identifier>
          <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::VK_LOCK_COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::VK_LOCK_COMMAND_R</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, KeyCode::VK_LOCK_CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, KeyCode::VK_LOCK_CONTROL_R</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, KeyCode::VK_LOCK_FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, KeyCode::VK_LOCK_OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, KeyCode::VK_LOCK_OPTION_R</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, KeyCode::VK_LOCK_SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, KeyCode::VK_LOCK_SHIFT_R</autogen>
          <autogen>__KeyToKey__ KeyCode::Q,     KeyCode::VK_LOCK_COMMAND_L_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::W,     KeyCode::VK_LOCK_COMMAND_R_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::E,     KeyCode::VK_LOCK_CONTROL_L_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::R,     KeyCode::VK_LOCK_CONTROL_R_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::T,     KeyCode::VK_LOCK_FN_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::Y,     KeyCode::VK_LOCK_OPTION_L_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::U,     KeyCode::VK_LOCK_OPTION_R_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::I,     KeyCode::VK_LOCK_SHIFT_L_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::O,     KeyCode::VK_LOCK_SHIFT_R_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::A,     KeyCode::VK_LOCK_COMMAND_L_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::S,     KeyCode::VK_LOCK_COMMAND_R_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::D,     KeyCode::VK_LOCK_CONTROL_L_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::F,     KeyCode::VK_LOCK_CONTROL_R_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::G,     KeyCode::VK_LOCK_FN_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::H,     KeyCode::VK_LOCK_OPTION_L_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::J,     KeyCode::VK_LOCK_OPTION_R_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::K,     KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::L,     KeyCode::VK_LOCK_SHIFT_R_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::Z,     KeyCode::VK_LOCK_ALL_FORCE_OFF</autogen>
        </item>
        <item>
          <name>Extra Modifiers</name>
          <appendix>Use 1 to Lock ModifierFlag::EXTRA1</appendix>
          <appendix>Use 2 to Lock ModifierFlag::EXTRA2</appendix>
          <appendix>Use 3 to Lock ModifierFlag::EXTRA3</appendix>
          <appendix>Use 4 to Lock ModifierFlag::EXTRA4</appendix>
          <appendix>Use 5 to Lock ModifierFlag::EXTRA5</appendix>
          <appendix>Use Q to Force Lock on ModifierFlag::EXTRA1</appendix>
          <appendix>Use W to Force Lock on ModifierFlag::EXTRA2</appendix>
          <appendix>Use E to Force Lock on ModifierFlag::EXTRA3</appendix>
          <appendix>Use R to Force Lock on ModifierFlag::EXTRA4</appendix>
          <appendix>Use T to Force Lock on ModifierFlag::EXTRA5</appendix>
          <appendix>Use A to Force Lock off ModifierFlag::EXTRA1</appendix>
          <appendix>Use S to Force Lock off ModifierFlag::EXTRA2</appendix>
          <appendix>Use D to Force Lock off ModifierFlag::EXTRA3</appendix>
          <appendix>Use F to Force Lock off ModifierFlag::EXTRA4</appendix>
          <appendix>Use G to Force Lock off ModifierFlag::EXTRA5</appendix>
          <identifier>remap.samples_vk_lock_extra</identifier>
          <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::VK_LOCK_EXTRA1</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::VK_LOCK_EXTRA2</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, KeyCode::VK_LOCK_EXTRA3</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, KeyCode::VK_LOCK_EXTRA4</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, KeyCode::VK_LOCK_EXTRA5</autogen>
          <autogen>__KeyToKey__ KeyCode::Q,     KeyCode::VK_LOCK_EXTRA1_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::W,     KeyCode::VK_LOCK_EXTRA2_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::E,     KeyCode::VK_LOCK_EXTRA3_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::R,     KeyCode::VK_LOCK_EXTRA4_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::T,     KeyCode::VK_LOCK_EXTRA5_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::A,     KeyCode::VK_LOCK_EXTRA1_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::S,     KeyCode::VK_LOCK_EXTRA2_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::D,     KeyCode::VK_LOCK_EXTRA3_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::F,     KeyCode::VK_LOCK_EXTRA4_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::G,     KeyCode::VK_LOCK_EXTRA5_FORCE_OFF</autogen>
        </item>
      </item>
      <item>
        <name>VK_STICKY</name>
        <item>
          <name>Toggle</name>
          <appendix>Use 1 to Sticky Command_L</appendix>
          <appendix>Use 2 to Sticky Command_R</appendix>
          <appendix>Use 3 to Sticky Control_L</appendix>
          <appendix>Use 4 to Sticky Control_R</appendix>
          <appendix>Use 5 to Sticky Fn</appendix>
          <appendix>Use 6 to Sticky Option_L</appendix>
          <appendix>Use 7 to Sticky Option_R</appendix>
          <appendix>Use 8 to Sticky Shift_L</appendix>
          <appendix>Use 9 to Sticky Shift_R</appendix>
          <appendix>Use Q to Sticky ModifierFlag::EXTRA1</appendix>
          <appendix>Use W to Sticky ModifierFlag::EXTRA2</appendix>
          <appendix>Use E to Sticky ModifierFlag::EXTRA3</appendix>
          <appendix>Use R to Sticky ModifierFlag::EXTRA4</appendix>
          <appendix>Use T to Sticky ModifierFlag::EXTRA5</appendix>
          <appendix>Use Y to Y,Sticky Shift_L</appendix>
          <appendix>Use L to Shift_L (+ Sticky Shift_L)</appendix>
          <appendix></appendix>
          <appendix>EXTRA1+A to 1</appendix>
          <appendix>EXTRA2+A to 2</appendix>
          <appendix>EXTRA3+A to 3</appendix>
          <appendix>EXTRA4+A to 4</appendix>
          <appendix>EXTRA5+A to 5</appendix>
          <identifier>remap.samples_vk_sticky</identifier>
          <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::VK_STICKY_COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::VK_STICKY_COMMAND_R</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, KeyCode::VK_STICKY_CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, KeyCode::VK_STICKY_CONTROL_R</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, KeyCode::VK_STICKY_FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, KeyCode::VK_STICKY_OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, KeyCode::VK_STICKY_OPTION_R</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, KeyCode::VK_STICKY_SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, KeyCode::VK_STICKY_SHIFT_R</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, KeyCode::VK_STICKY_EXTRA1</autogen>
          <autogen>__KeyToKey__ KeyCode::W, KeyCode::VK_STICKY_EXTRA2</autogen>
          <autogen>__KeyToKey__ KeyCode::E, KeyCode::VK_STICKY_EXTRA3</autogen>
          <autogen>__KeyToKey__ KeyCode::R, KeyCode::VK_STICKY_EXTRA4</autogen>
          <autogen>__KeyToKey__ KeyCode::T, KeyCode::VK_STICKY_EXTRA5</autogen>
          <autogen>__KeyToKey__ KeyCode::Y, KeyCode::Y, KeyCode::VK_STICKY_SHIFT_L</autogen>
          <autogen>__KeyOverlaidModifier__ KeyCode::L, KeyCode::SHIFT_L, KeyCode::VK_STICKY_SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::EXTRA1, KeyCode::KEY_1</autogen>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::EXTRA2, KeyCode::KEY_2</autogen>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::EXTRA3, KeyCode::KEY_3</autogen>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::EXTRA4, KeyCode::KEY_4</autogen>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::EXTRA5, KeyCode::KEY_5</autogen>
        </item>
        <item>
          <name>Force On/Off</name>
          <appendix>Use 1 to Sticky Command_L Force On</appendix>
          <appendix>Use 2 to Sticky Command_R Force On</appendix>
          <appendix>Use 3 to Sticky Control_L Force On</appendix>
          <appendix>Use 4 to Sticky Control_R Force On</appendix>
          <appendix>Use 5 to Sticky Fn Force On</appendix>
          <appendix>Use 6 to Sticky Option_L Force On</appendix>
          <appendix>Use 7 to Sticky Option_R Force On</appendix>
          <appendix>Use 8 to Sticky Shift_L Force On</appendix>
          <appendix>Use 9 to Sticky Shift_R Force On</appendix>
          <appendix>Use Q to Sticky ModifierFlag::EXTRA1 Force On</appendix>
          <appendix>Use W to Sticky ModifierFlag::EXTRA2 Force On</appendix>
          <appendix>Use E to Sticky ModifierFlag::EXTRA3 Force On</appendix>
          <appendix>Use R to Sticky ModifierFlag::EXTRA4 Force On</appendix>
          <appendix>Use T to Sticky ModifierFlag::EXTRA5 Force On</appendix>

          <appendix>Use A to Sticky Command_L Force Off</appendix>
          <appendix>Use S to Sticky Command_R Force Off</appendix>
          <appendix>Use D to Sticky Control_L Force Off</appendix>
          <appendix>Use F to Sticky Control_R Force Off</appendix>
          <appendix>Use G to Sticky Fn Force Off</appendix>
          <appendix>Use H to Sticky Option_L Force Off</appendix>
          <appendix>Use J to Sticky Option_R Force Off</appendix>
          <appendix>Use K to Sticky Shift_L Force Off</appendix>
          <appendix>Use L to Sticky Shift_R Force Off</appendix>
          <appendix>Use Z to Sticky ModifierFlag::EXTRA1 Force Off</appendix>
          <appendix>Use X to Sticky ModifierFlag::EXTRA2 Force Off</appendix>
          <appendix>Use C to Sticky ModifierFlag::EXTRA3 Force Off</appendix>
          <appendix>Use V to Sticky ModifierFlag::EXTRA4 Force Off</appendix>
          <appendix>Use B to Sticky ModifierFlag::EXTRA5 Force Off</appendix>
          <identifier>remap.samples_vk_sticky_force_on_off</identifier>
          <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::VK_STICKY_COMMAND_L_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::VK_STICKY_COMMAND_R_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, KeyCode::VK_STICKY_CONTROL_L_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, KeyCode::VK_STICKY_CONTROL_R_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, KeyCode::VK_STICKY_FN_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, KeyCode::VK_STICKY_OPTION_L_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, KeyCode::VK_STICKY_OPTION_R_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, KeyCode::VK_STICKY_SHIFT_L_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, KeyCode::VK_STICKY_SHIFT_R_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::Q, KeyCode::VK_STICKY_EXTRA1_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::W, KeyCode::VK_STICKY_EXTRA2_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::E, KeyCode::VK_STICKY_EXTRA3_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::R, KeyCode::VK_STICKY_EXTRA4_FORCE_ON</autogen>
          <autogen>__KeyToKey__ KeyCode::T, KeyCode::VK_STICKY_EXTRA5_FORCE_ON</autogen>

          <autogen>__KeyToKey__ KeyCode::A, KeyCode::VK_STICKY_COMMAND_L_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::S, KeyCode::VK_STICKY_COMMAND_R_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::D, KeyCode::VK_STICKY_CONTROL_L_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::F, KeyCode::VK_STICKY_CONTROL_R_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::G, KeyCode::VK_STICKY_FN_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::H, KeyCode::VK_STICKY_OPTION_L_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::J, KeyCode::VK_STICKY_OPTION_R_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::K, KeyCode::VK_STICKY_SHIFT_L_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::L, KeyCode::VK_STICKY_SHIFT_R_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::Z, KeyCode::VK_STICKY_EXTRA1_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::X, KeyCode::VK_STICKY_EXTRA2_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::C, KeyCode::VK_STICKY_EXTRA3_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::V, KeyCode::VK_STICKY_EXTRA4_FORCE_OFF</autogen>
          <autogen>__KeyToKey__ KeyCode::B, KeyCode::VK_STICKY_EXTRA5_FORCE_OFF</autogen>
        </item>
      </item>
      <item>
        <name>VK_LAZY</name>
        <item>
          <name>Standard</name>
          <appendix>Use 1 to Lazy Command_L</appendix>
          <appendix>Use 2 to Lazy Command_R</appendix>
          <appendix>Use 3 to Lazy Control_L</appendix>
          <appendix>Use 4 to Lazy Control_R</appendix>
          <appendix>Use 5 to Lazy Fn</appendix>
          <appendix>Use 6 to Lazy Option_L</appendix>
          <appendix>Use 7 to Lazy Option_R</appendix>
          <appendix>Use 8 to Lazy Shift_L</appendix>
          <appendix>Use 9 to Lazy Shift_R</appendix>
          <identifier>remap.samples_vk_lazy</identifier>
          <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::VK_LAZY_COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::VK_LAZY_COMMAND_R</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, KeyCode::VK_LAZY_CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, KeyCode::VK_LAZY_CONTROL_R</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, KeyCode::VK_LAZY_FN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, KeyCode::VK_LAZY_OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, KeyCode::VK_LAZY_OPTION_R</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, KeyCode::VK_LAZY_SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, KeyCode::VK_LAZY_SHIFT_R</autogen>
        </item>
        <item>
          <name>KeyToKey</name>
          <appendix>Change 1 to A,B,C,VK_LAZY_SHIFT_L</appendix>
          <appendix>Change 2 to Control_L+VK_LAZY_SHIFT_L</appendix>
          <appendix>Change 3 to A,Control_L+VK_LAZY_SHIFT_L</appendix>
          <identifier>remap.samples_vk_lazy_keytokey</identifier>
          <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::A, KeyCode::B, KeyCode::C, KeyCode::VK_LAZY_SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::VK_LAZY_SHIFT_L, ModifierFlag::CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, KeyCode::A, KeyCode::VK_LAZY_SHIFT_L, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>KeyOverlaidModifier</name>
          <appendix>Change 1 to VK_LAZY_SHIFT_L (When type only, send Space)</appendix>
          <identifier>remap.samples_vk_lazy_keyoverlaidmodifier</identifier>
          <autogen>__KeyOverlaidModifier__ KeyCode::KEY_1, KeyCode::VK_LAZY_SHIFT_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>DoublePressModifier</name>
          <appendix>Change 1 to VK_LAZY_SHIFT_L, KEY_1 x2 to Return</appendix>
          <identifier>remap.samples_vk_lazy_doublepressmodifier</identifier>
          <autogen>__DoublePressModifier__ KeyCode::KEY_1, KeyCode::VK_LAZY_SHIFT_L, KeyCode::RETURN</autogen>
        </item>
      </item>
      <item>
        <name>VK_MOUSEKEY_*</name>
        <item>
          <name>Standard</name>
          <appendix>Change WASD to VK_MOUSEKEY_UP/LEFT/DOWN/RIGHT</appendix>
          <appendix>Change IJKL to VK_MOUSEKEY_SCROLL_UP/LEFT/DOWN/RIGHT</appendix>
          <appendix>Change F to VK_MOUSEKEY_HIGHSPEED (WASD and IJKL operations become high speed)</appendix>
          <appendix>Change 1 to VK_MOUSEKEY_BUTTON_LEFT</appendix>
          <appendix>Change 2 to VK_MOUSEKEY_BUTTON_MIDDLE</appendix>
          <appendix>Change 3 to VK_MOUSEKEY_BUTTON_RIGHT</appendix>
          <appendix>Change 4 to VK_MOUSEKEY_BUTTON_BUTTON4</appendix>
          <appendix>Change 5 to VK_MOUSEKEY_BUTTON_BUTTON5</appendix>
          <appendix>Change 6 to VK_MOUSEKEY_BUTTON_BUTTON6</appendix>
          <appendix>Change 7 to VK_MOUSEKEY_BUTTON_BUTTON7</appendix>
          <appendix>Change 8 to VK_MOUSEKEY_BUTTON_BUTTON8</appendix>
          <appendix>Change Z to VK_MOUSEKEY_BUTTON_BUTTON9</appendix>
          <appendix>Change X to VK_MOUSEKEY_BUTTON_BUTTON10</appendix>
          <appendix>Change C to VK_MOUSEKEY_BUTTON_BUTTON11</appendix>
          <appendix>Change V to VK_MOUSEKEY_BUTTON_BUTTON12</appendix>
          <appendix>Change B to VK_MOUSEKEY_BUTTON_BUTTON13</appendix>
          <appendix>Change N to VK_MOUSEKEY_BUTTON_BUTTON14</appendix>
          <appendix>Change M to VK_MOUSEKEY_BUTTON_BUTTON15</appendix>
          <appendix>Change , to VK_MOUSEKEY_BUTTON_BUTTON16</appendix>
          <identifier>remap.samples_vk_mousekeys_standard</identifier>
          <autogen>__KeyToKey__ KeyCode::W, KeyCode::VK_MOUSEKEY_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::VK_MOUSEKEY_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::S, KeyCode::VK_MOUSEKEY_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::D, KeyCode::VK_MOUSEKEY_RIGHT</autogen>

          <autogen>__KeyToKey__ KeyCode::I, KeyCode::VK_MOUSEKEY_SCROLL_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::J, KeyCode::VK_MOUSEKEY_SCROLL_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::K, KeyCode::VK_MOUSEKEY_SCROLL_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::L, KeyCode::VK_MOUSEKEY_SCROLL_RIGHT</autogen>

          <autogen>__KeyToKey__ KeyCode::F, KeyCode::VK_MOUSEKEY_HIGHSPEED</autogen>

          <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::VK_MOUSEKEY_BUTTON_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::VK_MOUSEKEY_BUTTON_MIDDLE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, KeyCode::VK_MOUSEKEY_BUTTON_RIGHT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, KeyCode::VK_MOUSEKEY_BUTTON_BUTTON4</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, KeyCode::VK_MOUSEKEY_BUTTON_BUTTON5</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, KeyCode::VK_MOUSEKEY_BUTTON_BUTTON6</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, KeyCode::VK_MOUSEKEY_BUTTON_BUTTON7</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, KeyCode::VK_MOUSEKEY_BUTTON_BUTTON8</autogen>
          <autogen>__KeyToKey__ KeyCode::Z,     KeyCode::VK_MOUSEKEY_BUTTON_BUTTON9</autogen>
          <autogen>__KeyToKey__ KeyCode::X,     KeyCode::VK_MOUSEKEY_BUTTON_BUTTON10</autogen>
          <autogen>__KeyToKey__ KeyCode::C,     KeyCode::VK_MOUSEKEY_BUTTON_BUTTON11</autogen>
          <autogen>__KeyToKey__ KeyCode::V,     KeyCode::VK_MOUSEKEY_BUTTON_BUTTON12</autogen>
          <autogen>__KeyToKey__ KeyCode::B,     KeyCode::VK_MOUSEKEY_BUTTON_BUTTON13</autogen>
          <autogen>__KeyToKey__ KeyCode::N,     KeyCode::VK_MOUSEKEY_BUTTON_BUTTON14</autogen>
          <autogen>__KeyToKey__ KeyCode::M,     KeyCode::VK_MOUSEKEY_BUTTON_BUTTON15</autogen>
          <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::VK_MOUSEKEY_BUTTON_BUTTON16</autogen>
        </item>
        <item>
          <name>Extra</name>
          <appendix>Change WASD to Shift_L+VK_MOUSEKEY_UP/LEFT/DOWN/RIGHT</appendix>
          <appendix>Change IJKL to Shift_L+VK_MOUSEKEY_SCROLL_UP/LEFT/DOWN/RIGHT</appendix>
          <appendix>Change F to Shift_L+VK_MOUSEKEY_HIGHSPEED</appendix>
          <appendix>Change 1 to Shift_L+VK_MOUSEKEY_BUTTON_LEFT</appendix>
          <appendix>Change 2 to A,VK_MOUSEKEY_BUTTON_LEFT</appendix>
          <appendix>Change 3 to A,Shift_L+VK_MOUSEKEY_BUTTON_LEFT</appendix>
          <identifier>remap.samples_vk_mousekeys_extra</identifier>
          <autogen>__KeyToKey__ KeyCode::W, KeyCode::VK_MOUSEKEY_UP,    ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::VK_MOUSEKEY_LEFT,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::S, KeyCode::VK_MOUSEKEY_DOWN,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::D, KeyCode::VK_MOUSEKEY_RIGHT, ModifierFlag::SHIFT_L</autogen>

          <autogen>__KeyToKey__ KeyCode::I, KeyCode::VK_MOUSEKEY_SCROLL_UP,    ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::J, KeyCode::VK_MOUSEKEY_SCROLL_LEFT,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::K, KeyCode::VK_MOUSEKEY_SCROLL_DOWN,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::L, KeyCode::VK_MOUSEKEY_SCROLL_RIGHT, ModifierFlag::SHIFT_L</autogen>

          <autogen>__KeyToKey__ KeyCode::F, KeyCode::VK_MOUSEKEY_HIGHSPEED, ModifierFlag::SHIFT_L</autogen>

          <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::VK_MOUSEKEY_BUTTON_LEFT, ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::A, KeyCode::VK_MOUSEKEY_BUTTON_LEFT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, KeyCode::A, KeyCode::VK_MOUSEKEY_BUTTON_LEFT, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Extra2</name>
          <appendix>Change WASD to A,Shift_L+VK_MOUSEKEY_UP/LEFT/DOWN/RIGHT</appendix>
          <appendix>Change IJKL to A,Shift_L+VK_MOUSEKEY_SCROLL_UP/LEFT/DOWN/RIGHT</appendix>
          <appendix>Change F to A,Shift_L+VK_MOUSEKEY_HIGHSPEED</appendix>
          <identifier>remap.samples_vk_mousekeys_extra2</identifier>
          <autogen>__KeyToKey__ KeyCode::W, KeyCode::A, KeyCode::VK_MOUSEKEY_UP,    ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::A, KeyCode::VK_MOUSEKEY_LEFT,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::S, KeyCode::A, KeyCode::VK_MOUSEKEY_DOWN,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::D, KeyCode::A, KeyCode::VK_MOUSEKEY_RIGHT, ModifierFlag::SHIFT_L</autogen>

          <autogen>__KeyToKey__ KeyCode::I, KeyCode::A, KeyCode::VK_MOUSEKEY_SCROLL_UP,    ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::J, KeyCode::A, KeyCode::VK_MOUSEKEY_SCROLL_LEFT,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::K, KeyCode::A, KeyCode::VK_MOUSEKEY_SCROLL_DOWN,  ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::L, KeyCode::A, KeyCode::VK_MOUSEKEY_SCROLL_RIGHT, ModifierFlag::SHIFT_L</autogen>

          <autogen>__KeyToKey__ KeyCode::F, KeyCode::A, KeyCode::VK_MOUSEKEY_HIGHSPEED, ModifierFlag::SHIFT_L</autogen>
        </item>
      </item>
      <item>
        <name>VK_CHANGE_INPUTSOURCE_*</name>
        <appendix>Use 1 to VK_CHANGE_INPUTSOURCE_ENGLISH</appendix>
        <appendix>Use 2 to VK_CHANGE_INPUTSOURCE_FRENCH</appendix>
        <appendix>Use 3 to VK_CHANGE_INPUTSOURCE_GERMAN</appendix>
        <appendix>Use 4 to VK_CHANGE_INPUTSOURCE_JAPANESE</appendix>
        <appendix>Use 5 to VK_CHANGE_INPUTSOURCE_SWEDISH</appendix>
        <appendix>Use 6 to VK_CHANGE_INPUTSOURCE_CANADIAN</appendix>
        <appendix>Use 7 to VK_CHANGE_INPUTSOURCE_RUSSIAN</appendix>
        <appendix>Use 8 to VK_CHANGE_INPUTSOURCE_RUSSIAN_TYPOGRAPHIC</appendix>
        <appendix>Use 9 to VK_CHANGE_INPUTSOURCE_ENGLISH_TYPOGRAPHIC</appendix>
        <appendix>Use 0 to VK_CHANGE_INPUTSOURCE_TRADITIONAL_CHINESE_YAHOO_KEYKEY</appendix>
        <appendix>Use Q to VK_CHANGE_INPUTSOURCE_ESTONIAN</appendix>
        <appendix>Use W to VK_CHANGE_INPUTSOURCE_FINNISH</appendix>
        <appendix>Use E to VK_CHANGE_INPUTSOURCE_THAI</appendix>
        <appendix>Use R to VK_CHANGE_INPUTSOURCE_DVORAK</appendix>
        <appendix>Use T to VK_CHANGE_INPUTSOURCE_COLEMAK</appendix>
        <identifier>remap.samples_vk_change_inputsource</identifier>
        <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::VK_CHANGE_INPUTSOURCE_FRENCH</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_3, KeyCode::VK_CHANGE_INPUTSOURCE_GERMAN</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_4, KeyCode::VK_CHANGE_INPUTSOURCE_JAPANESE</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_5, KeyCode::VK_CHANGE_INPUTSOURCE_SWEDISH</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_6, KeyCode::VK_CHANGE_INPUTSOURCE_CANADIAN</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_7, KeyCode::VK_CHANGE_INPUTSOURCE_RUSSIAN</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_8, KeyCode::VK_CHANGE_INPUTSOURCE_RUSSIAN_TYPOGRAPHIC</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_9, KeyCode::VK_CHANGE_INPUTSOURCE_ENGLISH_TYPOGRAPHIC</autogen>
        <autogen>__KeyToKey__ KeyCode::KEY_0, KeyCode::VK_CHANGE_INPUTSOURCE_TRADITIONAL_CHINESE_YAHOO_KEYKEY</autogen>
        <autogen>__KeyToKey__ KeyCode::Q,     KeyCode::VK_CHANGE_INPUTSOURCE_ESTONIAN</autogen>
        <autogen>__KeyToKey__ KeyCode::W,     KeyCode::VK_CHANGE_INPUTSOURCE_FINNISH</autogen>
        <autogen>__KeyToKey__ KeyCode::E,     KeyCode::VK_CHANGE_INPUTSOURCE_THAI</autogen>
        <autogen>__KeyToKey__ KeyCode::R,     KeyCode::VK_CHANGE_INPUTSOURCE_DVORAK</autogen>
        <autogen>__KeyToKey__ KeyCode::T,     KeyCode::VK_CHANGE_INPUTSOURCE_COLEMAK</autogen>
      </item>
      <item>
        <name>VK_CONFIG</name>
        <item>
          <name></name>
          <appendix>Use A to VK_CONFIG_TOGGLE</appendix>
          <appendix>Use S to VK_CONFIG_FORCE_ON</appendix>
          <appendix>Use D to VK_CONFIG_FORCE_OFF</appendix>
          <appendix>Use F to VK_CONFIG_SYNC_KEYDOWNUP</appendix>
          <appendix>Use G to Shift_L+VK_CONFIG_SYNC_KEYDOWNUP</appendix>
          <appendix>Use H to A,VK_CONFIG_SYNC_KEYDOWNUP</appendix>
          <appendix>Use J to A,Shift_L+VK_CONFIG_SYNC_KEYDOWNUP</appendix>
          <identifier>remap.samples_vk_config</identifier>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::VK_CONFIG_TOGGLE_notsave_samples_vk_config</autogen>
          <autogen>__KeyToKey__ KeyCode::S, KeyCode::VK_CONFIG_FORCE_ON_notsave_samples_vk_config</autogen>
          <autogen>__KeyToKey__ KeyCode::D, KeyCode::VK_CONFIG_FORCE_OFF_notsave_samples_vk_config</autogen>
          <autogen>__KeyToKey__ KeyCode::F, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_samples_vk_config</autogen>
          <autogen>__KeyToKey__ KeyCode::G, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_samples_vk_config, ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::H, KeyCode::A, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_samples_vk_config</autogen>
          <autogen>__KeyToKey__ KeyCode::J, KeyCode::A, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_samples_vk_config, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name></name>
          <identifier vk_config="true">notsave.samples_vk_config</identifier>
          <autogen>__ShowStatusMessage__ VK_CONFIG</autogen>
        </item>
      </item>
      <item>
        <name>VK_CONSUMERKEY</name>
        <item>
          <name>Standard</name>
          <appendix>Use 1 to VK_CONSUMERKEY_BRIGHTNESS_DOWN</appendix>
          <appendix>Use 2 to VK_CONSUMERKEY_BRIGHTNESS_UP</appendix>
          <appendix>Use 3 to VK_CONSUMERKEY_KEYBOARDLIGHT_LOW</appendix>
          <appendix>Use 4 to VK_CONSUMERKEY_KEYBOARDLIGHT_HIGH</appendix>
          <appendix>Use 5 to VK_CONSUMERKEY_MUSIC_PREV</appendix>
          <appendix>Use 6 to VK_CONSUMERKEY_MUSIC_PLAY</appendix>
          <appendix>Use 7 to VK_CONSUMERKEY_MUSIC_NEXT</appendix>
          <appendix>Use 8 to VK_CONSUMERKEY_VOLUME_MUTE</appendix>
          <appendix>Use 9 to VK_CONSUMERKEY_VOLUME_DOWN</appendix>
          <appendix>Use 0 to VK_CONSUMERKEY_VOLUME_UP</appendix>
          <appendix>Use q to VK_CONSUMERKEY_EJECT</appendix>
          <appendix>Use w to VK_CONSUMERKEY_POWER</appendix>
          <identifier>remap.samples_vk_consumerkey</identifier>
          <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_3, KeyCode::VK_CONSUMERKEY_KEYBOARDLIGHT_LOW</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_4, KeyCode::VK_CONSUMERKEY_KEYBOARDLIGHT_HIGH</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_5, KeyCode::VK_CONSUMERKEY_MUSIC_PREV</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_6, KeyCode::VK_CONSUMERKEY_MUSIC_PLAY</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_7, KeyCode::VK_CONSUMERKEY_MUSIC_NEXT</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_8, KeyCode::VK_CONSUMERKEY_VOLUME_MUTE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_9, KeyCode::VK_CONSUMERKEY_VOLUME_DOWN</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_0, KeyCode::VK_CONSUMERKEY_VOLUME_UP</autogen>
          <autogen>__KeyToKey__ KeyCode::Q,     KeyCode::VK_CONSUMERKEY_EJECT</autogen>
          <autogen>__KeyToKey__ KeyCode::W,     KeyCode::VK_CONSUMERKEY_POWER</autogen>
        </item>
        <item>
          <name>Combination with key repeat</name>
          <appendix>Use 1 to VK_CONSUMERKEY_BRIGHTNESS_DOWN, Space</appendix>
          <appendix>Use 2 to VK_CONSUMERKEY_BRIGHTNESS_UP, Space</appendix>
          <identifier>remap.samples_vk_consumerkey_combination</identifier>
          <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_DOWN, KeyCode::SPACE</autogen>
          <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_UP, KeyCode::SPACE</autogen>
        </item>
      </item>
      <item>
        <name>VK_JIS_TOGGLE_EISUU_KANA</name>
        <appendix>A to KANA/EISUU (toggle)</appendix>
        <appendix>Command_L to KANA/EISUU (toggle)</appendix>
        <appendix>Command_R to Command_R (When type only, send send KANA/EISUU (toggle))</appendix>
        <identifier>remap.samples_vk_jis_toggle_eisuu_kana</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
        <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
        <autogen>__KeyOverlaidModifier__ KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      </item>
      <item>
        <name>VK_JIS_BACKSLASH</name>
        <appendix>Use A as JIS_BACKSLASH</appendix>
        <identifier>remap.samples_a2jisbackslash</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::VK_JIS_BACKSLASH</autogen>
      </item>
      <item>
        <name>VK_JIS_YEN</name>
        <appendix>Use A as JIS_YEN</appendix>
        <identifier>remap.samples_a2jisyen</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::VK_JIS_YEN</autogen>
      </item>
      <item>
        <name>VK_JIS_TEMPORARY_ROMAN</name>
        <appendix>Use A as A,VK_JIS_TEMPORARY_ROMAN,I,U</appendix>
        <appendix>Use B as VK_JIS_TEMPORARY_ROMAN,A,I,U</appendix>
        <identifier>remap.samples_vk_jis_temporary_roman</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::A, KeyCode::VK_JIS_TEMPORARY_ROMAN, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::VK_JIS_TEMPORARY_ROMAN, KeyCode::A, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
      </item>
      <item>
        <name>VK_JIS_TEMPORARY_HIRAGANA</name>
        <appendix>Use A as A,VK_JIS_TEMPORARY_HIRAGANA,I,U</appendix>
        <appendix>Use B as VK_JIS_TEMPORARY_HIRAGANA,A,I,U</appendix>
        <identifier>remap.samples_vk_jis_temporary_hiragana</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::A, KeyCode::VK_JIS_TEMPORARY_HIRAGANA, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::VK_JIS_TEMPORARY_HIRAGANA, KeyCode::A, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
      </item>
      <item>
        <name>VK_JIS_TEMPORARY_KATAKANA</name>
        <appendix>Use A as A,VK_JIS_TEMPORARY_KATAKANA,I,U</appendix>
        <appendix>Use B as VK_JIS_TEMPORARY_KATAKANA,A,I,U</appendix>
        <identifier>remap.samples_vk_jis_temporary_katakana</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::A, KeyCode::VK_JIS_TEMPORARY_KATAKANA, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::VK_JIS_TEMPORARY_KATAKANA, KeyCode::A, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
      </item>
      <item>
        <name>VK_JIS_TEMPORARY_AINU</name>
        <appendix>Use A as A,VK_JIS_TEMPORARY_AINU,I,U</appendix>
        <appendix>Use B as VK_JIS_TEMPORARY_AINU,A,I,U</appendix>
        <identifier>remap.samples_vk_jis_temporary_ainu</identifier>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::A, KeyCode::VK_JIS_TEMPORARY_AINU, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::VK_JIS_TEMPORARY_AINU, KeyCode::A, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
      </item>
    </item>
  </item>
</root>
