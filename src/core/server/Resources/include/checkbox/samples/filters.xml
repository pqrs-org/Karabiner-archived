<?xml version="1.0"?>
<root>
  <item>
    <name>Filters</name>
    <!-- application only -->
    <item>
      <name>application</name>
      <appendix>A to B if application == TERMINAL (KeyToKey)</appendix>
      <appendix>A to C if application != TERMINAL (KeyToKey)</appendix>
      <appendix>Volume Mute to B if application == TERMINAL (ConsumerToKey)</appendix>
      <appendix>Volume Mute to C if application != TERMINAL (ConsumerToKey)</appendix>
      <identifier>remap.samples_application</identifier>
      <block>
        <only>TERMINAL</only>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::B</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, KeyCode::B</autogen>
      </block>
      <block>
        <not>TERMINAL</not>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::C</autogen>
        <autogen>__ConsumerToKey__ ConsumerKeyCode::VOLUME_MUTE, KeyCode::C</autogen>
      </block>
    </item>

    <!-- Device only -->
    <item>
      <name>Device only</name>
      <appendix>A to B if (VendorID,ProductID) == (0x5ac,0x21a) or (0x5ac,0x222)</appendix>
      <appendix>A to C unless (VendorID,ProductID) == (0x5ac,0x21a) or (0x5ac,0x222)</appendix>
      <appendix>S to Tab if VendorID == DeviceVendor::APPLE_COMPUTER (DeviceProduct::ANY)</appendix>
      <appendix>S to Space unless VendorID == DeviceVendor::APPLE_COMPUTER (DeviceProduct::ANY)</appendix>
      <appendix>Disable ScrollWheel on Pixart_Imaging_Inc_Optical_Mouse_0x2510 with LocationID:EXAMPLE_USB_BUS_1</appendix>
      <appendix></appendix>
      <appendix>* (0x5ac,0x21a) is MacBookPro2,1</appendix>
      <appendix>* (0x5ac,0x222) is Apple Aluminum Keyboard (JIS)</appendix>
      <identifier>remap.samples_device</identifier>
      <block>
        <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a, DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_ALUMINUM_KEYBOARD_JIS</device_only>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::B</autogen>
      </block>
      <block>
        <device_not>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a, DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_ALUMINUM_KEYBOARD_JIS</device_not>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::C</autogen>
      </block>
      <block>
        <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::ANY</device_only>
        <autogen>__KeyToKey__ KeyCode::S, KeyCode::TAB</autogen>
      </block>
      <block>
        <device_not>DeviceVendor::APPLE_COMPUTER,DeviceProduct::ANY</device_not>
        <autogen>__KeyToKey__ KeyCode::S, KeyCode::SPACE</autogen>
      </block>
      <block>
        <device_only>
          DeviceVendor::Pixart_Imaging_Inc,
          DeviceProduct::Pixart_Imaging_Inc_Optical_Mouse_0x2510,
          DeviceLocation::EXAMPLE_USB_BUS_1
        </device_only>
        <autogen>__DropScrollWheel__</autogen>
      </block>
    </item>

    <!-- Config only -->
    <item>
      <name>Config only</name>
      <item>
        <name>Core</name>
        <identifier>remap.samples_config</identifier>
        <appendix>A to 1 if samples_config_mode1 == active</appendix>
        <appendix>B to 2 if samples_config_mode1 or samples_config_mode2 == active</appendix>
        <appendix>A to 3 if samples_config_mode1 != active</appendix>
        <appendix>B to 4 if samples_config_mode1 and samples_config_mode2 != active</appendix>
        <appendix>C to 5</appendix>
        <block>
          <config_only>option.samples_config_mode1</config_only>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::KEY_1</autogen>
        </block>
        <block>
          <config_only>option.samples_config_mode1, option.samples_config_mode2</config_only>
          <autogen>__KeyToKey__ KeyCode::B, KeyCode::KEY_2</autogen>
        </block>
        <block>
          <config_not>option.samples_config_mode1</config_not>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::KEY_3</autogen>
        </block>
        <block>
          <config_not>option.samples_config_mode1, option.samples_config_mode2</config_not>
          <autogen>__KeyToKey__ KeyCode::B, KeyCode::KEY_4</autogen>
        </block>
        <block>
          <autogen>__KeyToKey__ KeyCode::C, KeyCode::KEY_5</autogen>
        </block>
      </item>
      <item>
        <name>Config only mode1</name>
        <identifier vk_config="true">option.samples_config_mode1</identifier>
      </item>
      <item>
        <name>Config only mode2</name>
        <identifier>option.samples_config_mode2</identifier>
      </item>
      <item><name>──────────────────────────────</name></item>
      <item>
        <name>With KEYTOKEY_BEFORE_KEYDOWN, KEYTOKEY_AFTER_KEYUP</name>
        <appendix>Space to Tab (And Before A, After B)</appendix>
        <appendix>(If you type Space key, a sequence of "A,Tab,B" is fired.)</appendix>
        <identifier>remap.samples_config_before_keydown</identifier>

        <config_not>option.samples_config_mode1</config_not>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB,
          Option::KEYTOKEY_BEFORE_KEYDOWN, KeyCode::VK_CONFIG_FORCE_ON_option_samples_config_mode1, KeyCode::A,
          Option::KEYTOKEY_AFTER_KEYUP, KeyCode::VK_CONFIG_FORCE_OFF_option_samples_config_mode1, KeyCode::B
        </autogen>
      </item>
    </item>

    <!-- inputsource only -->
    <!-- inputsource not -->
    <item>
      <name>Input Source</name>
      <item>
        <name>bépo</name>
        <item>
          <name>inputsource_only (bépo-*)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_bepo</identifier>
          <inputsource_only>BEPO</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (bépo-normal)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_bepo</identifier>
          <inputsourcedetail_only>BEPO</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (bépo-AzertyCmd)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_bepo_azertycmd</identifier>
          <inputsourcedetail_only>BEPO_AZERTYCMD</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (bépo-AzertyCmdRoman)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_bepo_azertycmdroman</identifier>
          <inputsourcedetail_only>BEPO_AZERTYCMDROMAN</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (bépo-QwertyCmd)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_bepo_qwertycmd</identifier>
          <inputsourcedetail_only>BEPO_QWERTYCMD</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (bépo-QwertyCmdRoman)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_bepo_qwertycmdroman</identifier>
          <inputsourcedetail_only>BEPO_QWERTYCMDROMAN</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (bépo-QwertzCmd)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_bepo_qwertzcmd</identifier>
          <inputsourcedetail_only>BEPO_QWERTZCMD</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (bépo-QwertzCmdRoman)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_bepo_qwertzcmdroman</identifier>
          <inputsourcedetail_only>BEPO_QWERTZCMDROMAN</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (bépo-Roman)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_bepo_roman</identifier>
          <inputsourcedetail_only>BEPO_ROMAN</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
      </item>
      <item>
        <name>inputsource_only (Chinese Traditional-*)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_tradchinese</identifier>
        <inputsource_only>CHINESE_TRADITIONAL</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsourcedetail_only (Chinese Traditional Yahoo! KeyKey)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_tradchinese_yahoo_keykey</identifier>
        <inputsourcedetail_only>CHINESE_TRADITIONAL_YAHOO_KEYKEY</inputsourcedetail_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (Chinese Simplified-*)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_simpchinese</identifier>
        <inputsource_only>CHINESE_SIMPLIFIED</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (Canadian)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_canadian</identifier>
        <inputsource_only>CANADIAN</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>Dvorak</name>
        <item>
          <name>inputsource_only (Dvorak-*)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_dvorak</identifier>
          <inputsource_only>DVORAK</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (Dvorak-normal)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_dvorak</identifier>
          <inputsourcedetail_only>DVORAK</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (Dvorak-Left)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_dvorak_left</identifier>
          <inputsourcedetail_only>DVORAK_LEFT</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (Dvorak-QwertyCmd)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_dvorak_qwertycmd</identifier>
          <inputsourcedetail_only>DVORAK_QWERTYCMD</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (Dvorak-Right)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_dvorak_right</identifier>
          <inputsourcedetail_only>DVORAK_RIGHT</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
      </item>
      <item>
        <name>inputsource_only (English)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_roman</identifier>
        <inputsource_only>ENGLISH</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (Finnish)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_finnish</identifier>
        <inputsource_only>FINNISH</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (French-*)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_french</identifier>
        <inputsource_only>FRENCH</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>Japanese</name>
        <item>
          <name>inputsource_only (Japanese-*)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_japanese</identifier>
          <inputsource_only>JAPANESE</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsource_not (Japanese-*)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_not_japanese</identifier>
          <inputsource_not>JAPANESE</inputsource_not>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (Japanese-Hiragana)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_japanese_hiragana</identifier>
          <!-- We need to set both JAPANESE_HIRAGANA and JAPANESE -->
          <inputsourcedetail_only>JAPANESE_HIRAGANA, JAPANESE</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_not (Japanese-Hiragana)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_not_japanese_hiragana</identifier>
          <!-- We need to set both JAPANESE_HIRAGANA and JAPANESE -->
          <inputsourcedetail_not>JAPANESE_HIRAGANA, JAPANESE</inputsourcedetail_not>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (Japanese-Katakana)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_japanese_katakana</identifier>
          <inputsourcedetail_only>JAPANESE_KATAKANA</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (Japanese-Full-width Roman)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_japanese_fullwidth_roman</identifier>
          <inputsourcedetail_only>JAPANESE_FULLWIDTH_ROMAN</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (Japanese-Half-width Katakana)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_japanese_halfwidth_kana</identifier>
          <inputsourcedetail_only>JAPANESE_HALFWIDTH_KANA</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (JANSI)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_roman_jansi</identifier>
          <inputsourcedetail_only>JANSI</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>Enforce roman input at semicolon(;).</name>
          <identifier>remap.samples_inputsource_semicolon</identifier>
          <inputsource_only>JAPANESE</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::SEMICOLON,
            Option::KEYTOKEY_BEFORE_KEYDOWN, KeyCode::JIS_EISUU,
            Option::KEYTOKEY_AFTER_KEYUP, KeyCode::JIS_KANA
          </autogen>
        </item>
      </item>
      <item>
        <name>inputsource_only (Korean-*)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_korean</identifier>
        <inputsource_only>KOREAN</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>Polish</name>
        <item>
          <name>inputsource_only (Polish-*)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsource_polish</identifier>
          <inputsource_only>POLISH</inputsource_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (Polish)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_polish</identifier>
          <inputsourcedetail_only>POLISH</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>inputsourcedetail_only (Polish Pro)</name>
          <appendix>Space to Tab</appendix>
          <identifier>remap.samples_inputsourcedetail_polishpro</identifier>
          <inputsourcedetail_only>POLISH_PRO</inputsourcedetail_only>
          <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
        </item>
      </item>
      <item>
        <name>inputsource_only (Swedish)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_swedish</identifier>
        <inputsource_only>SWEDISH</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (Russian)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_russian</identifier>
        <inputsource_only>RUSSIAN</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (Thai)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_thai</identifier>
        <inputsource_only>THAI</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (German)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_german</identifier>
        <inputsource_only>GERMAN</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (Slovenian)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_slovenian</identifier>
        <inputsource_only>SLOVENIAN</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (Czech)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_czech</identifier>
        <inputsource_only>CZECH</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (British)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_british</identifier>
        <inputsource_only>BRITISH</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (Bulgarian)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_bulgarian</identifier>
        <inputsource_only>BULGARIAN</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (Swiss)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_swiss</identifier>
        <inputsource_only>SWISS</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (Croatian)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_croatian</identifier>
        <inputsource_only>CROATIAN</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (Hungarian)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_hungarian</identifier>
        <inputsource_only>HUNGARIAN</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (Norwegian)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_norwegian</identifier>
        <inputsource_only>NORWEGIAN</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
      <item>
        <name>inputsource_only (Ukrainian)</name>
        <appendix>Space to Tab</appendix>
        <identifier>remap.samples_inputsource_ukrainian</identifier>
        <inputsource_only>UKRAINIAN</inputsource_only>
        <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
      </item>
    </item>

    <item>
      <name>Modifier</name>
      <item>
        <name>Note:</name>
        <appendix>We cannot use VK_COMMAND,VK_CONTROL,VK_OPTION,VK_SHIFT in</appendix>
        <appendix>&lt;modifier_only&gt;, &lt;modifier_not&gt;.</appendix>
        <appendix></appendix>
        <appendix>Expand these to ModifierFlags.</appendix>
        <appendix>Example: &lt;modifier_only&gt;ModifierFlag::SHIFT_L, ModifierFlag::SHIFT_R&lt;/modifier_only&gt;</appendix>
      </item>
      <item>
        <name>Standard</name>
        <appendix>A to B if Command_L or Option_L is pressed.</appendix>
        <appendix>  // Command_L+A to Command_L+B</appendix>
        <appendix>  // Option_L+A to Option_L+B</appendix>
        <appendix>  // Command_L+Option_L+A to Command_L+Option_L+B</appendix>
        <appendix>  // Command_L+Shift_L+A to Command_L+Shift_L+B</appendix>
        <appendix></appendix>
        <appendix>A to C unless Shift_L or Control_L is pressed.</appendix>
        <appendix>  // A to C</appendix>
        <appendix>  // Shift_R+A to Shift_R+C</appendix>
        <appendix>  // Control_L+A to Control_L+A</appendix>
        <appendix>  // Shift_L+A to Shift_L+A</appendix>
        <appendix>  // Shift_L+Command_R+A to Shift_L+Command_R+A</appendix>
        <identifier>remap.samples_modifier_standard</identifier>
        <block>
          <modifier_only>ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L</modifier_only>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::B</autogen>
        </block>
        <block>
          <modifier_not>ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L</modifier_not>
          <autogen>__KeyToKey__ KeyCode::A, KeyCode::C</autogen>
        </block>
      </item>
      <item>
        <name>Combination</name>
        <appendix>B to D if "Control_L+Option_L" or "Command_L+Option_L" is pressed.</appendix>
        <appendix>  // Control_L+Option_L+B to Control_L+Option_L+D</appendix>
        <appendix>  // Command_L+Option_L+B to Command_L+Option_L+D</appendix>
        <appendix>  // Command_L+Option_L+Shift_L+B to Command_L+Option_L+Shift_L+D</appendix>
        <appendix></appendix>
        <appendix>B to E unless "COMMAND_L+SHIFT_L" or "COMMAND_L+SHIFT_R" is pressed.</appendix>
        <appendix>  // B to E</appendix>
        <appendix>  // Command_L+B to Command_L+E</appendix>
        <appendix>  // Command_L+Shift_L+B to Command_L+Shift_L+B</appendix>
        <appendix>  // Command_L+Shift_R+B to Command_L+Shift_R+B</appendix>
        <identifier>remap.samples_modifier_combination</identifier>
        <block>
          <modifier_only>ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L</modifier_only>
          <autogen>__KeyToKey__ KeyCode::B, KeyCode::D</autogen>
        </block>
        <block>
          <modifier_not>ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_R</modifier_not>
          <autogen>__KeyToKey__ KeyCode::B, KeyCode::E</autogen>
        </block>
      </item>
      <item>
        <name>With ModifierFlag::NONE</name>
        <appendix>C to F if Shift_L is pressed. (And no other modifiers are pressed.)</appendix>
        <appendix>  // C to C</appendix>
        <appendix>  // Shift_L+C to Shift_L+F</appendix>
        <appendix>  // Command_L+Shift_L+C to Command_L+Shift_L+C</appendix>
        <identifier>remap.samples_modifier_with_none</identifier>
        <block>
          <modifier_only>ModifierFlag::SHIFT_L | ModifierFlag::NONE</modifier_only>
          <autogen>__KeyToKey__ KeyCode::C, KeyCode::F</autogen>
        </block>
      </item>
    </item>

    <!-- block -->
    <item>
      <name>block sample</name>
      <appendix>A to B if application == Terminal (KeyToKey)</appendix>
      <appendix>B to D if application == Terminal (KeyToKey)</appendix>
      <appendix>A to C if application == Safari (KeyToKey)</appendix>
      <appendix>B to E if application == Safari (KeyToKey)</appendix>
      <appendix>(Keep A and B on other apps.)</appendix>
      <appendix>──────────────────────────────</appendix>
      <appendix>Shift+C to Y</appendix>
      <appendix>Shift+D to Z</appendix>
      <appendix>──────────────────────────────</appendix>
      <appendix>Option+C to Option+1 if application == Terminal</appendix>
      <appendix>Command+C to Command+3 if application == Terminal</appendix>
      <appendix>──────────────────────────────</appendix>
      <appendix>Option+C to Option+2 if application == Safari</appendix>
      <appendix>Command+C to Command+4 if application == Safari</appendix>
      <appendix>(Keep Option+C and Command+C on other apps.)</appendix>
      <identifier>remap.samples_block</identifier>
      <block>
        <only>TERMINAL</only>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::B</autogen>
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::D</autogen>
      </block>
      <block>
        <only>SAFARI</only>
        <autogen>__KeyToKey__ KeyCode::A, KeyCode::C</autogen>
        <autogen>__KeyToKey__ KeyCode::B, KeyCode::E</autogen>
      </block>
      <autogen>__KeyToKey__ KeyCode::C, VK_SHIFT, KeyCode::Y</autogen>
      <autogen>__KeyToKey__ KeyCode::D, VK_SHIFT, KeyCode::Z</autogen>
      <block>
        <only>TERMINAL</only>
        <block>
          <modifier_only>ModifierFlag::OPTION_L, ModifierFlag::OPTION_R</modifier_only>
          <autogen>__KeyToKey__ KeyCode::C, KeyCode::KEY_1</autogen>
        </block>
        <block>
          <modifier_only>ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R</modifier_only>
          <autogen>__KeyToKey__ KeyCode::C, KeyCode::KEY_2</autogen>
        </block>
      </block>
      <block>
        <only>SAFARI</only>
        <block>
          <modifier_only>ModifierFlag::OPTION_L, ModifierFlag::OPTION_R</modifier_only>
          <autogen>__KeyToKey__ KeyCode::C, KeyCode::KEY_3</autogen>
        </block>
        <block>
          <modifier_only>ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R</modifier_only>
          <autogen>__KeyToKey__ KeyCode::C, KeyCode::KEY_4</autogen>
        </block>
      </block>
    </item>
  </item>
</root>
